\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Nov 12 17:48:20 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Tue Nov 12 17:48:20 CET 2019
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.2
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.2
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "146")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "anonOut_heap,heap_Before_METHOD,savedHeap_Before_METHOD,e1_Before_METHOD#17,e2_Before_METHOD#18,e3_Before_METHOD#19,a_Before_METHOD#20,exc#16,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f,anonIn_heap,anonIn_e1,anonIn_e2,anonIn_e3,anonIn_a"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "exc#16_1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,0,1,0,1"))
(rule "shift_paren_or" (formula "3"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_2" (formula "6") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
(rule "assignment_array2" (formula "6"))
(branch "Normal Execution (a != null)"
    (builtin "One Step Simplification" (formula "6"))
   (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "6") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2"))
   (rule "assignment_array2" (formula "6"))
   (branch "Normal Execution (a != null)"
       (builtin "One Step Simplification" (formula "6"))
      (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "6") (term "0,1,0"))
      (rule "less_than_comparison_simple" (formula "6") (term "1"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "ifSplit" (formula "6"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "t"))
         (rule "assignment_array2" (formula "7"))
         (branch "Normal Execution (a != null)"
             (builtin "One Step Simplification" (formula "7"))
            (rule "replaceKnownSelect_taclet0_0" (formula "7") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "7") (term "0,1,0"))
            (rule "eval_order_array_access3" (formula "7") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "7") (term "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr"))
            (rule "assignment" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "variableDeclarationAssign" (formula "7") (term "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "variableDeclarationAssign" (formula "7") (term "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_4"))
            (rule "assignment_array2" (formula "7"))
            (branch "Normal Execution (a != null)"
                (builtin "One Step Simplification" (formula "7"))
               (rule "replaceKnownSelect_taclet00_2" (formula "7") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "7") (term "0,1,0"))
               (rule "assignment_to_primitive_array_component" (formula "7"))
               (branch "Normal Execution (x_arr != null)"
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "assignment_to_primitive_array_component" (formula "7"))
                  (branch "Normal Execution (a != null)"
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_5"))
                     (rule "compound_less_than_comparison_2" (formula "7") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
                     (rule "variableDeclarationAssign" (formula "7") (term "1"))
                     (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "7") (term "1"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "variableDeclarationAssign" (formula "7") (term "1"))
                     (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_7"))
                     (rule "assignment_array2" (formula "7"))
                     (branch "Normal Execution (a != null)"
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "pullOutSelect" (formula "7") (term "0,1,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_7" (formula "1") (term "2,0"))
                        (rule "less_than_comparison_simple" (formula "9") (term "1"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "ifSplit" (formula "9"))
                        (branch "if x_5 true"
                            (builtin "One Step Simplification" (formula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eval_order_array_access3" (formula "10") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "10") (term "1"))
                           (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_1"))
                           (rule "assignment" (formula "10") (term "1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "variableDeclarationAssign" (formula "10") (term "1"))
                           (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_8"))
                           (rule "assignment" (formula "10") (term "1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "variableDeclarationAssign" (formula "10") (term "1"))
                           (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_9"))
                           (rule "assignment_array2" (formula "10"))
                           (branch "Normal Execution (a != null)"
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "replaceKnownSelect_taclet00000000_4" (formula "10") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "10"))
                              (branch "Normal Execution (x_arr_1 != null)"
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "assignment_to_primitive_array_component" (formula "10"))
                                 (branch "Normal Execution (a != null)"
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "tryEmpty" (formula "10") (term "1"))
                                    (rule "blockEmptyLabel" (formula "10") (term "1"))
                                    (rule "blockEmpty" (formula "10") (term "1"))
                                    (rule "methodCallEmpty" (formula "10") (term "1"))
                                    (rule "emptyModality" (formula "10") (term "1"))
                                     (opengoal " ")
                                 )
                                 (branch "Null Reference (a = null)"
                                     (opengoal " ")
                                 )
                                 (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
                                     (opengoal " ")
                                 )
                              )
                              (branch "Null Reference (x_arr_1 = null)"
                                  (opengoal " ")
                              )
                              (branch "Index Out of Bounds (x_arr_1 != null, but x_8 Out of Bounds!)"
                                  (opengoal " ")
                              )
                           )
                           (branch "Null Reference (a = null)"
                               (opengoal " ")
                           )
                           (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
                               (opengoal " ")
                           )
                        )
                        (branch "if x_5 false"
                            (builtin "One Step Simplification" (formula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "tryEmpty" (formula "10") (term "1"))
                           (rule "blockEmptyLabel" (formula "10") (term "1"))
                           (rule "blockEmpty" (formula "10") (term "1"))
                           (rule "methodCallEmpty" (formula "10") (term "1"))
                           (rule "emptyModality" (formula "10") (term "1"))
                            (opengoal " ")
                        )
                     )
                     (branch "Null Reference (a = null)"
                         (opengoal " ")
                     )
                     (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
                         (opengoal " ")
                     )
                  )
                  (branch "Null Reference (a = null)"
                      (opengoal " ")
                  )
                  (branch "Index Out of Bounds (a != null, but e2 Out of Bounds!)"
                      (opengoal " ")
                  )
               )
               (branch "Null Reference (x_arr = null)"
                   (opengoal " ")
               )
               (branch "Index Out of Bounds (x_arr != null, but x_3 Out of Bounds!)"
                   (opengoal " ")
               )
            )
            (branch "Null Reference (a = null)"
                (opengoal " ")
            )
            (branch "Index Out of Bounds (a != null, but e2 Out of Bounds!)"
                (opengoal " ")
            )
         )
         (branch "Null Reference (a = null)"
             (opengoal " ")
         )
         (branch "Index Out of Bounds (a != null, but e3 Out of Bounds!)"
             (opengoal " ")
         )
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "tryEmpty" (formula "7") (term "1"))
         (rule "blockEmptyLabel" (formula "7") (term "1"))
         (rule "blockEmpty" (formula "7") (term "1"))
         (rule "methodCallEmpty" (formula "7") (term "1"))
         (rule "emptyModality" (formula "7") (term "1"))
          (opengoal " ")
      )
   )
   (branch "Null Reference (a = null)"
       (opengoal " ")
   )
   (branch "Index Out of Bounds (a != null, but e2 Out of Bounds!)"
       (opengoal " ")
   )
)
(branch "Null Reference (a = null)"
    (opengoal " ")
)
(branch "Index Out of Bounds (a != null, but e3 Out of Bounds!)"
    (opengoal " ")
)
)
}
