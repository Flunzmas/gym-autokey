\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Nov 12 17:56:36 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=20000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Tue Nov 12 17:56:36 CET 2019
contract=SinglePivotPartition[SinglePivotPartition\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
name=SinglePivotPartition[SinglePivotPartition\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "933")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "a,left,right,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "3") (term "0,0"))
(rule "polySimp_addComm1" (formula "3") (term "0"))
(rule "polySimp_addComm0" (formula "3") (term "0,0"))
(rule "polySimp_addComm1" (formula "3") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "9") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "commute_and" (formula "6") (term "0,0"))
(rule "commute_and" (formula "6") (term "0,0,1,0"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
 (builtin "One Step Simplification" (formula "9"))
(rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "ifSplit" (formula "9"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
   (rule "compound_greater_than_comparison_1" (formula "10") (term "1") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
   (rule "compound_addition_1" (formula "10") (term "1") (inst "#v=x_3"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_3"))
   (rule "assignmentSubtractionInt" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "translateJavaSubInt" (formula "10") (term "0,1,0"))
   (rule "polySimp_elimSub" (formula "10") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
   (rule "assignmentAdditionInt" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0"))
   (rule "greater_than_comparison_simple" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "arrayLengthIsAShort" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "arrayLengthNotNegative" (formula "6") (term "1"))
   (rule "ifElseSplit" (formula "11"))
   (branch "if x_1 true"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "1"))
       (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_split,exc_0,heapAfter_split,anon_heap_split") (contract "SinglePivotPartition[SinglePivotPartition::split([I,int,int)].JML normal_behavior operation contract.0"))
      (branch "Post (split)"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "19"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "lless"))
         (rule "activeUseStaticFieldReadAccess" (formula "24") (term "1"))
         (rule "assignment_read_static_attribute" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=SinglePivotPartition_less_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet000_0" (formula "22") (term "0"))
         (rule "replaceKnownSelect_taclet000_0" (formula "21") (term "0"))
         (rule "replaceKnownSelect_taclet000_0" (formula "16") (term "1,0,0,0"))
         (rule "replaceKnownSelect_taclet000_0" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "lgreat"))
         (rule "activeUseStaticFieldReadAccess" (formula "25") (term "1"))
         (rule "assignment_read_static_attribute" (formula "25") (term "1"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=SinglePivotPartition_great_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replaceKnownSelect_taclet000_1" (formula "21") (term "0"))
         (rule "replaceKnownSelect_taclet000_1" (formula "24") (term "0"))
         (rule "replaceKnownSelect_taclet000_1" (formula "18") (term "0,0,0,0"))
         (rule "replaceKnownSelect_taclet000_1" (formula "17") (term "1,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "lpivot"))
         (rule "activeUseStaticFieldReadAccess" (formula "26") (term "1"))
         (rule "assignment_read_static_attribute" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfArrayRange" (formula "2") (term "1,0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "21") (term "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "22") (term "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "25") (term "0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "15") (term "1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "22") (term "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "19") (term "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "24") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "16") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=SinglePivotPartition_pivot_0"))
         (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "replaceKnownSelect_taclet000_4" (formula "16") (term "1,1,0"))
         (rule "replaceKnownSelect_taclet000_4" (formula "17") (term "1,1,0"))
         (rule "elementOfUnion" (formula "14") (term "0,0"))
         (rule "elementOfArrayRange" (formula "14") (term "1,0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "elementOfUnion" (formula "14") (term "0,0"))
         (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "16") (term "1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "15") (term "1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "14") (term "1,1,0"))
         (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
         (rule "commute_and" (formula "17") (term "0,0"))
         (rule "commute_and" (formula "17") (term "0,0,1,0"))
         (rule "commute_and" (formula "14") (term "0,0"))
         (rule "commute_and" (formula "15") (term "0,0"))
         (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_4"))
         (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_6"))
         (rule "compound_subtraction_1" (formula "24") (term "1") (inst "#v=x_7"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_7"))
         (rule "activeUseStaticFieldReadAccess" (formula "24") (term "1"))
         (rule "assignment_read_static_attribute" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "replaceKnownSelect_taclet000_0" (formula "24") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_2" (formula "24") (term "0,1,0"))
         (rule "assignmentSubtractionInt" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "translateJavaSubInt" (formula "24") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "24") (term "0,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "24") (term "1"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "ifSplit" (formula "24"))
         (branch "if x_4 true"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallUnfoldArguments" (formula "25") (term "1"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_2"))
            (rule "assignmentSubtractionInt" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
            (rule "mul_literals" (formula "25") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
             (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_sort_0,exc_1,heapAfter_sort,anon_heap_sort") (contract "SinglePivotPartition[SinglePivotPartition::sort([I,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (sort)"
                (builtin "One Step Simplification" (formula "25"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,0"))
               (rule "blockEmpty" (formula "31") (term "1"))
               (rule "commuteUnion" (formula "25") (term "0,0,1,0"))
               (rule "commute_and" (formula "28") (term "0,0"))
               (rule "commute_and" (formula "28") (term "0,0,1,0"))
               (rule "ifUnfold" (formula "31") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_8"))
               (rule "compound_less_than_comparison_1" (formula "31") (term "1") (inst "#v0=x_9"))
               (rule "variableDeclarationAssign" (formula "31") (term "1"))
               (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_9"))
               (rule "assignmentAdditionInt" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "translateJavaAddInt" (formula "31") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "ifSplit" (formula "31"))
               (branch "if x_8 true"
                   (builtin "One Step Simplification" (formula "32"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "methodCallUnfoldArguments" (formula "32") (term "1"))
                  (rule "variableDeclarationAssign" (formula "32") (term "1"))
                  (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_3"))
                  (rule "assignment" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "variableDeclarationAssign" (formula "32") (term "1"))
                  (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_4"))
                  (rule "assignmentAdditionInt" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "translateJavaAddInt" (formula "32") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "32") (term "1"))
                  (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_5"))
                  (rule "assignment" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                   (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_sort_1,exc_2,heapAfter_sort_0,anon_heap_sort_0") (contract "SinglePivotPartition[SinglePivotPartition::sort([I,int,int)].JML normal_behavior operation contract.0"))
                  (branch "Post (sort)"
                      (builtin "One Step Simplification" (formula "32"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,1,0"))
                     (rule "commuteUnion" (formula "32") (term "0,0,1,0"))
                     (rule "commute_and" (formula "34") (term "0,0"))
                     (rule "commute_and" (formula "35") (term "0,0"))
                     (rule "commute_and" (formula "34") (term "0,0,1,0"))
                     (rule "commute_and" (formula "35") (term "0,0,1,0"))
                     (rule "methodCallEmpty" (formula "38") (term "1"))
                     (rule "tryEmpty" (formula "38") (term "1"))
                     (rule "emptyModality" (formula "38") (term "1"))
                      (opengoal " ")
                  )
                  (branch "Exceptional Post (sort)"
                      (builtin "One Step Simplification" (formula "34"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0") (ifseqformula "26"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0") (ifseqformula "14"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "35"))
                     (rule "notLeft" (formula "33"))
                     (rule "close" (formula "37") (ifseqformula "36"))
                  )
                  (branch "Pre (sort)"
                      (opengoal " ")
                  )
               )
               (branch "if x_8 false"
                   (builtin "One Step Simplification" (formula "32"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "methodCallEmpty" (formula "32") (term "1"))
                  (rule "tryEmpty" (formula "32") (term "1"))
                  (rule "emptyModality" (formula "32") (term "1"))
                   (opengoal " ")
               )
            )
            (branch "Exceptional Post (sort)"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "13"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "26"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (sort)"
                (opengoal " ")
            )
         )
         (branch "if x_4 false"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_8"))
            (rule "compound_less_than_comparison_1" (formula "25") (term "1") (inst "#v0=x_9"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_9"))
            (rule "assignmentAdditionInt" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "ifSplit" (formula "25"))
            (branch "if x_8 true"
                (builtin "One Step Simplification" (formula "26"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallUnfoldArguments" (formula "26") (term "1"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "var"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "var_1"))
               (rule "assignmentAdditionInt" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "var_2"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
                (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_sort_0,exc_1,heapAfter_sort,anon_heap_sort") (contract "SinglePivotPartition[SinglePivotPartition::sort([I,int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (sort)"
                   (builtin "One Step Simplification" (formula "25"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "28"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,0"))
                  (rule "commuteUnion" (formula "25") (term "0,0,1,0"))
                  (rule "commute_and" (formula "27") (term "0,0"))
                  (rule "commute_and" (formula "28") (term "0,0"))
                  (rule "commute_and" (formula "27") (term "0,0,1,0"))
                  (rule "commute_and" (formula "28") (term "0,0,1,0"))
                  (rule "methodCallEmpty" (formula "32") (term "1"))
                  (rule "tryEmpty" (formula "32") (term "1"))
                  (rule "emptyModality" (formula "32") (term "1"))
                   (opengoal " ")
               )
               (branch "Exceptional Post (sort)"
                   (builtin "One Step Simplification" (formula "25"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "13"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "26"))
                  (rule "close" (formula "29") (ifseqformula "28"))
               )
               (branch "Pre (sort)"
                   (opengoal " ")
               )
            )
            (branch "if x_8 false"
                (builtin "One Step Simplification" (formula "26"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (rule "tryEmpty" (formula "26") (term "1"))
               (rule "emptyModality" (formula "26") (term "1"))
                (opengoal " ")
            )
         )
      )
      (branch "Exceptional Post (split)"
          (builtin "One Step Simplification" (formula "12"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "13"))
         (rule "close" (formula "16") (ifseqformula "15"))
      )
      (branch "Pre (split)"
          (opengoal " ")
      )
   )
   (branch "if x_1 false"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
       (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_insertionSort,exc_0,heapAfter_insertionSort,anon_heap_insertionSort") (contract "SinglePivotPartition[SinglePivotPartition::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
      (branch "Post (insertionSort)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,1,0"))
         (rule "commute_and" (formula "14") (term "0,0"))
         (rule "commute_and" (formula "14") (term "0,0,1,0"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "tryEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
          (opengoal " ")
      )
      (branch "Exceptional Post (insertionSort)"
          (builtin "One Step Simplification" (formula "11"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "11"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "12"))
         (rule "close" (formula "16") (ifseqformula "15"))
      )
      (branch "Pre (insertionSort)"
          (opengoal " ")
      )
   )
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "tryEmpty" (formula "10") (term "1"))
   (rule "emptyModality" (formula "10") (term "1"))
    (opengoal " ")
)
)
}
