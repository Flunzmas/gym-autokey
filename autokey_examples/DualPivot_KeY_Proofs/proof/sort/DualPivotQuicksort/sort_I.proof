\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Feb 28 10:50:31 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../../../../../../../../../../../home/i57/cnodes/jschiffl/ba/DualPivot/cryo/proof/sort/DualPivotQuicksort";

\proofObligation "#Proof Obligation Settings
#Tue Feb 28 10:50:31 CET 2017
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:sort([I)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:sort([I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "jschiffl" ) (keyVersion "9c003bb729fff7c922d356f50f89bff669d8a8da"))

(autoModeTime "577")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,1,0,0,0,0,1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,0,0,0,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,1,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0,1,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,0,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,0,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "5") (term "1,0,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,1,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,1,0,0,0,0,1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
(builtin "One Step Simplification" (formula "5"))
(rule "methodCallUnfoldArguments" (formula "5") (term "1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var_1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var_2"))
(rule "compound_subtraction_1" (formula "5") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "assignment_read_length" (formula "5"))
(branch "Normal Execution (_a != null)"
   (builtin "One Step Simplification" (formula "5"))
   (rule "assignmentSubtractionInt" (formula "5") (term "1"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "translateJavaSubInt" (formula "5") (term "0,1,0"))
   (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
   (rule "mul_literals" (formula "5") (term "1,0,1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "var_3"))
   (rule "assignment" (formula "5") (term "1"))
   (builtin "One Step Simplification" (formula "5"))
   (builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_sort_0,exc_0,heapAfter_sort,anon_heap_sort") (contract "DualPivotQuicksort[DualPivotQuicksort::sort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
   (branch "Post (sort)"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "1,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "7") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,0,0,1,0"))
      (rule "commuteUnion" (formula "5") (term "0,0,0,0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,1,0"))
      (rule "commuteUnion_2" (formula "5") (term "0,0,1,0"))
      (rule "nnf_imp2or" (formula "7") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "nnf_imp2or" (formula "7") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "8") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "7") (term "1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0,1,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "methodCallEmpty" (formula "9") (term "1"))
      (rule "shift_paren_or" (formula "7") (term "0,1,0"))
      (rule "tryEmpty" (formula "9") (term "1"))
      (rule "emptyModality" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1"))
      (rule "andRight" (formula "9"))
      (branch "Case 1"
         (rule "allRight" (formula "9") (inst "sk=i_1"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "allRight" (formula "11") (inst "sk=j_1"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "13"))
         (rule "inEqSimp_leqRight" (formula "9"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "10"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "14"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_leqRight" (formula "14"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
         (rule "polySimp_elimOne" (formula "5") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "mul_literals" (formula "4") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_homoInEq0" (formula "3"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,1,0,0"))
         (rule "replace_known_left" (formula "2") (term "1,1,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0") (ifseqformula "5"))
         (rule "leq_literals" (formula "2") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_commuteLeq" (formula "2") (term "0,1,0,0"))
         (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
         (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "arrayLengthIsAShort" (formula "11") (term "1,2,1,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "arrayLengthNotNegative" (formula "11") (term "1,2,1,1,0"))
         (rule "all_pull_out3" (formula "14") (term "0"))
         (rule "shift_paren_or" (formula "14") (term "0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
         (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
         (rule "allLeft" (formula "14") (inst "t=i_1"))
         (rule "replaceKnownSelect_taclet000_2" (formula "14") (term "1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "14") (term "1,1,0"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0,0") (ifseqformula "6"))
         (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
         (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "commute_or_2" (formula "14") (term "0,0"))
         (rule "allLeft" (formula "14") (inst "t=j_1"))
         (rule "replaceKnownSelect_taclet000_0" (formula "14") (term "0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "14") (term "0,1"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
         (rule "leq_literals" (formula "14") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
         (rule "leq_literals" (formula "14") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
         (rule "qeq_literals" (formula "14") (term "0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "14"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "9") (inst "sk=f_0"))
         (rule "allRight" (formula "9") (inst "sk=o_0"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "eqSymm" (formula "19"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
         (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (sort)"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "6"))
      (rule "close" (formula "9") (ifseqformula "8"))
   )
   (branch "Pre (sort)"
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")) (ifInst ""  (formula "2")))
      (rule "translateJavaAddInt" (formula "5") (term "0,1"))
      (rule "translateJavaSubInt" (formula "5") (term "0,0,1"))
      (rule "leq_literals" (formula "5") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_elimSub" (formula "5") (term "0,0,1"))
      (rule "times_zero_2" (formula "5") (term "1,0,0,1"))
      (rule "polySimp_addLiterals" (formula "5") (term "0,1"))
      (rule "polySimp_addComm1" (formula "5") (term "0,1"))
      (rule "add_literals" (formula "5") (term "0,0,1"))
      (rule "measuredByCheckEmpty" (formula "5") (term "1") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1,0,1,1"))
      (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1,0,1,1"))
      (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,1,0,1,1"))
      (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,0"))
      (rule "polySimp_pullOutFactor2" (formula "5") (term "0,0"))
      (rule "add_literals" (formula "5") (term "1,0,0"))
      (rule "times_zero_1" (formula "5") (term "0,0"))
      (rule "leq_literals" (formula "5") (term "0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0,1"))
      (rule "nnf_imp2or" (formula "5") (term "0,0"))
      (rule "nnf_imp2or" (formula "5") (term "0,1"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "allRight" (formula "5") (inst "sk=i_0"))
      (rule "orRight" (formula "5"))
      (rule "notRight" (formula "5"))
      (rule "andLeft" (formula "1"))
      (rule "allRight" (formula "7") (inst "sk=j_0"))
      (rule "impRight" (formula "7"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "9"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_commuteGeq" (formula "2"))
      (rule "inEqSimp_homoInEq0" (formula "5"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "inEqSimp_homoInEq0" (formula "3"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1"))
      (rule "polySimp_rightDist" (formula "5") (term "1"))
      (rule "mul_literals" (formula "5") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
      (rule "andLeft" (formula "2"))
      (rule "inEqSimp_homoInEq1" (formula "2"))
      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0"))
      (rule "add_zero_right" (formula "2") (term "0"))
      (rule "leq_literals" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
)
(branch "Null Reference (_a = null)"
   (rule "false_right" (formula "6"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
)

}
