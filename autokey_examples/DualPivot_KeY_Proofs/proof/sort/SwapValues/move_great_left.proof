\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Feb 28 09:29:50 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=40000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../../../../../../../../../../../home/i57/cnodes/jschiffl/ba/DualPivot/cryo/proof/sort/SwapValues";

\proofObligation "#Proof Obligation Settings
#Tue Feb 28 09:29:50 CET 2017
name=SwapValues[SwapValues\\:\\:move_great_left([I,int,int,int)].JML normal_behavior operation contract.0
contract=SwapValues[SwapValues\\:\\:move_great_left([I,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "jschiffl" ) (keyVersion "9c003bb729fff7c922d356f50f89bff669d8a8da"))

(autoModeTime "5555")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,l,g,k,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "2"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1"))
(rule "polySimp_rightDist" (formula "4") (term "1"))
(rule "mul_literals" (formula "4") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
(rule "polySimp_elimOne" (formula "4") (term "1,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
(rule "polySimp_mulComm0" (formula "5") (term "0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1"))
(rule "polySimp_rightDist" (formula "5") (term "1"))
(rule "mul_literals" (formula "5") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1"))
(rule "nnf_imp2or" (formula "9") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_move_great_left,savedHeapBefore_move_great_left,_aBefore_move_great_left,_gBefore_move_great_left,_kBefore_move_great_left,_lBefore_move_great_left"))
(builtin "One Step Simplification" (formula "9"))
(builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
   (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1"))
   (rule "add_literals" (formula "9") (term "1,0,1"))
   (rule "times_zero_1" (formula "9") (term "0,1"))
   (rule "qeq_literals" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "allRight" (formula "9") (inst "sk=i_2"))
   (rule "impRight" (formula "9"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
   (rule "andLeft" (formula "2"))
   (rule "inEqSimp_homoInEq1" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
   (rule "mul_literals" (formula "2") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0"))
   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
   (rule "add_literals" (formula "2") (term "1,1,0"))
   (rule "times_zero_1" (formula "2") (term "1,0"))
   (rule "add_zero_right" (formula "2") (term "0"))
   (rule "leq_literals" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,1,1,0,1"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,1,1,0,1,1"))
   (rule "andLeft" (formula "9"))
   (rule "impRight" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "eqSymm" (formula "15") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "10"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "pullOutSelect" (formula "15") (term "1,0,1,1,1,0") (inst "selectSK=SwapValues_great_1"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addComm1" (formula "11") (term "0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "11") (term "1,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "16") (term "1,0,1,1,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "polySimp_addComm1" (formula "10") (term "0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "15") (term "1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10"))
   (rule "polySimp_mulComm0" (formula "10") (term "1"))
   (rule "polySimp_rightDist" (formula "10") (term "1"))
   (rule "mul_literals" (formula "10") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "pullOutSelect" (formula "11") (term "1,1,0") (inst "selectSK=SwapValues_pivot2_1"))
   (rule "simplifySelectOfAnon" (formula "11"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "elementOfSingleton" (formula "11") (term "0,0"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "11"))
   (rule "hideAuxiliaryEq" (formula "11"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1"))
   (rule "polySimp_elimOne" (formula "12") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0"))
   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
   (rule "polySimp_mulComm0" (formula "12") (term "1"))
   (rule "polySimp_rightDist" (formula "12") (term "1"))
   (rule "mul_literals" (formula "12") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "15") (term "0,1,0,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "commute_or" (formula "10") (term "0,0"))
   (rule "compound_assignment_3_nonsimple" (formula "13") (term "1"))
   (rule "arrayLengthIsAShort" (formula "4") (term "1,1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "arrayLengthNotNegative" (formula "4") (term "1,1"))
   (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
   (rule "compound_assignment_3_nonsimple" (formula "16") (term "1"))
   (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_7"))
   (rule "compound_assignment_2" (formula "14") (term "1") (inst "#v=x_8"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_8"))
   (rule "compound_equality_comparison_2" (formula "14") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_9"))
   (rule "eval_order_array_access5" (formula "14") (term "1") (inst "#v1=x_11") (inst "#ar1=x_arr"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr_1"))
   (rule "assignment" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_11"))
   (rule "activeUseStaticFieldReadAccess" (formula "14") (term "1"))
   (rule "assignment_read_static_attribute" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "0,1,0"))
   (rule "assignment_array2" (formula "14"))
   (branch "Normal Execution (x_arr_1 != null)"
      (builtin "One Step Simplification" (formula "14"))
      (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=arr_2"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "applyEqReverse" (formula "15") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_10"))
      (rule "activeUseStaticFieldReadAccess" (formula "14") (term "1"))
      (rule "assignment_read_static_attribute" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "replaceKnownSelect_taclet1_2" (formula "14") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "14") (term "0,1,0"))
      (rule "equality_comparison_simple" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "compound_assignment_1_new" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x_7"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_12"))
      (rule "compound_assignment_2" (formula "16") (term "1") (inst "#v=x_13"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_13"))
      (rule "compound_equality_comparison_2" (formula "16") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_14"))
      (rule "eval_order_array_access5" (formula "16") (term "1") (inst "#v1=x_16") (inst "#ar1=x_arr"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr_2"))
      (rule "assignment" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_16"))
      (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
      (rule "assignment_read_static_attribute" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replaceKnownSelect_taclet1_0" (formula "16") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "16") (term "0,1,0"))
      (rule "assignment_array2" (formula "16"))
      (branch "Normal Execution (x_arr_2 != null)"
         (builtin "One Step Simplification" (formula "16"))
         (rule "replaceKnownSelect_taclet01_4" (formula "16") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet01_5" (formula "16") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_15"))
         (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
         (rule "assignment_read_static_attribute" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replaceKnownSelect_taclet1_2" (formula "16") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "16") (term "0,1,0"))
         (rule "equality_comparison_simple" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "compound_assignment_1_new" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "ifElseSplit" (formula "14"))
         (branch "if x_7 true"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "emptyModality" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "closeTrue" (formula "15"))
         )
         (branch "if x_7 false"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "compound_inequality_comparison_1" (formula "15") (term "1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_17"))
            (rule "activeUseStaticFieldReadAccess" (formula "15") (term "1"))
            (rule "assignment_read_static_attribute" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0"))
            (rule "inequality_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "emptyModality" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "15"))
            (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "13"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "leq_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "false_right" (formula "15"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "10"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "mul_literals" (formula "11") (term "0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if x_12 true"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_12 false"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "compound_inequality_comparison_1" (formula "16") (term "1") (inst "#v0=x_7"))
               (rule "variableDeclarationAssign" (formula "16") (term "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_18"))
               (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
               (rule "assignment_read_static_attribute" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replaceKnownSelect_taclet1_0" (formula "16") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "16") (term "0,1,0"))
               (rule "inequality_comparison_simple" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "16") (term "0,0,1,0") (ifseqformula "13"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,0"))
               (rule "leq_literals" (formula "16") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "ifSplit" (formula "16"))
               (branch "if x_6 true"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "postdecrement" (formula "16") (term "1"))
                  (rule "activeUseStaticFieldWriteAccess" (formula "16") (term "1") (inst "#v0=x"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_19"))
                  (rule "compound_subtraction_1" (formula "16") (term "1") (inst "#v=x_20"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_20"))
                  (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x_21"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_21"))
                  (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
                  (rule "assignment_read_static_attribute" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "replaceKnownSelect_taclet1_0" (formula "16") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "16") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "16") (term "1"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "assignmentSubtractionInt" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "translateJavaSubInt" (formula "16") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                  (rule "assignment_write_static_attribute" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "tryEmpty" (formula "16") (term "1"))
                  (rule "methodCallEmpty" (formula "16") (term "1"))
                  (rule "emptyModality" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "16") (term "0,1,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "16") (term "1,1,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet1_2" (formula "16") (term "1,1,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "16") (term "1,1,0,1,0,0,0,0"))
                  (rule "precOfInt" (formula "16") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,1"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1"))
                  (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
                  (rule "times_zero_2" (formula "16") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1"))
                  (rule "mul_literals" (formula "16") (term "1,0,1"))
                  (rule "pullOutSelect" (formula "16") (term "0,1,0,0,0") (inst "selectSK=SwapValues_great_2"))
                  (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "17") (term "0,1,1") (ifseqformula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "17") (term "0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "17") (term "0,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "1,1"))
                  (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1"))
                  (rule "add_literals" (formula "16") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "16") (term "0,1,1"))
                  (rule "qeq_literals" (formula "16") (term "1,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                  (rule "inEqSimp_invertInEq0" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                  (rule "times_zero_2" (formula "16") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0"))
                  (rule "replace_known_left" (formula "16") (term "1,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_subsumption0" (formula "16") (term "0,0,0,0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "qeq_literals" (formula "16") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_subsumption0" (formula "16") (term "1,0,0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "16") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "cut_direct" (formula "16") (term "1"))
                  (branch "CUT: SwapValues.great@anon_heap_LOOP«anonHeapFunction» ≥ 0 TRUE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                     (rule "times_zero_1" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "andRight" (formula "18"))
                     (branch "Case 1"
                        (rule "allRight" (formula "18") (inst "sk=i_1"))
                        (rule "orRight" (formula "18"))
                        (rule "orRight" (formula "18"))
                        (rule "inEqSimp_leqRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "19"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                        (rule "eqSymm" (formula "21"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "20"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "5") (term "0,0"))
                        (rule "add_zero_left" (formula "5") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                        (rule "mul_literals" (formula "18") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "19"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "allLeft" (formula "16") (inst "t=i_1"))
                        (rule "replaceKnownSelect_taclet00011001_8" (formula "16") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00011001_9" (formula "16") (term "0,1"))
                        (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq1" (formula "17"))
                        (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,0"))
                        (rule "times_zero_1" (formula "17") (term "0"))
                        (rule "leq_literals" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "16"))
                        (rule "close" (formula "24") (ifseqformula "7"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "18") (inst "sk=f_2"))
                        (rule "allRight" (formula "18") (inst "sk=o_2"))
                        (rule "orRight" (formula "18"))
                        (rule "orRight" (formula "18"))
                        (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_2_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "CUT: SwapValues.great@anon_heap_LOOP«anonHeapFunction» ≥ 0 FALSE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "false_right" (formula "17"))
                     (rule "inEqSimp_geqRight" (formula "16"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
               (branch "if x_6 false"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "Null Reference (x_arr_2 = null)"
         (rule "false_right" (formula "17"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_2 != null, but x_16 Out of Bounds!)"
         (rule "false_right" (formula "17"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
         (rule "polySimp_addComm0" (formula "13") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
   )
   (branch "Null Reference (x_arr_1 = null)"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr_1 != null, but x_11 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "false_right" (formula "15"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
      (rule "polySimp_addComm0" (formula "13") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "9"))
      (rule "qeq_literals" (formula "13") (term "0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "closeFalse" (formula "13"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "9"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9"))
   (rule "polySimp_mulComm0" (formula "9") (term "1"))
   (rule "polySimp_rightDist" (formula "9") (term "1"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
   (rule "mul_literals" (formula "9") (term "0,1"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0"))
   (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=SwapValues_great_0"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
   (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "12"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
   (rule "simplifySelectOfAnon" (formula "12"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "elementOfSingleton" (formula "12") (term "0,0"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "applyEqReverse" (formula "10") (term "1,1,0,0,0") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "12"))
   (rule "hideAuxiliaryEq" (formula "12"))
   (rule "pullOutSelect" (formula "10") (term "1,1,0") (inst "selectSK=SwapValues_pivot2_0"))
   (rule "simplifySelectOfAnon" (formula "10"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "elementOfSingleton" (formula "10") (term "0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "hideAuxiliaryEq" (formula "10"))
   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "12"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1"))
   (rule "polySimp_elimOne" (formula "11") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "9"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
   (rule "polySimp_mulComm0" (formula "11") (term "1"))
   (rule "polySimp_rightDist" (formula "11") (term "1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
   (rule "mul_literals" (formula "11") (term "0,1"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "commute_or" (formula "10") (term "0,0"))
   (rule "compound_assignment_3_nonsimple" (formula "14") (term "1"))
   (rule "arrayLengthIsAShort" (formula "4") (term "1,1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "arrayLengthNotNegative" (formula "4") (term "1,1"))
   (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
   (rule "compound_assignment_2" (formula "15") (term "1") (inst "#v=x_1"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
   (rule "compound_equality_comparison_2" (formula "15") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
   (rule "eval_order_array_access5" (formula "15") (term "1") (inst "#v1=x_4") (inst "#ar1=x_arr"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr"))
   (rule "assignment" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
   (rule "activeUseStaticFieldReadAccess" (formula "15") (term "1"))
   (rule "assignment_read_static_attribute" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "replaceKnownSelect_taclet2_0" (formula "15") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "15") (term "0,1,0"))
   (rule "assignment_array2" (formula "15"))
   (branch "Normal Execution (x_arr != null)"
      (builtin "One Step Simplification" (formula "15"))
      (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
      (rule "activeUseStaticFieldReadAccess" (formula "15") (term "1"))
      (rule "assignment_read_static_attribute" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "replaceKnownSelect_taclet2_2" (formula "15") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "15") (term "0,1,0"))
      (rule "equality_comparison_simple" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "compound_assignment_1_new" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "ifElseSplit" (formula "15"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "emptyModality" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "tryEmpty" (formula "16") (term "1"))
         (rule "emptyModality" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "0,0,0"))
         (rule "replaceKnownSelect_taclet2_2" (formula "16") (term "1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "1,1,1,1,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "16") (term "1,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "1,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "0,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet2_2" (formula "16") (term "1,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "16") (term "1,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,2,0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "0,2,0,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet02_4" (formula "16") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "16") (term "0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "16") (term "1,0,0,1"))
         (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "12")))
         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
         (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andRight" (formula "16"))
         (branch "Case 1"
            (rule "allRight" (formula "16") (inst "sk=i_0"))
            (rule "orRight" (formula "16"))
            (rule "orRight" (formula "16"))
            (rule "inEqSimp_leqRight" (formula "16"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "17"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "5")))
            (rule "eqSymm" (formula "19"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
            (rule "times_zero_1" (formula "11") (term "0,0"))
            (rule "add_zero_left" (formula "11") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "allLeft" (formula "15") (inst "t=i_0"))
            (rule "replaceKnownSelect_taclet0002_6" (formula "15") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_7" (formula "15") (term "0,1"))
            (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
            (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "3"))
            (rule "andLeft" (formula "15"))
            (rule "inEqSimp_homoInEq1" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "1,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0"))
            (rule "add_zero_right" (formula "15") (term "0"))
            (rule "leq_literals" (formula "15"))
            (rule "closeFalse" (formula "15"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "16") (inst "sk=f_1"))
            (rule "allRight" (formula "16") (inst "sk=o_1"))
            (rule "orRight" (formula "16"))
            (rule "orRight" (formula "16"))
            (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_1_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "eqSymm" (formula "19"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "compound_inequality_comparison_1" (formula "16") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
         (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
         (rule "assignment_read_static_attribute" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "16") (term "0,1,0"))
         (rule "inequality_comparison_simple" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (rule "emptyModality" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "impRight" (formula "16"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "12"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "14"))
         (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
         (rule "add_literals" (formula "14") (term "1,0"))
         (rule "times_zero_1" (formula "14") (term "0"))
         (rule "leq_literals" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "methodCallEmpty" (formula "14") (term "1"))
         (rule "tryEmpty" (formula "14") (term "1"))
         (rule "emptyModality" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "0,0,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "0,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet2_2" (formula "14") (term "1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "1,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "0,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "14") (term "1,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "1,1,1,1,1,0"))
         (rule "replaceKnownSelect_taclet2_2" (formula "14") (term "1,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "1,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "14") (term "1,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "1,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet2_0" (formula "14") (term "0,2,0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "14") (term "0,2,0,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet02_4" (formula "14") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet02_5" (formula "14") (term "0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "14") (term "1,0,0,1"))
         (rule "replace_known_left" (formula "14") (term "0,0,1,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,1,1,0"))
         (rule "applyEq" (formula "14") (term "0,0,1,1,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,1,0"))
         (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,0,1,1,0"))
         (rule "leq_literals" (formula "14") (term "0,1,1,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
         (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0"))
         (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "allRight" (formula "14") (inst "sk=f_0"))
         (rule "allRight" (formula "14") (inst "sk=o_0"))
         (rule "orRight" (formula "14"))
         (rule "orRight" (formula "14"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "eqSymm" (formula "17"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (x_arr = null)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr != null, but x_4 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "false_right" (formula "16"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
      (rule "polySimp_addComm0" (formula "13") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "9"))
      (rule "qeq_literals" (formula "13") (term "0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "closeFalse" (formula "13"))
   )
)
)

}
