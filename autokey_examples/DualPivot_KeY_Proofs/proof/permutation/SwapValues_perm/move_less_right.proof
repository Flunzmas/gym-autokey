\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Mar 01 10:58:55 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=40000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../../../../../../../../../../../home/i57/cnodes/jschiffl/ba/DualPivot/cryo/proof/permutation/SwapValues_perm";

\proofObligation "#Proof Obligation Settings
#Wed Mar 01 10:58:55 CET 2017
name=SwapValues[SwapValues\\:\\:move_less_right([I,int,int)].JML normal_behavior operation contract.0
contract=SwapValues[SwapValues\\:\\:move_less_right([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "jschiffl" ) (keyVersion "9c003bb729fff7c922d356f50f89bff669d8a8da"))

(autoModeTime "3988")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,l,g,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "4"))
(rule "exLeft" (formula "11") (inst "sk=m_0"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "exLeft" (formula "10") (inst "sk=j_0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "eqSymm" (formula "17") (term "0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "2"))
(rule "elementOfSingleton" (formula "17") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1"))
(rule "polySimp_rightDist" (formula "7") (term "1"))
(rule "mul_literals" (formula "7") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1"))
(rule "polySimp_rightDist" (formula "5") (term "1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
(rule "mul_literals" (formula "5") (term "0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1"))
(rule "array2seqDef" (formula "17") (term "1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "17") (term "0,0,0,1"))
(rule "array2seqDef" (formula "17") (term "1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "17") (term "0,0,0,1"))
(rule "eqSeqDef" (formula "17") (term "0,0,0,1") (inst "iv=iv"))
(rule "lenOfSeqDef" (formula "17") (term "0,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,0,0,1"))
(rule "times_zero_2" (formula "17") (term "1,1,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "1,1,0,0,0,0,1"))
(rule "getOfSeqDef" (formula "17") (term "0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "17") (term "2,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "17") (term "1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,1,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1,0,0,0,1"))
(rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "17") (term "1,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1,0,0,0,1"))
(rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "17") (term "0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "1,0,0,0,0,0,1"))
(rule "times_zero_2" (formula "17") (term "1,1,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "1,0,0,0,0,0,1"))
(builtin "One Step Simplification" (formula "17"))
(rule "getOfSeqDef" (formula "17") (term "0,1,0,0,0,0,1"))
(rule "castDel" (formula "17") (term "1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "17") (term "2,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "17") (term "1,0,0,0,0,1"))
(rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
(rule "times_zero_1" (formula "4") (term "0,0"))
(rule "add_zero_left" (formula "4") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4"))
(rule "mul_literals" (formula "4") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
(rule "polySimp_mulComm0" (formula "12") (term "0,0"))
(rule "polySimp_addComm0" (formula "12") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "12"))
(rule "polySimp_mulLiterals" (formula "12") (term "0"))
(rule "polySimp_elimOne" (formula "12") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
(rule "polySimp_mulComm0" (formula "16") (term "0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0"))
(rule "polySimp_addComm0" (formula "16") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "16"))
(rule "polySimp_mulComm0" (formula "16") (term "1"))
(rule "polySimp_rightDist" (formula "16") (term "1"))
(rule "mul_literals" (formula "16") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
(rule "polySimp_mulComm0" (formula "17") (term "0,0"))
(rule "polySimp_addComm0" (formula "17") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "17"))
(rule "polySimp_mulLiterals" (formula "17") (term "0"))
(rule "polySimp_elimOne" (formula "17") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
(rule "times_zero_1" (formula "5") (term "0,0"))
(rule "add_zero_left" (formula "5") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "9"))
(rule "polySimp_mulComm0" (formula "14") (term "0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0"))
(rule "polySimp_addComm0" (formula "14") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14"))
(rule "polySimp_mulComm0" (formula "14") (term "1"))
(rule "polySimp_rightDist" (formula "14") (term "1"))
(rule "mul_literals" (formula "14") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
(rule "times_zero_1" (formula "6") (term "0,0"))
(rule "add_zero_left" (formula "6") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "9"))
(rule "mul_literals" (formula "4") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4"))
(rule "mul_literals" (formula "4") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "15"))
(rule "times_zero_1" (formula "6") (term "0,0"))
(rule "add_zero_left" (formula "6") (term "0"))
(rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
(rule "leq_literals" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "21"))
(rule "times_zero_1" (formula "7") (term "0,0"))
(rule "add_zero_left" (formula "7") (term "0"))
(rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
(rule "leq_literals" (formula "7") (term "0"))
(builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
(rule "mul_literals" (formula "5") (term "0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0"))
(rule "add_literals" (formula "5") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_imp2or" (formula "26") (term "0,0,0,0,1"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0,1"))
(rule "commute_or" (formula "14") (term "0,0"))
(rule "cnf_rightDist" (formula "14") (term "0"))
(rule "distr_forallAnd" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "15") (term "0"))
(rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_move_less_right,savedHeapBefore_move_less_right,_aBefore_move_less_right,_gBefore_move_less_right,_lBefore_move_less_right"))
(builtin "One Step Simplification" (formula "27"))
(rule "arrayLengthIsAShort" (formula "12") (term "1,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "true_left" (formula "12"))
(rule "arrayLengthNotNegative" (formula "12") (term "1,1"))
(rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
(rule "leq_literals" (formula "12") (term "0"))
(builtin "One Step Simplification" (formula "12"))
(rule "true_left" (formula "12"))
(builtin "Loop Invariant" (formula "27") (newnames "variant,b,heapBefore_LOOP,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0"))
   (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
   (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
   (rule "add_literals" (formula "27") (term "1,0,1"))
   (rule "times_zero_1" (formula "27") (term "0,1"))
   (rule "qeq_literals" (formula "27") (term "1"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
   (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_subsumption0" (formula "27") (term "0,0") (ifseqformula "10"))
   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "27") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "nnf_imp2or" (formula "27") (term "0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "nnf_ex2all" (formula "27"))
   (rule "nnf_notAnd" (formula "1") (term "0"))
   (rule "nnf_notAnd" (formula "1") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
   (rule "commute_or" (formula "1") (term "0,0"))
   (rule "allLeft" (formula "1") (inst "t=m_0"))
   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "1") (term "1"))
   (rule "polySimp_addComm1" (formula "1") (term "0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
   (rule "polySimp_rightDist" (formula "1") (term "1,1"))
   (rule "mul_literals" (formula "1") (term "0,1,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "26"))
   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
   (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0,0"))
   (rule "leq_literals" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "27"))
   (builtin "One Step Simplification" (formula "29"))
   (rule "translateJavaSubInt" (formula "29") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "29") (term "0,1,1,1,0,1,1"))
   (rule "andLeft" (formula "27"))
   (rule "impRight" (formula "30"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "exLeft" (formula "32") (inst "sk=j_2"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "eqSymm" (formula "38") (term "1,0,0,1,0,1,1,0,1"))
   (rule "eqSymm" (formula "38") (term "1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "38") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "38") (term "0,1,1,1,0"))
   (rule "elementOfSingleton" (formula "38") (term "0,0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "30"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "35"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28"))
   (rule "inEqSimp_commuteLeq" (formula "33"))
   (rule "pullOutSelect" (formula "38") (term "0,1,0,1,1,1,0") (inst "selectSK=SwapValues_less_1"))
   (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addComm0" (formula "39") (term "0,1,1,1,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "39") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "29"))
   (rule "pullOutSelect" (formula "38") (term "1,0,1,1,1,0") (inst "selectSK=SwapValues_great_1"))
   (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addComm0" (formula "39") (term "0,1,1,1,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "39") (term "0,0,1,1,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "polySimp_addComm1" (formula "30") (term "0"))
   (rule "inEqSimp_commuteGeq" (formula "29"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "38") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "38") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "38") (term "1"))
   (builtin "One Step Simplification" (formula "38"))
   (rule "variableDeclaration" (formula "38") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "38") (term "1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30"))
   (rule "polySimp_mulComm0" (formula "30") (term "1"))
   (rule "polySimp_rightDist" (formula "30") (term "1"))
   (rule "mul_literals" (formula "30") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "array2seqDef" (formula "35") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "35"))
   (rule "narrowSelectArrayType" (formula "35") (term "2,0") (ifseqformula "2") (ifseqformula "36"))
   (rule "array2seqDef" (formula "37") (term "0,1,0,0,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "37") (term "1,1,0,0,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "35") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "35"))
   (rule "eqSeqDef" (formula "37") (term "1,0,0,1,1,0,1") (inst "iv=iv"))
   (rule "lenOfSeqDef" (formula "37") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "37") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "times_zero_2" (formula "37") (term "1,1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "getOfSeqDef" (formula "37") (term "1,1,0,1,1,0,0,1,1,0,1"))
   (rule "castDel" (formula "37") (term "1,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "castDel" (formula "37") (term "2,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "0,2,1,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "lenOfSeqDef" (formula "37") (term "0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "getOfSeqDef" (formula "37") (term "0,1,0,1,1,0,0,1,1,0,1"))
   (rule "castDel" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "castDel" (formula "37") (term "2,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "0,2,1,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "lenOfSeqDef" (formula "37") (term "0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "0,0,1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0,1,0,0,1,1,0,1"))
   (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
   (rule "andLeft" (formula "35"))
   (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
   (rule "castDel" (formula "36") (term "1,1,1,0"))
   (rule "castDel" (formula "36") (term "2,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "1,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
   (rule "lenOfSeqDef" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "36") (term "1,1,1,1,0,0"))
   (rule "add_zero_right" (formula "36") (term "1,1,1,0,0"))
   (rule "lenOfSeqDef" (formula "35") (term "1"))
   (rule "polySimp_elimSub" (formula "35") (term "1,1"))
   (rule "times_zero_2" (formula "35") (term "1,1,1"))
   (rule "add_zero_right" (formula "35") (term "1,1"))
   (rule "lenOfSeqDef" (formula "35") (term "0"))
   (rule "polySimp_elimSub" (formula "35") (term "1,0"))
   (rule "times_zero_2" (formula "35") (term "1,1,0"))
   (rule "add_zero_right" (formula "35") (term "1,0"))
   (builtin "One Step Simplification" (formula "35"))
   (rule "true_left" (formula "35"))
   (rule "getOfSeqDef" (formula "35") (term "0,1,0"))
   (rule "castDel" (formula "35") (term "2,0,1,0"))
   (rule "castDel" (formula "35") (term "1,0,1,0"))
   (rule "add_zero_right" (formula "35") (term "0,2,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "35") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,0"))
   (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,1,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
   (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "6"))
   (rule "leq_literals" (formula "35") (term "0,0,1,1,1,0,0"))
   (builtin "One Step Simplification" (formula "35"))
   (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=SwapValues_pivot1_1"))
   (rule "simplifySelectOfAnon" (formula "30"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "elementOfSingleton" (formula "30") (term "0,0"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "30"))
   (rule "hideAuxiliaryEq" (formula "30"))
   (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_2"))
   (rule "simplifySelectOfAnon" (formula "33"))
   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
   (rule "eqSymm" (formula "34"))
   (rule "simplifySelectOfAnon" (formula "34"))
   (builtin "One Step Simplification" (formula "34"))
   (rule "elementOfSingleton" (formula "33") (term "0,0"))
   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")))
   (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "33"))
   (rule "hideAuxiliaryEq" (formula "33"))
   (rule "elementOfSingleton" (formula "33") (term "0,0"))
   (builtin "One Step Simplification" (formula "33"))
   (rule "eqSymm" (formula "33"))
   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
   (rule "times_zero_1" (formula "28") (term "0,0"))
   (rule "add_zero_left" (formula "28") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "7"))
   (rule "leq_literals" (formula "28") (term "0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "true_left" (formula "28"))
   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "31"))
   (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
   (rule "polySimp_addComm0" (formula "34") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
   (rule "polySimp_elimOne" (formula "34") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "12"))
   (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "32"))
   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
   (rule "polySimp_elimOne" (formula "32") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "31"))
   (rule "times_zero_1" (formula "28") (term "0,0"))
   (rule "add_zero_left" (formula "28") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "30"))
   (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "37"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
   (rule "polySimp_elimOne" (formula "37") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "11"))
   (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
   (rule "mul_literals" (formula "37") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
   (rule "add_literals" (formula "37") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "37") (term "1,0,0"))
   (rule "add_zero_right" (formula "37") (term "0,0"))
   (rule "qeq_literals" (formula "37") (term "0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "13"))
   (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "34") (term "0"))
   (rule "polySimp_addComm0" (formula "34") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "34"))
   (rule "polySimp_mulComm0" (formula "34") (term "1"))
   (rule "polySimp_rightDist" (formula "34") (term "1"))
   (rule "mul_literals" (formula "34") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
   (rule "polySimp_elimOne" (formula "34") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "33"))
   (rule "times_zero_1" (formula "28") (term "0,0"))
   (rule "add_zero_left" (formula "28") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "5"))
   (rule "leq_literals" (formula "28") (term "0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "true_left" (formula "28"))
   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "37"))
   (rule "times_zero_1" (formula "10") (term "0,0"))
   (rule "add_zero_left" (formula "10") (term "0"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "41") (term "0,1,0,0,0,0,0,1,1,0,1"))
   (rule "nnf_imp2or" (formula "38") (term "0"))
   (rule "nnf_imp2or" (formula "30") (term "0"))
   (rule "nnf_imp2or" (formula "41") (term "0,1,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "38") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "41") (term "1,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "41") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
   (rule "commute_or_2" (formula "38") (term "0"))
   (rule "commute_or" (formula "38") (term "0,0"))
   (rule "compound_equality_comparison_2" (formula "39") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "39") (term "1"))
   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_3"))
   (rule "eval_order_array_access5" (formula "39") (term "1") (inst "#v1=x_4") (inst "#ar1=x_arr"))
   (rule "variableDeclarationAssign" (formula "39") (term "1"))
   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_1"))
   (rule "assignment" (formula "39") (term "1"))
   (builtin "One Step Simplification" (formula "39"))
   (rule "variableDeclarationAssign" (formula "39") (term "1"))
   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_4"))
   (rule "activeUseStaticFieldReadAccess" (formula "39") (term "1"))
   (rule "assignment_read_static_attribute" (formula "39") (term "1"))
   (builtin "One Step Simplification" (formula "39"))
   (rule "replaceKnownSelect_taclet1_0" (formula "39") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "39") (term "0,1,0"))
   (rule "assignment_array2" (formula "39"))
   (branch "Normal Execution (x_arr_1 != null)"
      (builtin "One Step Simplification" (formula "39"))
      (rule "pullOutSelect" (formula "39") (term "0,1,0") (inst "selectSK=arr_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
      (rule "applyEqReverse" (formula "40") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "39") (term "1"))
      (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_5"))
      (rule "activeUseStaticFieldReadAccess" (formula "39") (term "1"))
      (rule "assignment_read_static_attribute" (formula "39") (term "1"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "replaceKnownSelect_taclet1_4" (formula "39") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_5" (formula "39") (term "0,1,0"))
      (rule "methodCallThrow" (formula "41") (term "1,0,0,1"))
      (rule "ifthenelse_to_or_right" (formula "38") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "38") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "38") (term "1,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,1,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,1,1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,0"))
      (rule "add_zero_left" (formula "38") (term "0,0,1,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,1,1,0,0,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,1,0,0,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0"))
      (rule "commute_or" (formula "38") (term "0,0"))
      (rule "commute_or_2" (formula "38") (term "0"))
      (rule "commute_or" (formula "38") (term "1,1,0"))
      (rule "commute_or_2" (formula "38") (term "0,1,0"))
      (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
      (rule "commute_or" (formula "38") (term "0,0,1,0"))
      (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
      (rule "equality_comparison_simple" (formula "39") (term "1"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "cnf_rightDist" (formula "38") (term "1,1,0"))
      (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
      (rule "inEqSimp_or_tautInEq1" (formula "38") (term "0,0,1,1,0"))
      (rule "add_zero_right" (formula "38") (term "1,1,0,0,1,1,0"))
      (rule "qeq_literals" (formula "38") (term "1,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "shift_paren_or" (formula "38") (term "1,1,0"))
      (rule "commute_or" (formula "38") (term "0,1,1,0"))
      (rule "inEqSimp_or_tautInEq1" (formula "38") (term "1,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "38") (term "1,1,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,1,1,0"))
      (rule "add_literals" (formula "38") (term "1,0,1,1,1,0"))
      (rule "times_zero_1" (formula "38") (term "0,1,1,1,0"))
      (rule "leq_literals" (formula "38") (term "1,1,1,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "shift_paren_or" (formula "38") (term "0"))
      (rule "commute_or_2" (formula "38") (term "0,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "shift_paren_or" (formula "38") (term "0,0"))
      (rule "commute_or" (formula "38") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "methodCallEmpty" (formula "39") (term "1"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "emptyModality" (formula "39") (term "1"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "notRight" (formula "39"))
      (rule "ifthenelse_to_or_left" (formula "39") (term "0,0,0"))
      (rule "eqSymm" (formula "39") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "39") (term "0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
      (rule "commute_or" (formula "39") (term "0,0"))
      (rule "commute_or_2" (formula "39") (term "0"))
      (rule "commute_or" (formula "39") (term "1,1,0"))
      (rule "commute_or_2" (formula "39") (term "0,1,0"))
      (rule "commute_or" (formula "39") (term "0,0,1,0"))
      (rule "cnf_rightDist" (formula "39") (term "1,1,0"))
      (rule "cnf_rightDist" (formula "39") (term "0"))
      (rule "distr_forallAnd" (formula "39"))
      (rule "andLeft" (formula "39"))
      (rule "commute_or" (formula "40") (term "0"))
      (rule "shift_paren_or" (formula "39") (term "0"))
      (rule "commute_or_2" (formula "39") (term "0,0"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "commute_or" (formula "40") (term "1,1,0"))
      (rule "shift_paren_or" (formula "39") (term "0,0"))
      (rule "commute_or" (formula "39") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "39"))
      (rule "cnf_rightDist" (formula "40") (term "0"))
      (rule "distr_forallAnd" (formula "40"))
      (rule "andLeft" (formula "40"))
      (rule "commute_or_2" (formula "40") (term "0"))
      (rule "shift_paren_or" (formula "41") (term "0"))
      (rule "commute_or_2" (formula "41") (term "0,0"))
      (rule "inEqSimp_or_tautInEq1" (formula "41") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
      (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0"))
      (rule "add_literals" (formula "41") (term "1,0,1,0"))
      (rule "times_zero_1" (formula "41") (term "0,1,0"))
      (rule "leq_literals" (formula "41") (term "1,0"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "true_left" (formula "41"))
      (rule "shift_paren_or" (formula "40") (term "0,0"))
      (rule "commute_or" (formula "40") (term "0,0,0"))
      (rule "inEqSimp_or_tautInEq1" (formula "40") (term "0,0"))
      (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
      (rule "qeq_literals" (formula "40") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "true_left" (formula "40"))
      (rule "allLeft" (formula "15") (inst "t=j_2"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "37"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "38"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
      (rule "leq_literals" (formula "15") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "inEqSimp_subsumption1" (formula "15") (term "1") (ifseqformula "14"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "15") (term "0,0,1"))
      (rule "qeq_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "allLeft" (formula "16") (inst "t=m_0"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "27"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
      (rule "add_literals" (formula "16") (term "1,0,1"))
      (rule "times_zero_1" (formula "16") (term "0,1"))
      (rule "qeq_literals" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "allLeft" (formula "15") (inst "t=m_0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "27"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_subsumption1" (formula "15") (term "1") (ifseqformula "14"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "15") (term "0,0,1"))
      (rule "qeq_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "allLeft" (formula "16") (inst "t=j_2"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "37"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
      (rule "add_literals" (formula "16") (term "1,0,1"))
      (rule "times_zero_1" (formula "16") (term "0,1"))
      (rule "qeq_literals" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "allLeft" (formula "16") (inst "t=j_0"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "22"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_subsumption1" (formula "16") (term "1") (ifseqformula "14"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,1"))
      (rule "qeq_literals" (formula "16") (term "0,1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "allLeft" (formula "15") (inst "t=j_0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "22"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
      (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
      (rule "add_literals" (formula "15") (term "1,0,1"))
      (rule "times_zero_1" (formula "15") (term "0,1"))
      (rule "leq_literals" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_6"))
      (rule "compound_equality_comparison_2" (formula "41") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_7"))
      (rule "eval_order_array_access5" (formula "41") (term "1") (inst "#v1=x_9") (inst "#ar1=x_arr"))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_arr_2"))
      (rule "assignment" (formula "41") (term "1"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_9"))
      (rule "activeUseStaticFieldReadAccess" (formula "41") (term "1"))
      (rule "assignment_read_static_attribute" (formula "41") (term "1"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "replaceKnownSelect_taclet1_0" (formula "41") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "41") (term "0,1,0"))
      (rule "assignment_array2" (formula "41"))
      (branch "Normal Execution (x_arr_2 != null)"
         (builtin "One Step Simplification" (formula "41"))
         (rule "replaceKnownSelect_taclet01_9" (formula "41") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet01_10" (formula "41") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "41") (term "1"))
         (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_8"))
         (rule "activeUseStaticFieldReadAccess" (formula "41") (term "1"))
         (rule "assignment_read_static_attribute" (formula "41") (term "1"))
         (builtin "One Step Simplification" (formula "41"))
         (rule "replaceKnownSelect_taclet1_4" (formula "41") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_5" (formula "41") (term "0,1,0"))
         (rule "applyEq" (formula "41") (term "0,1,0,0") (ifseqformula "1"))
         (rule "equality_comparison_simple" (formula "41") (term "1"))
         (builtin "One Step Simplification" (formula "41"))
         (rule "allLeft" (formula "39") (inst "t=j_2"))
         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
         (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "36"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "28"))
         (rule "qeq_literals" (formula "39") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "34"))
         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "39") (term "0,0,1"))
         (rule "leq_literals" (formula "39") (term "0,1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_4"))
         (rule "simplifySelectOfAnon" (formula "39"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")))
         (rule "elementOfSingleton" (formula "39") (term "0,0"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
         (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "2") (ifseqformula "41"))
         (rule "allLeft" (formula "39") (inst "t=m_0"))
         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
         (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "26"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "23"))
         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "39") (term "0,0,1"))
         (rule "leq_literals" (formula "39") (term "0,1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "9"))
         (rule "qeq_literals" (formula "39") (term "0,1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_5"))
         (rule "simplifySelectOfAnon" (formula "39"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")))
         (rule "elementOfSingleton" (formula "39") (term "0,0"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
         (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "2") (ifseqformula "41"))
         (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_LOOP<<anonHeapFunction>>,
            null,
            SwapValues::$less)"))
         (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
         (rule "inEqSimp_contradInEq0" (formula "16") (term "0,0") (ifseqformula "31"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0"))
         (rule "leq_literals" (formula "16") (term "0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "qeq_literals" (formula "16") (term "0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_LOOP<<anonHeapFunction>>,
            null,
            SwapValues::$less)"))
         (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
         (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
         (rule "add_literals" (formula "15") (term "1,0,1"))
         (rule "times_zero_1" (formula "15") (term "0,1"))
         (rule "leq_literals" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "allLeft" (formula "39") (inst "t=j_0"))
         (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
         (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "21"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "39") (term "0,0,1"))
         (rule "leq_literals" (formula "39") (term "0,1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "8"))
         (rule "qeq_literals" (formula "39") (term "0,1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_6"))
         (rule "simplifySelectOfAnon" (formula "39"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")))
         (rule "elementOfSingleton" (formula "39") (term "0,0"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
         (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "2") (ifseqformula "41"))
         (rule "ifSplit" (formula "41"))
         (branch "if x_6 true"
            (builtin "One Step Simplification" (formula "42"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "preincrement" (formula "41") (term "1"))
            (rule "activeUseStaticFieldWriteAccess" (formula "41") (term "1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_10"))
            (rule "compound_int_cast_expression" (formula "41") (term "1") (inst "#v=x_11"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_11"))
            (rule "remove_parentheses_right" (formula "41") (term "1"))
            (rule "compound_addition_1" (formula "41") (term "1") (inst "#v=x_12"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_12"))
            (rule "activeUseStaticFieldReadAccess" (formula "41") (term "1"))
            (rule "assignment_read_static_attribute" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "replaceKnownSelect_taclet1_0" (formula "41") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "41") (term "0,1,0"))
            (rule "assignmentAdditionInt" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "translateJavaAddInt" (formula "41") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "41") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "41") (term "1"))
            (rule "assignment" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "assignment_write_static_attribute" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "tryEmpty" (formula "41") (term "1"))
            (rule "methodCallEmpty" (formula "41") (term "1"))
            (rule "emptyModality" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "eqSymm" (formula "41") (term "1,0,1,0,0"))
            (rule "eqSymm" (formula "41") (term "1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "0,0,1"))
            (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1_7" (formula "41") (term "1,1,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_8" (formula "41") (term "1,1,0,1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "41") (term "1,0,0,0,0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
            (rule "narrowSelectArrayType" (formula "41") (term "1,1,1,0,1,0,0") (ifseqformula "2") (ifseqformula "40"))
            (rule "precOfInt" (formula "41") (term "1"))
            (rule "dismissNonSelectedField" (formula "41") (term "1,0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1_4" (formula "41") (term "1,1,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_5" (formula "41") (term "1,1,0,1,0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "41") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "41") (term "0,0,1,1"))
            (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "41") (term "1,1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "41") (term "1,0,0,0,1,1"))
            (rule "add_zero_right" (formula "41") (term "0,0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "41") (term "0,1"))
            (rule "times_zero_2" (formula "41") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "41") (term "0,0,1"))
            (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0") (ifseqformula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "41") (term "0,1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "41") (term "0,0,1"))
            (rule "inEqSimp_subsumption1" (formula "41") (term "0,1,1,0,0,1,0,0") (ifseqformula "6"))
            (rule "leq_literals" (formula "41") (term "0,0,1,1,0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "pullOutSelect" (formula "41") (term "0,1,0,0,0,0,0,0") (inst "selectSK=SwapValues_less_2"))
            (rule "applyEq" (formula "42") (term "0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "42") (term "0,0,1") (ifseqformula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "42") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "42") (term "0,0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "41") (term "1,1"))
            (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,1"))
            (rule "add_literals" (formula "41") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "41") (term "0,1,1"))
            (rule "leq_literals" (formula "41") (term "1,1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "41") (term "1"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
            (rule "mul_literals" (formula "41") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
            (rule "polySimp_addComm0" (formula "41") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
            (rule "polySimp_elimOne" (formula "41") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "41") (term "0,0,0,0,0,0,0") (ifseqformula "29"))
            (rule "leq_literals" (formula "41") (term "0,0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "inEqSimp_subsumption1" (formula "41") (term "1,0,0,0") (ifseqformula "38"))
            (rule "inEqSimp_homoInEq0" (formula "41") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
            (rule "qeq_literals" (formula "41") (term "0,1,0,0,0"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "allLeft" (formula "31") (inst "t=m_0"))
            (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
            (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
            (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "22"))
            (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
            (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "pullOutSelect" (formula "31") (term "0,1") (inst "selectSK=arr_7"))
            (rule "simplifySelectOfAnon" (formula "31"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")) (ifInst ""  (formula "3")))
            (rule "eqSymm" (formula "32") (term "1"))
            (rule "elementOfSingleton" (formula "31") (term "0,0"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")))
            (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "31"))
            (rule "hideAuxiliaryEq" (formula "31"))
            (rule "eqSymm" (formula "31") (term "1"))
            (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "26"))
            (rule "inEqSimp_contradEq7" (formula "31") (term "1") (ifseqformula "14"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
            (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "31") (term "0,0,1"))
            (rule "leq_literals" (formula "31") (term "0,1"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "31"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
            (rule "polySimp_addComm0" (formula "39") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "39"))
            (rule "polySimp_mulLiterals" (formula "39") (term "0"))
            (rule "polySimp_elimOne" (formula "39") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "31"))
            (rule "times_zero_1" (formula "29") (term "0,0"))
            (rule "add_zero_left" (formula "29") (term "0"))
            (rule "allLeft" (formula "40") (inst "t=int::select(anon_heap_LOOP<<anonHeapFunction>>,
            null,
            SwapValues::$less)"))
            (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "1"))
            (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "29"))
            (rule "qeq_literals" (formula "40") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "pullOutSelect" (formula "40") (term "0,0") (inst "selectSK=arr_8"))
            (rule "simplifySelectOfAnon" (formula "40"))
            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
            (rule "elementOfSingleton" (formula "40") (term "0,0"))
            (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "43")))
            (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "40"))
            (rule "hideAuxiliaryEq" (formula "40"))
            (rule "narrowSelectArrayType" (formula "40") (term "0,0") (ifseqformula "2") (ifseqformula "42"))
            (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "true_left" (formula "40"))
            (rule "allLeft" (formula "32") (inst "t=j_0"))
            (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
            (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
            (rule "inEqSimp_contradInEq0" (formula "32") (term "0,0") (ifseqformula "17"))
            (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
            (rule "leq_literals" (formula "32") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "pullOutSelect" (formula "32") (term "0,1") (inst "selectSK=arr_9"))
            (rule "simplifySelectOfAnon" (formula "32"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
            (rule "eqSymm" (formula "33") (term "1"))
            (rule "elementOfSingleton" (formula "32") (term "0,0"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")))
            (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "32"))
            (rule "hideAuxiliaryEq" (formula "32"))
            (rule "eqSymm" (formula "32") (term "1"))
            (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "cut_direct" (formula "42") (term "1"))
            (branch "CUT: SwapValues.less@anon_heap_LOOP«anonHeapFunction» ≤ -1 + SwapValues.great TRUE"
               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "1")))
               (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
               (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0"))
               (rule "qeq_literals" (formula "31") (term "0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
               (rule "times_zero_1" (formula "30") (term "0,0"))
               (rule "add_zero_left" (formula "30") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30"))
               (rule "mul_literals" (formula "30") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
               (rule "polySimp_addComm0" (formula "39") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "39"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0"))
               (rule "polySimp_elimOne" (formula "39") (term "0"))
               (rule "andRight" (formula "42"))
               (branch "Case 1"
                  (rule "andRight" (formula "42"))
                  (branch "Case 1"
                     (rule "andRight" (formula "42"))
                     (branch "Case 1"
                        (rule "allRight" (formula "42") (inst "sk=i_0"))
                        (rule "orRight" (formula "42"))
                        (rule "orRight" (formula "42"))
                        (rule "inEqSimp_geqRight" (formula "43"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "43"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_11"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "7")))
                        (rule "eqSymm" (formula "45"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                        (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "44"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "35"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "38"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "42"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "33"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (rule "add_zero_left" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "allLeft" (formula "48") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                        (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "48") (term "0,0,1"))
                        (rule "leq_literals" (formula "48") (term "0,1"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "18"))
                        (rule "qeq_literals" (formula "48") (term "0,1"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_12"))
                        (rule "simplifySelectOfAnon" (formula "48"))
                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "51")) (ifInst ""  (formula "11")))
                        (rule "elementOfSingleton" (formula "48") (term "0,0"))
                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "51")))
                        (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "48"))
                        (rule "hideAuxiliaryEq" (formula "48"))
                        (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "10") (ifseqformula "50"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "allLeft" (formula "25") (inst "t=i_0"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "25") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0"))
                        (rule "leq_literals" (formula "25") (term "0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "allLeft" (formula "24") (inst "t=i_0"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "24") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_strengthen1" (formula "24") (ifseqformula "52"))
                        (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                        (rule "add_literals" (formula "52") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0"))
                        (rule "add_zero_right" (formula "52") (term "0,0"))
                        (rule "leq_literals" (formula "52") (term "0"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "false_right" (formula "52"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "allLeft" (formula "42") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet00000001_25" (formula "42") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000001_26" (formula "42") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                        (rule "inEqSimp_contradEq7" (formula "42") (term "1") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                        (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "42") (term "0,0,1"))
                        (rule "leq_literals" (formula "42") (term "0,1"))
                        (builtin "One Step Simplification" (formula "42"))
                        (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                        (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "42") (term "0,0,0"))
                        (rule "leq_literals" (formula "42") (term "0,0"))
                        (builtin "One Step Simplification" (formula "42"))
                        (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "42"))
                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteLeq" (formula "45"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "leq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteLeq" (formula "40"))
                        (rule "applyEqRigid" (formula "41") (term "1,1,0,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteGeq" (formula "47"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "40"))
                        (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                        (rule "add_literals" (formula "40") (term "1,0"))
                        (rule "times_zero_1" (formula "40") (term "0"))
                        (rule "qeq_literals" (formula "40"))
                        (rule "true_left" (formula "40"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,1,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0"))
                        (rule "add_zero_right" (formula "24") (term "0"))
                        (rule "leq_literals" (formula "24"))
                        (rule "closeFalse" (formula "24"))
                     )
                     (branch "Case 2"
                        (rule "nnf_ex2all" (formula "42"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "allLeft" (formula "1") (inst "t=m_0"))
                        (rule "replaceKnownSelect_taclet0001_19" (formula "1") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0001_20" (formula "1") (term "0,0,1"))
                        (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "33"))
                        (rule "applyEqRigid" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "33"))
                        (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                        (rule "add_literals" (formula "33") (term "1,0"))
                        (rule "times_zero_1" (formula "33") (term "0"))
                        (rule "qeq_literals" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_commuteGeq" (formula "39"))
                        (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "17"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0"))
                        (rule "add_zero_right" (formula "17") (term "0"))
                        (rule "leq_literals" (formula "17"))
                        (rule "closeFalse" (formula "17"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "42") (inst "sk=iv_1"))
                     (rule "orRight" (formula "42"))
                     (rule "orRight" (formula "42"))
                     (rule "inEqSimp_leqRight" (formula "42"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "44") (term "0,0,1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                     (rule "inEqSimp_geqRight" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                     (rule "eqSymm" (formula "44"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                     (rule "eqSymm" (formula "44"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,1"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1"))
                     (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_10"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "7")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                     (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "narrowSelectArrayType" (formula "44") (term "0") (ifseqformula "5") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "closeTrue" (formula "44"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "42") (inst "sk=f_1"))
                  (rule "allRight" (formula "42") (inst "sk=o_1"))
                  (rule "orRight" (formula "42"))
                  (rule "orRight" (formula "42"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "45"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "CUT: SwapValues.less@anon_heap_LOOP«anonHeapFunction» ≤ -1 + SwapValues.great FALSE"
               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
               (rule "false_right" (formula "43"))
               (rule "inEqSimp_leqRight" (formula "42"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "31"))
               (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "32"))
               (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
               (rule "add_literals" (formula "32") (term "1,0"))
               (rule "times_zero_1" (formula "32") (term "0"))
               (rule "qeq_literals" (formula "32"))
               (rule "true_left" (formula "32"))
               (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_commuteGeq" (formula "40"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,0"))
               (rule "times_zero_1" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
               (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
               (rule "mul_literals" (formula "39") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
               (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
               (rule "add_literals" (formula "39") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "39") (term "1,0,0"))
               (rule "add_zero_right" (formula "39") (term "0,0"))
               (rule "qeq_literals" (formula "39") (term "0"))
               (builtin "One Step Simplification" (formula "39"))
               (rule "true_left" (formula "39"))
               (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "8"))
               (rule "leq_literals" (formula "30") (term "0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "30"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
               (rule "inEqSimp_homoInEq0" (formula "14"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "26"))
               (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "26"))
               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "26"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "26"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
               (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "26"))
               (rule "applyEq" (formula "36") (term "0") (ifseqformula "26"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "26"))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
               (rule "applyEq" (formula "30") (term "0") (ifseqformula "25"))
               (rule "inEqSimp_homoInEq0" (formula "30"))
               (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "1,0"))
               (rule "times_zero_1" (formula "30") (term "0"))
               (rule "qeq_literals" (formula "30"))
               (rule "true_left" (formula "30"))
               (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "25"))
               (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
               (rule "inEqSimp_homoInEq1" (formula "26"))
               (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "1,0"))
               (rule "times_zero_1" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "26"))
               (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "14"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
               (rule "add_literals" (formula "14") (term "1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0"))
               (rule "add_zero_right" (formula "14") (term "0"))
               (rule "leq_literals" (formula "14"))
               (rule "closeFalse" (formula "14"))
            )
         )
         (branch "if x_6 false"
            (builtin "One Step Simplification" (formula "42"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (x_arr_2 = null)"
         (builtin "One Step Simplification" (formula "42"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_2 != null, but x_9 Out of Bounds!)"
         (builtin "One Step Simplification" (formula "42"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
         (rule "false_right" (formula "42"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "30"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "33"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "1"))
         (rule "andLeft" (formula "36"))
         (rule "inEqSimp_homoInEq1" (formula "36"))
         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
         (rule "add_literals" (formula "36") (term "1,1,0"))
         (rule "times_zero_1" (formula "36") (term "1,0"))
         (rule "add_zero_right" (formula "36") (term "0"))
         (rule "leq_literals" (formula "36"))
         (rule "closeFalse" (formula "36"))
      )
   )
   (branch "Null Reference (x_arr_1 = null)"
      (rule "false_right" (formula "40"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr_1 != null, but x_4 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "40"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
      (rule "false_right" (formula "40"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "29"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "35"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "29"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "exLeft" (formula "31") (inst "sk=j_1"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "29"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "34"))
   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "variableDeclarationAssign" (formula "37") (term "1"))
   (rule "variableDeclaration" (formula "37") (term "1") (newnames "b_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29"))
   (rule "polySimp_mulComm0" (formula "29") (term "1"))
   (rule "polySimp_rightDist" (formula "29") (term "1"))
   (rule "mul_literals" (formula "29") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1"))
   (rule "array2seqDef" (formula "35") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "35"))
   (rule "narrowSelectArrayType" (formula "35") (term "2,0") (ifseqformula "1") (ifseqformula "36"))
   (rule "array2seqDef" (formula "35") (term "1") (inst "u=u"))
   (rule "eqSymm" (formula "35"))
   (rule "eqSeqDef" (formula "35") (inst "iv=iv"))
   (rule "andLeft" (formula "35"))
   (rule "getOfSeqDef" (formula "36") (term "1,1,0"))
   (rule "castDel" (formula "36") (term "2,1,1,0"))
   (rule "castDel" (formula "36") (term "1,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,2,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
   (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0"))
   (rule "lenOfSeqDef" (formula "35") (term "0"))
   (rule "eqSymm" (formula "35"))
   (rule "polySimp_elimSub" (formula "35") (term "1,1"))
   (rule "times_zero_2" (formula "35") (term "1,1,1"))
   (rule "add_zero_right" (formula "35") (term "1,1"))
   (rule "lenOfSeqDef" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "36") (term "1,1,1,1,0,0"))
   (rule "add_zero_right" (formula "36") (term "1,1,1,0,0"))
   (rule "getOfSeqDef" (formula "36") (term "0,1,0"))
   (rule "castDel" (formula "36") (term "1,0,1,0"))
   (rule "castDel" (formula "36") (term "2,0,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,2,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "36") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "36") (term "1,1,0,0,1,0"))
   (rule "lenOfSeqDef" (formula "35") (term "0"))
   (rule "polySimp_elimSub" (formula "35") (term "1,0"))
   (rule "times_zero_2" (formula "35") (term "1,1,0"))
   (rule "add_zero_right" (formula "35") (term "1,0"))
   (builtin "One Step Simplification" (formula "35"))
   (rule "true_left" (formula "35"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,0"))
   (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "eqSymm" (formula "35") (term "1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "0,0,1,1,1,0,0"))
   (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "5"))
   (rule "leq_literals" (formula "35") (term "0,0,1,1,1,0,0"))
   (builtin "One Step Simplification" (formula "35"))
   (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=SwapValues_pivot1_0"))
   (rule "simplifySelectOfAnon" (formula "30"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "elementOfSingleton" (formula "30") (term "0,0"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "30"))
   (rule "hideAuxiliaryEq" (formula "30"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=SwapValues_less_0"))
   (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
   (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "28"))
   (rule "applyEq" (formula "35") (term "0") (ifseqformula "28"))
   (rule "applyEq" (formula "32") (term "0") (ifseqformula "28"))
   (rule "simplifySelectOfAnon" (formula "28"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfSingleton" (formula "28") (term "0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "31") (term "1,1,1,0,0") (ifseqformula "28"))
   (rule "hideAuxiliaryEq" (formula "28"))
   (rule "inEqSimp_commuteLeq" (formula "28"))
   (rule "pullOutSelect" (formula "33") (term "1") (inst "selectSK=SwapValues_pivot2_0"))
   (rule "simplifySelectOfAnon" (formula "34"))
   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "37")) (ifInst ""  (formula "2")))
   (rule "simplifySelectOfAnon" (formula "33"))
   (builtin "One Step Simplification" (formula "33"))
   (rule "elementOfSingleton" (formula "34") (term "0,0"))
   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "37")))
   (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
   (rule "hideAuxiliaryEq" (formula "34"))
   (rule "elementOfSingleton" (formula "33") (term "0,0"))
   (builtin "One Step Simplification" (formula "33"))
   (rule "eqSymm" (formula "33"))
   (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=SwapValues_great_0"))
   (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
   (rule "applyEq" (formula "28") (term "0") (ifseqformula "32"))
   (rule "simplifySelectOfAnon" (formula "32"))
   (builtin "One Step Simplification" (formula "32"))
   (rule "elementOfSingleton" (formula "32") (term "0,0"))
   (builtin "One Step Simplification" (formula "32"))
   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "32"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "32"))
   (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
   (rule "hideAuxiliaryEq" (formula "31"))
   (rule "inEqSimp_commuteGeq" (formula "28"))
   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "28"))
   (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
   (rule "polySimp_elimOne" (formula "33") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "10"))
   (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
   (rule "add_literals" (formula "33") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "33") (term "1,0,0"))
   (rule "add_zero_right" (formula "33") (term "0,0"))
   (rule "qeq_literals" (formula "33") (term "0"))
   (builtin "One Step Simplification" (formula "33"))
   (rule "true_left" (formula "33"))
   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "30"))
   (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
   (rule "polySimp_elimOne" (formula "33") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "30"))
   (rule "times_zero_1" (formula "27") (term "0,0"))
   (rule "add_zero_left" (formula "27") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "12"))
   (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "32") (term "0"))
   (rule "polySimp_addComm0" (formula "32") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1"))
   (rule "polySimp_rightDist" (formula "32") (term "1"))
   (rule "mul_literals" (formula "32") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
   (rule "polySimp_elimOne" (formula "32") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "11"))
   (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
   (rule "polySimp_elimOne" (formula "33") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
   (rule "times_zero_1" (formula "28") (term "0,0"))
   (rule "add_zero_left" (formula "28") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "6"))
   (rule "leq_literals" (formula "28") (term "0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "true_left" (formula "28"))
   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "36"))
   (rule "times_zero_1" (formula "9") (term "0,0"))
   (rule "add_zero_left" (formula "9") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "33"))
   (rule "times_zero_1" (formula "27") (term "0,0"))
   (rule "add_zero_left" (formula "27") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "4"))
   (rule "leq_literals" (formula "27") (term "0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "nnf_imp2or" (formula "38") (term "0"))
   (rule "nnf_imp2or" (formula "30") (term "0"))
   (rule "nnf_notAnd" (formula "38") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
   (rule "compound_equality_comparison_2" (formula "40") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "40") (term "1"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "x"))
   (rule "eval_order_array_access5" (formula "40") (term "1") (inst "#v1=x_2") (inst "#ar1=x_arr"))
   (rule "variableDeclarationAssign" (formula "40") (term "1"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_arr"))
   (rule "assignment" (formula "40") (term "1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "variableDeclarationAssign" (formula "40") (term "1"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_2"))
   (rule "activeUseStaticFieldReadAccess" (formula "40") (term "1"))
   (rule "assignment_read_static_attribute" (formula "40") (term "1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "replaceKnownSelect_taclet2_2" (formula "40") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet2_3" (formula "40") (term "0,1,0"))
   (rule "assignment_array2" (formula "40"))
   (branch "Normal Execution (x_arr != null)"
      (builtin "One Step Simplification" (formula "40"))
      (rule "pullOutSelect" (formula "40") (term "0,1,0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "3")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
      (rule "applyEqReverse" (formula "41") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_1"))
      (rule "activeUseStaticFieldReadAccess" (formula "40") (term "1"))
      (rule "assignment_read_static_attribute" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "replaceKnownSelect_taclet2_0" (formula "40") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "40") (term "0,1,0"))
      (rule "commute_or_2" (formula "38") (term "0"))
      (rule "commute_or" (formula "38") (term "0,0"))
      (rule "equality_comparison_simple" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "methodCallEmpty" (formula "40") (term "1"))
      (rule "emptyModality" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "impRight" (formula "40"))
      (rule "notLeft" (formula "1"))
      (rule "methodCallEmpty" (formula "41") (term "1"))
      (rule "tryEmpty" (formula "41") (term "1"))
      (rule "emptyModality" (formula "41") (term "1"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "eqSymm" (formula "41") (term "1,0,0"))
      (rule "eqSymm" (formula "41") (term "1,0,0,1"))
      (rule "narrowSelectArrayType" (formula "41") (term "1,1,1,0,0") (ifseqformula "1") (ifseqformula "40"))
      (rule "inEqSimp_subsumption1" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "5"))
      (rule "leq_literals" (formula "41") (term "0,0,1,1,0,0,0"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "andRight" (formula "41"))
      (branch "Case 1"
         (rule "allRight" (formula "41") (inst "sk=iv_0"))
         (rule "orRight" (formula "41"))
         (rule "orRight" (formula "41"))
         (rule "inEqSimp_geqRight" (formula "42"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "42"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "1")))
         (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
         (rule "eqSymm" (formula "43"))
         (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
         (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
         (rule "eqSymm" (formula "43"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
         (rule "mul_literals" (formula "43") (term "0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1"))
         (rule "replace_known_left" (formula "43") (term "0,1") (ifseqformula "2"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
         (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "2"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "5")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "3") (ifseqformula "42"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "closeTrue" (formula "43"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "41") (inst "sk=f_0"))
         (rule "allRight" (formula "41") (inst "sk=o_0"))
         (rule "orRight" (formula "41"))
         (rule "orRight" (formula "41"))
         (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "eqSymm" (formula "44"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (x_arr = null)"
      (builtin "One Step Simplification" (formula "41"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr != null, but x_2 Out of Bounds!)"
      (rule "false_right" (formula "41"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "29"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "34"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
