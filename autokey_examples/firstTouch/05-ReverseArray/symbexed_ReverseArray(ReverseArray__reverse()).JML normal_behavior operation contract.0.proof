\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 08 11:46:15 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 08 11:46:15 CET 2019
contract=ReverseArray[ReverseArray\\:\\:reverse()].JML normal_behavior operation contract.0
name=ReverseArray[ReverseArray\\:\\:reverse()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "2917")

(branch "dummy ID"
(rule "elementOfAllFields" (formula "1") (term "0,0,0,0,1,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "inInt" (formula "1") (term "1,0,0,0,0,0,0,1,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,0,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,2,1,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,2,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,0,2,0,1,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "Class_invariant_axiom_for_ReverseArray" (formula "6") (ifseqformula "3"))
(rule "notLeft" (formula "6"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_reverse,savedHeapBefore_reverse"))
(rule "simplifyUpdate2" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "i"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "variableDeclarationFinalAssign" (formula "8") (term "1"))
(rule "variableDeclarationFinal" (formula "8") (term "1") (newnames "length_1"))
(rule "remove_parentheses_right" (formula "8") (term "1"))
(rule "compound_division_1" (formula "8") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "eval_order_array_access6" (formula "8") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr"))
(rule "assignment_read_attribute_this" (formula "8"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "assignment_read_length" (formula "8"))
(branch "Normal Execution (x_arr != null)"
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "applyOnElementary" (formula "8") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
   (rule "applyOnPV" (formula "8") (term "0,0,1,0"))
   (rule "assignmentDivisionInt" (formula "8"))
   (branch "Case 1"
      (rule "translateJavaDivInt" (formula "8") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "1,0"))
      (rule "applyOnElementary" (formula "8") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "8") (term "0,0,1,0"))
       (builtin "Loop (Scope) Invariant" (formula "8") (newnames "heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f,variant"))
      (branch "Invariant Initially Valid"
          (opengoal " ")
      )
      (branch "Invariant Preserved and Used"
         (rule "false_to_not_true" (formula "10") (term "0,1,0,1,1,1,1"))
         (rule "inInt" (formula "6") (term "1,1,1"))
         (rule "concrete_and_3" (formula "6") (term "1,1"))
         (rule "inInt" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
         (rule "concrete_and_3" (formula "6") (term "0,0,0,0,0,0,1,1"))
         (rule "inInt" (formula "6") (term "1,0,0,1,0,0,0,1,1"))
         (rule "concrete_and_3" (formula "6") (term "0,0,1,0,0,0,1,1"))
         (rule "elementOfAllFields" (formula "10") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
         (rule "inInt" (formula "10") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "inInt" (formula "10") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "concrete_and_3" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,2,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,1,1,1,0,1,1,1,1"))
         (rule "translateJavaDivInt" (formula "10") (term "0,2,0,1,1,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaMod" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "10") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaDivInt" (formula "6") (term "0,2,0,1,1,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "6") (term "0,2,0,0,1,0,0,0,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "6") (term "0,2,1,1,1,0,0,0,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "6") (term "0,2,1,0,1,0,1,0,0,0,1,1"))
         (rule "translateJavaSubInt" (formula "6") (term "0,2,0,0,1,0,1,0,0,0,1,1"))
         (rule "translateJavaMod" (formula "6") (term "0,0,0,1,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "10") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "10") (term "1,0,2,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "10") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "10") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,0,0,1,0,0,0,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,0,0,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,0,1,0,1,0,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,0,0,1,0,1,0,0,0,1,1"))
         (rule "simplifyUpdate2" (formula "6"))
         (rule "simplifyUpdate2" (formula "10") (term "1"))
         (rule "eqSymm" (formula "6") (term "1,1,0,0,0,0,0,1,1"))
         (rule "eqSymm" (formula "10") (term "1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "eqSymm" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "6") (term "0,2,1,0,1,0,1,0,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "6") (term "0,2,0,0,1,0,1,0,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "6") (term "0,2,0,0,1,0,0,0,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,1,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "6") (term "0,2,0,1,1,0,0,0,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,2,1,0,1,0,1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,2,0,0,1,0,1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,2,0,0,1,0,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,2,0,1,1,0,0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "sequentialToParallel2" (formula "6"))
         (rule "simplifyUpdate2" (formula "6"))
         (rule "simplifyUpdate3" (formula "6") (term "1,0"))
         (rule "andLeft" (formula "6"))
         (rule "simplifyUpdate2" (formula "7"))
         (rule "andLeft" (formula "6"))
         (rule "simplifyUpdate2" (formula "7"))
         (rule "andLeft" (formula "6"))
         (rule "simplifyUpdate2" (formula "7"))
         (rule "andLeft" (formula "6"))
         (rule "simplifyUpdate2" (formula "6"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "sequentialToParallel2" (formula "14") (term "1"))
         (rule "applyOnElementary" (formula "14") (term "1,0,1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnParallel" (formula "14") (term "1,0"))
         (rule "simplifyUpdate3" (formula "14") (term "0,1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,1,0"))
         (rule "sequentialToParallel1" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate3" (formula "14") (term "0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "7") (term "1,1,0,2,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "7") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "6") (term "1,1,0,2,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "6") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,2,1,0,1,0,1"))
         (rule "mul_literals" (formula "7") (term "0,1,0,2,1,0,1,0,1"))
         (rule "eqSymm" (formula "7") (term "0,1,0,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,2,0,1,1,0,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,2,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,2,1,0,1,0,1"))
         (rule "mul_literals" (formula "7") (term "0,1,0,2,1,0,1,0,1"))
         (rule "eqSymm" (formula "7") (term "0,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "simplifyUpdate1" (formula "10") (term "0"))
         (rule "simplifyUpdate1" (formula "10") (term "1"))
         (rule "applyOnPV" (formula "10") (term "0"))
         (rule "applyOnPV" (formula "10") (term "1"))
         (rule "applyOnRigidFormula" (formula "9"))
         (rule "simplifyUpdate1" (formula "9") (term "1"))
         (rule "applyOnPV" (formula "9") (term "0"))
         (rule "applyOnRigidFormula" (formula "8"))
         (rule "simplifyUpdate2" (formula "8") (term "0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,2,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,2,0,0,1,0,1"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,2,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "7") (term "0,0,2,1,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "8") (term "1"))
         (rule "simplifyUpdate1" (formula "8") (term "0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1"))
         (rule "eqSymm" (formula "8") (term "1"))
         (rule "applyOnRigidFormula" (formula "8") (term "0"))
         (rule "applyOnRigidFormula" (formula "6"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "7"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1"))
         (rule "applyOnPV" (formula "8") (term "0,0,1"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1"))
         (rule "applyOnPV" (formula "8") (term "0,1,1"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "6") (term "0"))
         (rule "simplifyUpdate2" (formula "6") (term "1,0"))
         (rule "simplifyUpdate2" (formula "6") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "0"))
         (rule "simplifyUpdate2" (formula "7") (term "1,0"))
         (rule "simplifyUpdate2" (formula "7") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,0,1"))
         (rule "applyOnPV" (formula "8") (term "0,2,0,1"))
         (rule "eqSymm" (formula "8") (term "1"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,0,0"))
         (rule "applyOnRigidFormula" (formula "6") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "6") (term "0,0"))
         (rule "simplifyUpdate2" (formula "6") (term "0,0,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0,1,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,1,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "0,0"))
         (rule "simplifyUpdate2" (formula "7") (term "0,0,0"))
         (rule "simplifyUpdate2" (formula "7") (term "1,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,1"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,1"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1,1"))
         (rule "applyOnPV" (formula "8") (term "0,1,1,1"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,1,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,1,1"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,0,1"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "6") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "6") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "applyOnRigidFormula" (formula "6") (term "1,0,0"))
         (rule "applyOnPV" (formula "6") (term "1,1,0,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "0,0,0"))
         (rule "applyOnPV" (formula "7") (term "1,0,0,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "7") (term "1,0,0"))
         (rule "applyOnPV" (formula "7") (term "1,1,0,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,2,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,2,0,1"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,1,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,1,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,1,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,1,1,0"))
         (rule "eqSymm" (formula "7") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,2,0,1"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,1,1,1,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,1,0,1,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,1,0,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,1,0,0,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,1,0,1,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,1,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "2,0,0,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,0,2,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,0,0,2,0,1"))
         (rule "applyOnPV" (formula "8") (term "0,0,0,0,2,0,1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,0,0,2,0,1"))
         (rule "eqSymm" (formula "8") (term "1"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,1,1,1,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "2,0,0,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,2,0,0,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,0,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,2,0,0,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,1,0,0,2,0,1,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,0,1,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0,0,2,0,0,1,0"))
         (rule "applyOnPV" (formula "6") (term "0,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,0,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0,0,2,0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0,0,2,0,0,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0,0,2,0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0,0,2,0,0,1,0"))
         (rule "pullOutSelect" (formula "14") (term "0,1,0,1,1,0") (inst "selectSK=ReverseArray_a_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (rule "replaceKnownSelect_taclet100_0" (formula "9") (term "1,0,1"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "9") (term "0,0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "7") (term "1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "7") (term "1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "8") (term "1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "8") (term "1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "8") (term "0,1,0,0,2,0,0,1,0"))
         (rule "replaceKnownSelect_taclet100_0" (formula "7") (term "0,1,0,0,2,0,1,1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "8") (term "0,1,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
         (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_1" (formula "1") (term "1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "3"))
         (rule "concrete_not_1" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "8") (term "1,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "7") (term "1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "8") (term "0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "6") (term "1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "7") (term "1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "6") (term "1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "14") (term "0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "7") (term "0,1,0,0,2,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "6") (term "0,1,0,0,2,0,1,1,0"))
         (rule "eqSymm" (formula "7") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "pullOutSelect" (formula "8") (term "0,1") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "8"))
         (rule "elementOfFreshLocs" (formula "8") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "8") (term "0,0,0,0"))
         (rule "eqClose" (formula "8") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "8") (term "0,0,0"))
         (rule "equalUnique" (formula "8") (term "0,0,0,0"))
         (rule "concrete_not_2" (formula "8") (term "0,0,0"))
         (rule "concrete_or_1" (formula "8") (term "0,0"))
         (rule "ifthenelse_true" (formula "8") (term "0"))
         (rule "hideAuxiliaryEq" (formula "8"))
         (rule "replaceKnownAuxiliaryConstant_taclet100_3" (formula "8") (term "0,1"))
         (rule "commute_and" (formula "6") (term "0,0"))
         (rule "arrayLengthNotNegative" (formula "5") (term "0"))
         (rule "arrayLengthIsAShort" (formula "5") (term "0"))
         (rule "inShort" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "commute_and" (formula "7") (term "0,0"))
         (rule "commute_and" (formula "7") (term "1,0"))
         (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
         (rule "less_than_comparison_simple" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
         (rule "ifSplit" (formula "14"))
         (branch "if x_2 true"
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "tmp"))
            (rule "eval_order_array_access4" (formula "15") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_1"))
            (rule "assignment_read_attribute_this" (formula "15"))
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet100_0" (formula "15") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "15") (term "0,1,0"))
            (rule "assignment_array2" (formula "15"))
            (branch "Normal Execution (x_arr_1 != null)"
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,2,0,1,0"))
               (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00100_5" (formula "15") (term "0,1,0"))
               (rule "eval_order_array_access1" (formula "15") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_2"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "15") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "15") (term "0,1,0"))
               (rule "eval_order_array_access3" (formula "15") (term "1") (inst "#v1=x_3") (inst "#v2=x_2") (inst "#v0=x_arr_3"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_3"))
               (rule "assignment" (formula "15") (term "1"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnPV" (formula "15") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "15") (term "1"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnPV" (formula "15") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
               (rule "eval_order_array_access4" (formula "15") (term "1") (inst "#v0=x_arr_4"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_4"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "15") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "15") (term "0,1,0"))
               (rule "eval_order_array_access5" (formula "15") (term "1") (inst "#v1=x_5") (inst "#ar1=x_arr_5"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_5"))
               (rule "assignment" (formula "15") (term "1"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnPV" (formula "15") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_5"))
               (rule "compound_subtraction_2" (formula "15") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_6"))
               (rule "eval_order_access2" (formula "15") (term "1") (inst "#v0=x_arr_6"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_6"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "15") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "15") (term "0,1,0"))
               (rule "assignment_read_length" (formula "15"))
               (branch "Normal Execution (x_arr_6 != null)"
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_7"))
                  (rule "remove_parentheses_right" (formula "15") (term "1"))
                  (rule "assignmentAdditionInt" (formula "15") (term "1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
                  (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                  (rule "translateJavaSubInt" (formula "15") (term "0,0,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                  (rule "assignment_array2" (formula "15"))
                  (branch "Normal Execution (x_arr_5 != null)"
                     (rule "sequentialToParallel2" (formula "15"))
                     (rule "simplifyUpdate2" (formula "15"))
                     (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                     (rule "applyOnElementary" (formula "15") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,2,0,1,0"))
                     (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                     (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000100_7" (formula "15") (term "0,1,0"))
                     (rule "assignment_to_primitive_array_component" (formula "15"))
                     (branch "Normal Execution (x_arr_3 != null)"
                        (rule "sequentialToParallel2" (formula "15"))
                        (rule "simplifyUpdate2" (formula "15"))
                        (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                        (rule "applyOnElementary" (formula "15") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
                        (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "15") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "15") (term "0,2,0,1,0"))
                        (rule "eval_order_array_access1" (formula "15") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_7"))
                        (rule "assignment_read_attribute_this" (formula "15"))
                        (rule "sequentialToParallel2" (formula "15"))
                        (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                        (rule "applyOnElementary" (formula "15") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet100_0" (formula "15") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "15") (term "0,1,0"))
                        (rule "eval_order_array_access2" (formula "15") (term "1") (inst "#v0=x_2") (inst "#ar1=x_arr_8"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_arr_8"))
                        (rule "assignment" (formula "15") (term "1"))
                        (rule "sequentialToParallel2" (formula "15"))
                        (rule "simplifyUpdate2" (formula "15"))
                        (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                        (rule "applyOnElementary" (formula "15") (term "1,0"))
                        (rule "applyOnPV" (formula "15") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_8"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "15"))
                        (rule "concrete_or_2" (formula "6"))
                        (rule "compound_subtraction_2" (formula "16") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_9"))
                        (rule "eval_order_access2" (formula "16") (term "1") (inst "#v0=x_arr_9"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr_9"))
                        (rule "assignment_read_attribute_this" (formula "16"))
                        (rule "sequentialToParallel2" (formula "16"))
                        (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                        (rule "applyOnElementary" (formula "16") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "16") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet100_0" (formula "16") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "16") (term "0,1,0"))
                        (rule "assignment_read_length" (formula "16"))
                        (branch "Normal Execution (x_arr_9 != null)"
                           (rule "sequentialToParallel2" (formula "16"))
                           (rule "simplifyUpdate2" (formula "16"))
                           (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                           (rule "applyOnElementary" (formula "16") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                           (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
                           (rule "variableDeclarationAssign" (formula "16") (term "1"))
                           (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_10"))
                           (rule "remove_parentheses_right" (formula "16") (term "1"))
                           (rule "assignmentAdditionInt" (formula "16") (term "1"))
                           (rule "translateJavaAddInt" (formula "16") (term "0,0,1"))
                           (rule "sequentialToParallel2" (formula "16"))
                           (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                           (rule "applyOnElementary" (formula "16") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                           (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
                           (rule "assignmentSubtractionInt" (formula "16") (term "1"))
                           (rule "translateJavaSubInt" (formula "16") (term "0,0,1"))
                           (rule "polySimp_elimSub" (formula "16") (term "0,0,1"))
                           (rule "sequentialToParallel2" (formula "16"))
                           (rule "simplifyUpdate2" (formula "16"))
                           (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                           (rule "applyOnElementary" (formula "16") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                           (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "16") (term "1,1,0,1,0"))
                           (rule "applyOnPV" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                           (rule "assignment_to_primitive_array_component" (formula "16"))
                           (branch "Normal Execution (x_arr_8 != null)"
                              (rule "sequentialToParallel2" (formula "16"))
                              (rule "simplifyUpdate2" (formula "16"))
                              (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                              (rule "applyOnElementary" (formula "16") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
                              (rule "simplifyUpdate1" (formula "16") (term "3,0,1,0"))
                              (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "16") (term "3,0,1,0"))
                              (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "16") (term "0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "16") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "16") (term "0,2,0,1,0"))
                              (rule "postincrement" (formula "16") (term "1"))
                              (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x_2"))
                              (rule "variableDeclarationAssign" (formula "16") (term "1"))
                              (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_11"))
                              (rule "remove_parentheses_right" (formula "16") (term "1"))
                              (rule "assignmentAdditionInt" (formula "16") (term "1"))
                              (rule "translateJavaAddInt" (formula "16") (term "0,0,1"))
                              (rule "sequentialToParallel2" (formula "16"))
                              (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                              (rule "applyOnElementary" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                              (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
                              (rule "widening_identity_cast_5" (formula "16") (term "1"))
                              (rule "assignment" (formula "16") (term "1"))
                              (rule "sequentialToParallel2" (formula "16"))
                              (rule "simplifyUpdate2" (formula "16"))
                              (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                              (rule "applyOnElementary" (formula "16") (term "1,0"))
                              (rule "applyOnPV" (formula "16") (term "0,1,0"))
                              (rule "assignment" (formula "16") (term "1"))
                              (rule "sequentialToParallel2" (formula "16"))
                              (rule "simplifyUpdate2" (formula "16"))
                              (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                              (rule "emptyIndexedLoopScope" (formula "16") (term "1"))
                              (rule "applyOnRigidFormula" (formula "16"))
                              (rule "simplifyUpdate2" (formula "16") (term "0"))
                              (rule "applyOnRigidFormula" (formula "16") (term "0"))
                              (rule "simplifyUpdate1" (formula "16") (term "1,0"))
                              (rule "applyOnPV" (formula "16") (term "0,0"))
                              (rule "boolean_not_equal_2" (formula "16") (term "0"))
                              (rule "ifthenelse_false_for" (formula "16"))
                              (rule "emptyModality" (formula "16") (term "1"))
                               (opengoal " ")
                           )
                           (branch "Null Reference (x_arr_8 = null)"
                               (opengoal " ")
                           )
                           (branch "Index Out of Bounds (x_arr_8 != null, but x_8 Out of Bounds!)"
                               (opengoal " ")
                           )
                        )
                        (branch "Null Reference (x_arr_9 = null)"
                            (opengoal " ")
                        )
                     )
                     (branch "Null Reference (x_arr_3 = null)"
                         (opengoal " ")
                     )
                     (branch "Index Out of Bounds (x_arr_3 != null, but x_4 Out of Bounds!)"
                         (opengoal " ")
                     )
                  )
                  (branch "Null Reference (x_arr_5 = null)"
                      (opengoal " ")
                  )
                  (branch "Index Out of Bounds (x_arr_5 != null, but x_5 Out of Bounds!)"
                      (opengoal " ")
                  )
               )
               (branch "Null Reference (x_arr_6 = null)"
                   (opengoal " ")
               )
            )
            (branch "Null Reference (x_arr_1 = null)"
                (opengoal " ")
            )
            (branch "Index Out of Bounds (x_arr_1 != null, but i Out of Bounds!)"
                (opengoal " ")
            )
         )
         (branch "if x_2 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "12"))
            (rule "simplifyUpdate1" (formula "12") (term "1"))
            (rule "applyOnPV" (formula "12") (term "0"))
            (rule "ifthenelse_concrete3" (formula "12"))
            (rule "boolean_not_equal_2" (formula "12") (term "1"))
            (rule "concrete_or_4" (formula "12"))
            (rule "emptyIndexedLoopScope" (formula "15") (term "1"))
            (rule "applyOnRigidFormula" (formula "15"))
            (rule "simplifyUpdate2" (formula "15") (term "0"))
            (rule "applyOnRigidFormula" (formula "15") (term "0"))
            (rule "applyOnPV" (formula "15") (term "0,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0"))
            (rule "boolean_equal" (formula "15") (term "0"))
            (rule "ifthenelse_true_for" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (rule "tryEmpty" (formula "15") (term "1"))
            (rule "emptyModality" (formula "15") (term "1"))
             (opengoal " ")
         )
      )
   )
   (branch "Case 2"
       (opengoal " ")
   )
)
(branch "Null Reference (x_arr = null)"
    (opengoal " ")
)
)
}
