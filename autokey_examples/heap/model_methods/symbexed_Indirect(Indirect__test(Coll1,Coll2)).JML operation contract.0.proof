\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 13:46:26 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , optimisedSelectRules-optimisedSelectRules\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 13:46:26 CET 2019
contract=Indirect[Indirect\\:\\:test(Coll1,Coll2)].JML operation contract.0
name=Indirect[Indirect\\:\\:test(Coll1,Coll2)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "88")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "c1,c2,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "Class_invariant_axiom_for_Coll2" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_Indirect" (formula "8") (ifseqformula "3"))
(rule "true_left" (formula "8"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_test,savedHeapBefore_test"))
 (builtin "One Step Simplification" (formula "11"))
 (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_callAdd,exc_0,heapAfter_callAdd,anon_heap_callAdd") (contract "Indirect[Indirect::callAdd(Coll,int)].JML operation contract.0"))
(branch "Post (callAdd)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "typeEqDerived" (formula "11") (term "0,1,1,1,1") (ifseqformula "10"))
   (rule "typeEqDerived" (formula "11") (term "0,0,1,1,1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
   (rule "Class_invariant_axiom_for_Indirect" (formula "11") (ifseqformula "3"))
   (rule "true_left" (formula "11"))
    (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_callAdd_0,exc_1,heapAfter_callAdd_0,anon_heap_callAdd_0") (contract "Indirect[Indirect::callAdd(Coll,int)].JML operation contract.0"))
   (branch "Post (callAdd)"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "typeEqDerived" (formula "14") (term "0,1,1,1,1") (ifseqformula "13"))
      (rule "typeEqDerived" (formula "14") (term "0,0,1,1,1") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
      (rule "Class_invariant_axiom_for_Indirect" (formula "14") (ifseqformula "3"))
      (rule "true_left" (formula "14"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "tryEmpty" (formula "17") (term "1"))
      (rule "emptyModality" (formula "17") (term "1"))
       (opengoal " ")
   )
   (branch "Exceptional Post (callAdd)"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "9"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "Class_invariant_axiom_for_Indirect" (formula "14") (ifseqformula "3"))
      (rule "true_left" (formula "14"))
      (rule "methodCallThrow" (formula "19") (term "1"))
      (rule "tryCatchThrow" (formula "19") (term "1"))
      (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
      (rule "equality_comparison_simple" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "ifElseSplit" (formula "19"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "19"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "e"))
            (rule "delete_unnecessary_cast" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "emptyModality" (formula "19") (term "1"))
             (opengoal " ")
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Pre (callAdd)"
       (opengoal " ")
   )
)
(branch "Exceptional Post (callAdd)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "13"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "Class_invariant_axiom_for_Indirect" (formula "11") (ifseqformula "3"))
   (rule "true_left" (formula "11"))
   (rule "methodCallThrow" (formula "16") (term "1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "tryCatchThrow" (formula "16") (term "1"))
   (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "16") (term "1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "ifElseSplit" (formula "16"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "16"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "e"))
         (rule "delete_unnecessary_cast" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "emptyModality" (formula "16") (term "1"))
          (opengoal " ")
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (callAdd)"
    (opengoal " ")
)
)
}
