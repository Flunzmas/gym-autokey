\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 15:28:01 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";


\programVariables {
  MyClient self;
  Heap heapAtPre;
  java.lang.Exception exc;
}



\rules {
  Class_invariant_axiom {  
  \schemaVar \term Heap h;  
  \find ( java.lang.Object::<inv>(h, self) )
  \replacewith (
      {heap:=h} (!self.(MyClient::mc) = null
                 & java.lang.Object::<inv>(heap, self.(MyClient::mc))
       		 & disjoint(allFields(self), self.(MyClient::mc).(MyClass::footprint))) 
  )
  \heuristics ( simplify )
  };
}


\problem {
   wellFormed(heap)
-> {heapAtPre:=heap}
     {exc:=null}
       \[{try {
             MyClient M = MyClient.<createObject>();
              M.<init>()@
             MyClient;
             self=M;
           }   catch (java.lang.Exception e) {
             exc=e;
           }
         }\] (  (   exc = null
                 -> java.lang.Object::<inv>(heap, self))
              & exc = null
              & \forall java.lang.Object o;
                  \forall Field f;
                    (  elementOf(o,
                                 f,
                                 freshLocs(heapAtPre))
                     |   any::select(heap, o, f)
                       = any::select(heapAtPre, o, f)))

}

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "259")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "eqSymm" (formula "2") (term "1,0,0,1,0,1"))
(rule "Class_invariant_axiom" (formula "2") (term "1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "2"))
(rule "disjointDefinition" (formula "2") (term "1,1,0,0,0,1"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "M"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=m"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "m"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "2"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=m_1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "m_1"))
(rule "allocateInstance" (formula "2"))
 (builtin "One Step Simplification" (formula "3"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "assignment_write_attribute_this" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallWithinClass" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment_write_attribute_this" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "assignment_write_attribute_this" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "5") (term "1"))
(rule "methodCallReturn" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "eval_order_access4" (formula "5") (term "1") (inst "#v1=m_1") (inst "#v0=m"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "m_2"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "m_3"))
 (builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_MyClass,self_0,exc_0,heapAfter_MyClass,anon_heap_MyClass") (contract "MyClass[MyClass::MyClass()].JML normal_behavior operation contract.0"))
(branch "Post (MyClass)"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0,1,0") (ifseqformula "4"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "dismissNonSelectedField" (formula "10") (term "0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0"))
   (rule "dismissNonSelectedField" (formula "10") (term "0"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "assignment_write_attribute" (formula "14"))
   (branch "Normal Execution (m_2 != null)"
       (builtin "One Step Simplification" (formula "14"))
      (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "simplifySelectOfCreate" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "10") (term "0"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "assignment" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "tryEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
       (opengoal "   wellFormed(heap) -> {heapAtPre:=heap}      {exc:=null}        \\[{try {              MyClient M = MyClient.<createObject>();               M.<init>()@              MyClient;              self=M;            }   catch (java.lang.Exception e) {              exc=e;            }          }\\] (  (   exc = null                  -> java.lang.Object::<inv>(heap, self))               & exc = null               & \\forall java.lang.Object o;                   \\forall Field f;                     (  elementOf(o,                                  f,                                  freshLocs(heapAtPre))                      |   any::select(heap, o, f)                        = any::select(heapAtPre, o, f))) ")
   )
   (branch "Null Reference (m_2 = null)"
       (opengoal "   wellFormed(heap) -> {heapAtPre:=heap}      {exc:=null}        \\[{try {              MyClient M = MyClient.<createObject>();               M.<init>()@              MyClient;              self=M;            }   catch (java.lang.Exception e) {              exc=e;            }          }\\] (  (   exc = null                  -> java.lang.Object::<inv>(heap, self))               & exc = null               & \\forall java.lang.Object o;                   \\forall Field f;                     (  elementOf(o,                                  f,                                  freshLocs(heapAtPre))                      |   any::select(heap, o, f)                        = any::select(heapAtPre, o, f))) ")
   )
)
(branch "Exceptional Post (MyClass)"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,0,0") (ifseqformula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0,1,0") (ifseqformula "4"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "5"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (MyClass)"
    (opengoal "   wellFormed(heap) -> {heapAtPre:=heap}      {exc:=null}        \\[{try {              MyClient M = MyClient.<createObject>();               M.<init>()@              MyClient;              self=M;            }   catch (java.lang.Exception e) {              exc=e;            }          }\\] (  (   exc = null                  -> java.lang.Object::<inv>(heap, self))               & exc = null               & \\forall java.lang.Object o;                   \\forall Field f;                     (  elementOf(o,                                  f,                                  freshLocs(heapAtPre))                      |   any::select(heap, o, f)                        = any::select(heapAtPre, o, f))) ")
)
)
}
