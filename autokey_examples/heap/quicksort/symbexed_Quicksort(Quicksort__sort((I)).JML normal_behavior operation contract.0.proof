\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Nov 12 17:44:24 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=100000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Tue Nov 12 17:44:24 CET 2019
contract=Quicksort[Quicksort\\:\\:sort([I)].JML normal_behavior operation contract.0
name=Quicksort[Quicksort\\:\\:sort([I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "140")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "array,self,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "array2seqDef" (formula "9") (term "0,0,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "9") (term "1,0,0,0,0,1") (inst "u=u"))
(rule "Class_invariant_axiom_for_Quicksort" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "6"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
   (rule "compound_greater_than_comparison_1" (formula "8") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "8"))
   (branch "Normal Execution (_array != null)"
       (builtin "One Step Simplification" (formula "8"))
      (rule "greater_than_comparison_simple" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "ifSplit" (formula "8"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "methodCallUnfoldArguments" (formula "9") (term "1"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "var"))
         (rule "assignment" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "var_1"))
         (rule "assignment" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "var_2"))
         (rule "compound_subtraction_1" (formula "9") (term "1") (inst "#v=x"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
         (rule "assignment_read_length" (formula "9"))
         (branch "Normal Execution (_array != null)"
             (builtin "One Step Simplification" (formula "9"))
            (rule "assignmentSubtractionInt" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaSubInt" (formula "9") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "9") (term "0,1,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
             (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_sort_0,exc_0,heapAfter_sort,anon_heap_sort") (contract "Quicksort[Quicksort::sort([I,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (sort)"
                (builtin "One Step Simplification" (formula "11"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "8") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,0,1,1,1,0,1,1"))
               (rule "greater_literals" (formula "8") (term "0,0,1,1,0,1,1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "12"))
               (rule "polySimp_elimSub" (formula "12") (term "1,0"))
               (rule "mul_literals" (formula "12") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,2,1,1,0,1"))
               (rule "add_literals" (formula "12") (term "0,0,2,1,1,0,1"))
               (rule "add_zero_left" (formula "12") (term "0,2,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "12") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
               (rule "array2seqDef" (formula "10") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "10") (term "2,1") (ifseqformula "2") (ifseqformula "15"))
               (rule "pullOutSelect" (formula "12") (term "1,1,0,1") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
               (rule "elementOfArrayRangeConcrete" (formula "12") (term "0,0"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "Class_invariant_axiom_for_Quicksort" (formula "14") (inst "sk=sk_1") (ifseqformula "4"))
               (branch "Use Axiom"
                  (rule "true_left" (formula "14"))
                  (rule "commute_and" (formula "11") (term "0,0"))
                  (rule "methodCallEmpty" (formula "16") (term "1"))
                  (rule "tryEmpty" (formula "16") (term "1"))
                  (rule "emptyModality" (formula "16") (term "1"))
                   (opengoal " ")
               )
               (branch "Show Axiom Satisfiability"
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
            )
            (branch "Exceptional Post (sort)"
                (builtin "One Step Simplification" (formula "11"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "8") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,0,1,1,1,0,1,1"))
               (rule "greater_literals" (formula "8") (term "0,0,1,1,0,1,1"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "9"))
               (rule "close" (formula "13") (ifseqformula "12"))
            )
            (branch "Pre (sort)"
                (opengoal " ")
            )
         )
         (branch "Null Reference (_array = null)"
             (opengoal " ")
         )
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "methodCallEmpty" (formula "9") (term "1"))
         (rule "tryEmpty" (formula "9") (term "1"))
         (rule "emptyModality" (formula "9") (term "1"))
          (opengoal " ")
      )
   )
   (branch "Null Reference (_array = null)"
       (opengoal " ")
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)
}
