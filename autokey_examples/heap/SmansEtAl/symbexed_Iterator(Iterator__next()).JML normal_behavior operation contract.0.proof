\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 08 15:04:27 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=100000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 08 15:04:27 CET 2019
contract=Iterator[Iterator\\:\\:next()].JML normal_behavior operation contract.0
name=Iterator[Iterator\\:\\:next()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "162")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Query_axiom_for_hasNext__in_Iterator" (formula "5") (term "0") (inst "hasNext_sk=hasNext_sk_0") (inst "#self=i") (inst "#res=x") (ifseqformula "3"))
(rule "eqSymm" (formula "5") (term "0,1"))
(rule "applyEqRigid" (formula "5") (term "1,0,1") (ifseqformula "6"))
(rule "boxToDiamond" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "Class_invariant_axiom_for_Iterator" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "disjointDefinition" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_next,savedHeapBefore_next"))
 (builtin "One Step Simplification" (formula "13"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_hasNext,savedHeapBefore_hasNext"))
 (builtin "One Step Simplification" (formula "11"))
(rule "returnUnfold" (formula "13") (term "1") (inst "#v0=o"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "o"))
(rule "returnUnfold" (formula "11") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
(rule "compound_less_than_comparison_2" (formula "11") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
(rule "assignment_read_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "13") (term "1") (inst "#v0=a"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "a"))
(rule "assignment_read_attribute_this" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "11") (term "1") (inst "#v0=a"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "a_1"))
(rule "assignment_read_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
 (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_size,result_0,exc_0,heapAfter_size,anon_heap_size") (contract "ArrayList[ArrayList::size()].JML normal_behavior operation contract.0"))
(branch "Post (size)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "eqSymm" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "less_than_comparison_simple" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "methodCallReturn" (formula "17") (term "1"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "methodCallEmpty" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "emptyModality" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "notRight" (formula "17"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "var"))
   (rule "assignment" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_1"))
   (rule "postincrement_assignment_attribute" (formula "19") (term "1") (inst "#v1=x") (inst "#v=i"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "i"))
   (rule "assignment" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
   (rule "assignment_read_attribute" (formula "19"))
   (branch "Normal Execution (i != null)"
       (builtin "One Step Simplification" (formula "19"))
      (rule "eval_order_access4" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=i_1"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "i_1"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_4"))
      (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_5"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_5"))
      (rule "remove_parentheses_right" (formula "19") (term "1"))
      (rule "compound_addition_1" (formula "19") (term "1") (inst "#v=x_6"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_6"))
      (rule "assignment_read_attribute" (formula "19"))
      (branch "Normal Execution (i != null)"
          (builtin "One Step Simplification" (formula "19"))
         (rule "assignmentAdditionInt" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "19") (term "1"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "assignment_write_attribute" (formula "19"))
         (branch "Normal Execution (i_1 != null)"
             (builtin "One Step Simplification" (formula "19"))
            (rule "assignment" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
             (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_get,result_1,exc_1,heapAfter_get,anon_heap_get") (contract "ArrayList[ArrayList::get(int)].JML normal_behavior operation contract.0"))
            (branch "Post (get)"
                (builtin "One Step Simplification" (formula "21"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1,0") (ifseqformula "18"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "eqSymm" (formula "21"))
               (rule "dismissNonSelectedField" (formula "20") (term "0,0,1"))
               (rule "assignment" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "blockEmpty" (formula "25") (term "1"))
               (rule "shift_paren_or" (formula "20"))
               (rule "methodCallReturn" (formula "25") (term "1"))
               (rule "assignment" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (rule "tryEmpty" (formula "25") (term "1"))
               (rule "emptyModality" (formula "25") (term "1"))
                (opengoal " ")
            )
            (branch "Exceptional Post (get)"
                (builtin "One Step Simplification" (formula "18"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "andLeft" (formula "18"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "21"))
               (rule "notLeft" (formula "19"))
               (rule "close" (formula "23") (ifseqformula "22"))
            )
            (branch "Pre (get)"
                (opengoal " ")
            )
            (branch "Null reference (var = null)"
                (opengoal " ")
            )
         )
         (branch "Null Reference (i_1 = null)"
             (opengoal " ")
         )
      )
      (branch "Null Reference (i = null)"
          (opengoal " ")
      )
   )
   (branch "Null Reference (i = null)"
       (opengoal " ")
   )
)
(branch "Exceptional Post (size)"
    (builtin "One Step Simplification" (formula "13"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (size)"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "11"))
)
(branch "Null reference (a_1 = null)"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
   (rule "closeTrue" (formula "11"))
)
)
}
