\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 13:43:50 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , optimisedSelectRules-optimisedSelectRules\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 13:43:50 CET 2019
contract=CellTest[CellTest\\:\\:test(Recell)].JML operation contract.0
name=CellTest[CellTest\\:\\:test(Recell)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "264")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "r,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Class_invariant_axiom_for_Recell" (formula "6"))
(rule "true_left" (formula "6"))
(rule "Class_invariant_axiom_for_CellTest" (formula "6") (ifseqformula "3"))
(rule "true_left" (formula "6"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_test,savedHeapBefore_test"))
 (builtin "One Step Simplification" (formula "8"))
 (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_set,exc_0,heapAfter_set,anon_heap_set") (contract "Recell[Cell::set(int)].JML operation contract.0"))
(branch "Post (set)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "typeEqDerived" (formula "9") (term "0,1,1,1,1") (ifseqformula "8"))
   (rule "typeEqDerived" (formula "9") (term "0,0,1,1,1") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
   (rule "andLeft" (formula "9"))
   (rule "Definition_axiom_for_footprint_in_Recell" (formula "7") (term "1,0"))
   (rule "Contract_axiom_for_post_set_in_Cell" (formula "9") (term "0"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,1,0,0") (ifseqformula "7"))
   (rule "wellFormedAnonEQ" (formula "9") (term "0,1,0,0,0") (ifseqformula "7"))
   (rule "replace_known_left" (formula "9") (term "0,0,1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")) (ifInst ""  (formula "4")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")))
   (rule "Contract_axiom_for_post_set_in_Recell" (formula "10") (term "0"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,0,0") (ifseqformula "7"))
   (rule "wellFormedAnonEQ" (formula "10") (term "0,1,0,0,0") (ifseqformula "7"))
   (rule "replace_known_left" (formula "10") (term "1,1,0,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")))
   (rule "true_left" (formula "10"))
   (rule "Definition_axiom_for_post_set_in_Recell" (formula "10") (term "0"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
   (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=Recell_oval_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")) (ifInst ""  (formula "4")))
   (rule "eqSymm" (formula "11"))
   (rule "hideAuxiliaryEq" (formula "11"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "10") (term "1"))
   (rule "elementOfUnion" (formula "10") (term "0,0"))
   (rule "elementOfSingleton" (formula "10") (term "1,0,0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "Class_invariant_axiom_for_Recell" (formula "11"))
   (rule "true_left" (formula "11"))
    (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_callSet,exc_1,heapAfter_callSet,anon_heap_callSet") (contract "CellTest[CellTest::callSet(Cell,int)].JML operation contract.0"))
   (branch "Post (callSet)"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "typeEqDerived" (formula "14") (term "0,1,1,1,1") (ifseqformula "13"))
      (rule "typeEqDerived" (formula "14") (term "0,0,1,1,1") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "Contract_axiom_for_post_set_in_Cell" (formula "14") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0,0") (ifseqformula "7"))
      (rule "wellFormedAnonEQ" (formula "14") (term "1,1,0,0,0") (ifseqformula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,1,0,0") (ifseqformula "7"))
      (rule "wellFormedAnonEQ" (formula "14") (term "0,1,0,0,0") (ifseqformula "12"))
      (rule "wellFormedAnonEQ" (formula "14") (term "0,0,1,0,0,0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "14") (term "0,1,0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "4")) (ifInst ""  (formula "4")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
      (rule "Class_invariant_axiom_for_Recell" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "Contract_axiom_for_post_set_in_Recell" (formula "15") (term "0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,1,0,0") (ifseqformula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0,0") (ifseqformula "12"))
      (rule "wellFormedAnonEQ" (formula "15") (term "1,1,0,0,0") (ifseqformula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,0") (ifseqformula "7"))
      (rule "wellFormedAnonEQ" (formula "15") (term "0,1,0,0,0") (ifseqformula "12"))
      (rule "wellFormedAnonEQ" (formula "15") (term "0,0,1,0,0,0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "15") (term "0,1,0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "4")) (ifInst ""  (formula "4")))
      (rule "true_left" (formula "15"))
      (rule "Definition_axiom_for_post_set_in_Recell" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
      (rule "eqSymm" (formula "15"))
      (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=Recell_oval_1"))
      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "15") (term "1"))
      (rule "eqSymm" (formula "15"))
      (rule "Class_invariant_axiom_for_CellTest" (formula "16") (ifseqformula "3"))
      (rule "true_left" (formula "16"))
       (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_undo,exc_2,heapAfter_undo,anon_heap_undo") (contract "Recell[Recell::undo()].JML operation contract.0"))
      (branch "Post (undo)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replaceKnownSelect_taclet00_2" (formula "17") (term "1,0,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "17") (term "1,0,1,0,1,1"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "typeEqDerived" (formula "19") (term "0,1,1,1,1") (ifseqformula "18"))
         (rule "typeEqDerived" (formula "19") (term "0,0,1,1,1") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
         (rule "andLeft" (formula "19"))
         (rule "Contract_axiom_for_footprint_in_Cell" (formula "17") (term "1,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "17") (term "1,0,0,0") (ifseqformula "12"))
         (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "17") (term "0,0,1,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
         (rule "subsetSingletonLeft" (formula "17") (term "0,1,1"))
         (rule "Definition_axiom_for_footprint_in_Recell" (formula "18") (term "1,0"))
         (rule "Class_invariant_axiom_for_Recell" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "Contract_axiom_for_footprint_in_Recell" (formula "17") (term "0,0,1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "17") (term "1,0,0,0") (ifseqformula "12"))
         (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "17") (term "1,1,0,0,0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "4")) (ifInst ""  (formula "23")))
         (rule "true_left" (formula "17"))
         (rule "Contract_axiom_for_footprint_in_Cell" (formula "17") (term "0,0,1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "17") (term "1,0,0,0") (ifseqformula "12"))
         (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "17") (term "0,0,1,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "11")) (ifInst ""  (formula "23")))
         (rule "subsetSingletonLeft" (formula "17") (term "0,1,1"))
         (rule "Class_invariant_axiom_for_Recell" (formula "17") (term "1,1,1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "Contract_axiom_for_footprint_in_Recell" (formula "17") (term "0,0,1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "17") (term "1,0,0,0") (ifseqformula "12"))
         (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "17") (term "0,1,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "11")) (ifInst ""  (formula "4")))
         (rule "true_left" (formula "17"))
         (rule "Definition_axiom_for_footprint_in_Recell" (formula "17") (term "2,1,1"))
         (rule "elementOfUnion" (formula "17") (term "1,1"))
         (rule "elementOfSingleton" (formula "17") (term "1,1,1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "elementOfSingleton" (formula "17") (term "1,1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "Contract_axiom_for_footprint_in_Recell" (formula "17") (term "0,1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "17") (term "1,0,0,0") (ifseqformula "12"))
         (rule "wellFormedAnonEQ" (formula "17") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "11")) (ifInst ""  (formula "4")) (ifInst ""  (formula "23")))
         (rule "true_left" (formula "17"))
         (rule "Definition_axiom_for_footprint_in_Recell" (formula "17") (term "0,1"))
         (rule "subsetUnionLeft" (formula "17") (term "1"))
         (rule "subsetSingletonLeft" (formula "17") (term "1,1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "subsetSingletonLeft" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "methodCallEmpty" (formula "22") (term "1"))
         (rule "tryEmpty" (formula "22") (term "1"))
         (rule "emptyModality" (formula "22") (term "1"))
          (opengoal " ")
      )
      (branch "Exceptional Post (undo)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replaceKnownSelect_taclet00_2" (formula "17") (term "1,0,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "17") (term "1,0,1,0,1,1"))
         (rule "andLeft" (formula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,0") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,0,1,0") (ifseqformula "7"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "18"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "Definition_axiom_for_footprint_in_Recell" (formula "17") (term "1,0"))
         (rule "Class_invariant_axiom_for_Recell" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "methodCallThrow" (formula "23") (term "1"))
         (rule "tryCatchThrow" (formula "23") (term "1"))
         (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
         (rule "equality_comparison_simple" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "ifElseSplit" (formula "23"))
         (branch "if x true"
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x false"
             (builtin "One Step Simplification" (formula "24"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "23"))
            (branch "if exc_2 instanceof java.lang.Throwable true"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "e"))
               (rule "delete_unnecessary_cast" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "emptyModality" (formula "23") (term "1"))
                (opengoal " ")
            )
            (branch "if exc_2 instanceof java.lang.Throwable false"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (undo)"
          (opengoal " ")
      )
      (branch "Null reference (_r = null)"
          (opengoal " ")
      )
   )
   (branch "Exceptional Post (callSet)"
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "commute_or_2" (formula "13"))
      (rule "Class_invariant_axiom_for_CellTest" (formula "14") (ifseqformula "3"))
      (rule "true_left" (formula "14"))
      (rule "methodCallThrow" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "tryCatchThrow" (formula "18") (term "1"))
      (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x"))
      (rule "equality_comparison_simple" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "ifElseSplit" (formula "18"))
      (branch "if x true"
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "18"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "e"))
            (rule "delete_unnecessary_cast" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "emptyModality" (formula "18") (term "1"))
             (opengoal " ")
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Pre (callSet)"
       (opengoal " ")
   )
)
(branch "Exceptional Post (set)"
    (builtin "One Step Simplification" (formula "10"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "Contract_axiom_for_footprint_in_Cell" (formula "7") (term "1,0"))
   (rule "replace_known_right" (formula "7") (term "0,1,0") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
   (rule "subsetSingletonLeft" (formula "7") (term "0,1,1"))
   (rule "Definition_axiom_for_footprint_in_Recell" (formula "8") (term "1,0"))
   (rule "Class_invariant_axiom_for_Recell" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "Definition_axiom_for_footprint_in_Recell" (formula "7") (term "0,0,1"))
   (rule "subsetUnionLeft" (formula "7") (term "0,1"))
   (rule "subsetSingletonLeft" (formula "7") (term "1,0,1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "subsetSingletonLeft" (formula "7") (term "0,1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "Contract_axiom_for_footprint_in_Recell" (formula "7") (term "2,0,1"))
   (rule "replace_known_left" (formula "7") (term "1,0,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")) (ifInst ""  (formula "14")))
   (rule "true_left" (formula "7"))
   (rule "Class_invariant_axiom_for_Recell" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "Definition_axiom_for_footprint_in_Recell" (formula "7") (term "2"))
   (rule "elementOfUnion" (formula "7"))
   (rule "elementOfSingleton" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "Class_invariant_axiom_for_Recell" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "methodCallThrow" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "tryCatchThrow" (formula "13") (term "1"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_right" (formula "13") (term "0,0,1,0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "ifElseSplit" (formula "13"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "14"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "13"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "e"))
         (rule "delete_unnecessary_cast" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "1"))
         (rule "assignment" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "emptyModality" (formula "13") (term "1"))
          (opengoal " ")
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (set)"
    (opengoal " ")
)
(branch "Null reference (_r = null)"
    (opengoal " ")
)
)
}
