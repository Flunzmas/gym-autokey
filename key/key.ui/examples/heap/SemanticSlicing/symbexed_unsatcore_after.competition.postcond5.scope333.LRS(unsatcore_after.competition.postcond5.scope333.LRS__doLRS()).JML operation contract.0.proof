\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 08 11:56:10 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , optimisedSelectRules-optimisedSelectRules\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Fri Nov 08 11:56:10 CET 2019
contract=unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS\\:\\:doLRS()].JML operation contract.0
name=unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS\\:\\:doLRS()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "458")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,0,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,0,0,1,0,0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "6") (term "0,2,0,0,1,0"))
(rule "mul_literals" (formula "6") (term "1,0,2,0,0,1,0"))
(rule "polySimp_addComm0" (formula "6") (term "0,2,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "8") (ifseqformula "3"))
(rule "true_left" (formula "8"))
(rule "commute_and" (formula "5") (term "0,0"))
(rule "commute_and" (formula "5") (term "1,0"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_doLRS,savedHeapBefore_doLRS"))
 (builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "s"))
 (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_s_0_helper,result,exc_0") (contract "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::s_0_helper()].JML normal_behavior operation contract.0"))
(branch "Post (s_0_helper)"
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "assignment" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "t"))
   (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "9") (ifseqformula "3"))
   (rule "true_left" (formula "9"))
    (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_t_0_helper,result_0,exc_1") (contract "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::t_0_helper()].JML normal_behavior operation contract.0"))
   (branch "Post (t_0_helper)"
       (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "l"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "10") (ifseqformula "3"))
      (rule "true_left" (formula "10"))
      (rule "for_to_while" (formula "11") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "arrayLengthIsAShort" (formula "6") (term "1,1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,1,0,1,0") (ifseqformula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,1,0,0,1,0") (ifseqformula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1,1,0,0") (ifseqformula "1"))
       (opengoal " ")
   )
   (branch "Exceptional Post (t_0_helper)"
       (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "12") (ifseqformula "11"))
   )
   (branch "Pre (t_0_helper)"
       (opengoal " ")
   )
)
(branch "Exceptional Post (s_0_helper)"
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (s_0_helper)"
    (opengoal " ")
)
)
}
