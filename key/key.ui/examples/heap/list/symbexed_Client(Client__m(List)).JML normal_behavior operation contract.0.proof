\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 12:41:58 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 12:41:58 CET 2019
contract=Client[Client\\:\\:m(List)].JML normal_behavior operation contract.0
name=Client[Client\\:\\:m(List)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "124")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "list,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "4"))
(rule "disjointDefinition" (formula "7"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "commuteIntersection" (formula "7") (term "0"))
(rule "Class_invariant_axiom_for_Client" (formula "9") (ifseqformula "3"))
(rule "true_left" (formula "9"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_m,savedHeapBefore_m"))
 (builtin "One Step Simplification" (formula "11"))
(rule "postincrement_attribute" (formula "11") (term "1") (inst "#v=c"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "c"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "eval_order_access4" (formula "11") (term "1") (inst "#v1=x") (inst "#v0=c_1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "c_1"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
(rule "compound_int_cast_expression" (formula "11") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "11") (term "1"))
(rule "compound_addition_1" (formula "11") (term "1") (inst "#v=x_2"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
(rule "assignment_read_attribute" (formula "11"))
(branch "Normal Execution (c != null)"
    (builtin "One Step Simplification" (formula "11"))
   (rule "assignmentAdditionInt" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
   (rule "widening_identity_cast_5" (formula "11") (term "1"))
   (rule "assignment" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "assignment_write_attribute" (formula "11"))
   (branch "Normal Execution (c_1 != null)"
       (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "o"))
       (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_get,result,exc_0,heapAfter_get,anon_heap_get") (contract "List[List::get(int)].JML exceptional_behavior operation contract.0#List[List::get(int)].JML normal_behavior operation contract.0"))
      (branch "Post (get)"
          (builtin "One Step Simplification" (formula "13"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "leq_literals" (formula "10") (term "0,0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "less_literals" (formula "10") (term "0,0,0,0,1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "typeEqDerived" (formula "13") (term "0,1,1,1") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
         (rule "notLeft" (formula "13"))
         (rule "eqSymm" (formula "13") (term "0,0,1"))
         (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "shift_paren_or" (formula "12"))
         (rule "commute_and" (formula "14"))
         (rule "commute_and" (formula "13") (term "0"))
         (rule "commute_and" (formula "13") (term "1,1"))
         (rule "shift_paren_and" (formula "13") (term "1"))
         (rule "commute_and" (formula "13") (term "0,1"))
         (rule "methodCallEmpty" (formula "17") (term "1"))
         (rule "tryEmpty" (formula "17") (term "1"))
         (rule "emptyModality" (formula "17") (term "1"))
          (opengoal " ")
      )
      (branch "Exceptional Post (get)"
          (builtin "One Step Simplification" (formula "10"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "leq_literals" (formula "10") (term "0,0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "less_literals" (formula "10") (term "0,0,0,0,1,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "11"))
         (rule "eqSymm" (formula "13") (term "0,0,1"))
         (rule "replace_known_right" (formula "13") (term "1,1") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "replace_known_right" (formula "12") (term "0,0,1") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,0"))
         (rule "commute_and" (formula "13"))
         (rule "commute_and" (formula "12") (term "1"))
         (rule "commute_and" (formula "12") (term "0"))
         (rule "methodCallThrow" (formula "17") (term "1"))
         (rule "tryCatchThrow" (formula "17") (term "1"))
         (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
         (rule "equality_comparison_simple" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "ifElseSplit" (formula "17"))
         (branch "if x_3 true"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_3 false"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "17"))
            (branch "if exc_0 instanceof java.lang.Throwable true"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
               (rule "delete_unnecessary_cast" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "18"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "17") (term "1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "emptyModality" (formula "17") (term "1"))
                (opengoal " ")
            )
            (branch "if exc_0 instanceof java.lang.Throwable false"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (get)"
          (opengoal " ")
      )
      (branch "Null reference (_list = null)"
          (opengoal " ")
      )
   )
   (branch "Null Reference (c_1 = null)"
       (opengoal " ")
   )
)
(branch "Null Reference (c = null)"
    (opengoal " ")
)
)
}
