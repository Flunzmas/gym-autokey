\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 04 12:01:08 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Apr 04 12:01:08 CEST 2016
name=ThreeWayQs[ThreeWayQs\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
contract=ThreeWayQs[ThreeWayQs\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "jonas" ) (keyVersion "e3de904a5091ee1e0baf25ff72a4c4aa88f4acbc"))

(autoModeTime "18868")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,left,right,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "3") (term "0,0"))
(rule "polySimp_addComm0" (formula "3") (term "0,0"))
(rule "polySimp_addComm1" (formula "3") (term "0"))
(rule "polySimp_addComm0" (formula "3") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "inEqSimp_sepNegMonomial0" (formula "5"))
(rule "polySimp_mulLiterals" (formula "5") (term "0"))
(rule "polySimp_elimOne" (formula "5") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "9") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "6") (term "0,1,0"))
(rule "nnf_imp2or" (formula "7") (term "0,1,0"))
(rule "nnf_imp2or" (formula "9") (term "0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1,0"))
(rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,1,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,1,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,1,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,0,1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,1,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "all_pull_out3" (formula "6") (term "0"))
(rule "shift_paren_or" (formula "6") (term "0,0"))
(rule "shift_paren_or" (formula "6") (term "0,0,0"))
(rule "arrayLengthNotNegative" (formula "5") (term "0"))
(rule "arrayLengthIsAShort" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "all_pull_out3" (formula "8") (term "0"))
(rule "shift_paren_or" (formula "8") (term "0,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,0"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0"))
(rule "ifSplit" (formula "10"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "11"))
   (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_split,exc_0,heapAfter_split,anon_heap_split") (contract "ThreeWayQs[ThreeWayQs::split([I,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (split)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "lless"))
      (rule "activeUseStaticFieldReadAccess" (formula "24") (term "1"))
      (rule "assignment_read_static_attribute" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=ThreeWayQs_less_0"))
      (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_commuteLeq" (formula "23"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "inEqSimp_commuteGeq" (formula "21"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "lgreat"))
      (rule "activeUseStaticFieldReadAccess" (formula "25") (term "1"))
      (rule "assignment_read_static_attribute" (formula "25") (term "1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=ThreeWayQs_great_0"))
      (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_commuteGeq" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "23"))
      (rule "inEqSimp_commuteGeq" (formula "24"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "lpivot"))
      (rule "activeUseStaticFieldReadAccess" (formula "26") (term "1"))
      (rule "assignment_read_static_attribute" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "pullOutSelect" (formula "16") (term "1,1,0") (inst "selectSK=ThreeWayQs_pivot_0"))
      (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "16"))
      (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "16"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfArrayRange" (formula "2") (term "1,0,0") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "16") (term "0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfArrayRange" (formula "16") (term "1,0,0") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfSingleton" (formula "2") (term "0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "15") (term "1,1,1,0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "17") (term "1,0,0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "27") (term "0,1,0,0") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "inEqSimp_commuteLeq" (formula "22"))
      (rule "inEqSimp_commuteGeq" (formula "21"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "17") (term "1,1,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "16") (term "1,1,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "inEqSimp_commuteGeq" (formula "22"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "elementOfUnion" (formula "14") (term "0,0"))
      (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "applyEqReverse" (formula "13") (term "1,1,1,0") (ifseqformula "14"))
      (rule "applyEqReverse" (formula "16") (term "1,1,1,0") (ifseqformula "14"))
      (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
      (rule "hideAuxiliaryEq" (formula "14"))
      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
      (rule "polySimp_elimOne" (formula "20") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0"))
      (rule "qeq_literals" (formula "20") (term "0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "21"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1"))
      (rule "polySimp_elimOne" (formula "18") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
      (rule "add_literals" (formula "18") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0"))
      (rule "qeq_literals" (formula "18") (term "0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
      (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
      (rule "polySimp_elimOne" (formula "20") (term "1"))
      (rule "commuteUnion" (formula "11") (term "0,0,1,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
      (rule "commute_or" (formula "14") (term "0,0"))
      (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_2"))
      (rule "assignment" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_3"))
      (rule "compound_subtraction_1" (formula "24") (term "1") (inst "#v=x_4"))
      (rule "variableDeclarationAssign" (formula "24") (term "1"))
      (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_4"))
      (rule "activeUseStaticFieldReadAccess" (formula "24") (term "1"))
      (rule "assignment_read_static_attribute" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "replaceKnownSelect_taclet00_0" (formula "24") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "24") (term "0,1,0"))
      (rule "assignmentSubtractionInt" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "translateJavaSubInt" (formula "24") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "24") (term "0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
      (rule "less_than_comparison_simple" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
      (rule "all_pull_out3" (formula "16") (term "0"))
      (rule "shift_paren_or" (formula "16") (term "0,0"))
      (rule "shift_paren_or" (formula "16") (term "0,0,0"))
      (rule "all_pull_out3" (formula "17") (term "0"))
      (rule "shift_paren_or" (formula "17") (term "0,0"))
      (rule "shift_paren_or" (formula "17") (term "0,0,0"))
      (rule "ifSplit" (formula "24"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0"))
         (rule "qeq_literals" (formula "21") (term "0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
         (rule "add_literals" (formula "3") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0"))
         (rule "qeq_literals" (formula "20") (term "0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "methodCallUnfoldArguments" (formula "24") (term "1"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "var_5"))
         (rule "assignmentSubtractionInt" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "translateJavaSubInt" (formula "24") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "24") (term "0,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
         (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_sort_1,exc_2,heapAfter_sort_0,anon_heap_sort_0") (contract "ThreeWayQs[ThreeWayQs::sort([I,int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (sort)"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "27"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
            (rule "blockEmpty" (formula "30") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "commuteUnion" (formula "24") (term "0,0,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,1,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "shift_paren_or" (formula "26") (term "0,1,0"))
            (rule "commute_or" (formula "28") (term "0,0,1,0"))
            (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_7"))
            (rule "compound_less_than_comparison_1" (formula "30") (term "1") (inst "#v0=x_8"))
            (rule "variableDeclarationAssign" (formula "30") (term "1"))
            (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_8"))
            (rule "assignmentAdditionInt" (formula "30") (term "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "translateJavaAddInt" (formula "30") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "30") (term "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
            (rule "all_pull_out3" (formula "27") (term "0"))
            (rule "shift_paren_or" (formula "27") (term "0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0,0"))
            (rule "all_pull_out3" (formula "26") (term "0"))
            (rule "shift_paren_or" (formula "26") (term "0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
            (rule "all_pull_out3" (formula "28") (term "0"))
            (rule "shift_paren_or" (formula "28") (term "0,0"))
            (rule "shift_paren_or" (formula "28") (term "0,0,0"))
            (rule "ifSplit" (formula "30"))
            (branch "if x_7 true"
               (builtin "One Step Simplification" (formula "31"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0"))
               (rule "qeq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "methodCallUnfoldArguments" (formula "30") (term "1"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_6"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_7"))
               (rule "assignmentAdditionInt" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "translateJavaAddInt" (formula "30") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_8"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_sort_2,exc_3,heapAfter_sort_1,anon_heap_sort_1") (contract "ThreeWayQs[ThreeWayQs::sort([I,int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (sort)"
                  (builtin "One Step Simplification" (formula "32"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                  (rule "commuteUnion" (formula "30") (term "0,0,1,0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "nnf_imp2or" (formula "34") (term "0"))
                  (rule "nnf_imp2or" (formula "33") (term "0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "33") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "32") (term "1,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                  (rule "commute_or" (formula "32") (term "0,0"))
                  (rule "methodCallEmpty" (formula "36") (term "1"))
                  (rule "shift_paren_or" (formula "32") (term "0,1,0"))
                  (rule "commute_or" (formula "33") (term "0,0,1,0"))
                  (rule "commute_or" (formula "32") (term "0,0,0,1,0"))
                  (rule "tryEmpty" (formula "36") (term "1"))
                  (rule "emptyModality" (formula "36") (term "1"))
                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                  (rule "eqSymm" (formula "36") (term "1,0,0,1"))
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                        (rule "allRight" (formula "36") (inst "sk=i_20"))
                        (rule "orRight" (formula "36"))
                        (rule "orRight" (formula "36"))
                        (rule "allRight" (formula "38") (inst "sk=j_20"))
                        (rule "orRight" (formula "38"))
                        (rule "orRight" (formula "38"))
                        (rule "orRight" (formula "40"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "37"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "41"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "41"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0"))
                        (rule "add_zero_left" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_46"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,1,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "elementOfUnion" (formula "2") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "2") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "2") (term "1,1,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_47"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "24"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_48"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "25"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfUnion" (formula "2") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                        (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_49"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "10")))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_50"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                        (rule "elementOfUnion" (formula "2") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "8")))
                        (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_51"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "11")))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "all_pull_out3" (formula "46") (term "0"))
                        (rule "all_pull_out3" (formula "45") (term "0"))
                        (rule "all_pull_out3" (formula "44") (term "0"))
                        (rule "shift_paren_or" (formula "46") (term "0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0"))
                        (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_20 TRUE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_20 TRUE"
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "allLeft" (formula "28") (inst "t=j_20"))
                              (rule "replaceKnownSelect_taclet00000000_10" (formula "28") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "28") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "allLeft" (formula "39") (inst "t=i_20"))
                              (rule "replaceKnownSelect_taclet00000000_9" (formula "39") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000000_16" (formula "39") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "commute_or_2" (formula "39") (term "0,0"))
                              (rule "commute_or" (formula "39") (term "0,0,0"))
                              (rule "allLeft" (formula "29") (inst "t=i_20"))
                              (rule "replaceKnownSelect_taclet00000000_12" (formula "29") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "29") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "allLeft" (formula "40") (inst "t=j_20"))
                              (rule "replaceKnownSelect_taclet00000000_8" (formula "40") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_14" (formula "40") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "40"))
                              (rule "andLeft" (formula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0"))
                              (rule "add_zero_right" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_20 FALSE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_geqRight" (formula "46"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_20 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_geqRight" (formula "46"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                           (rule "times_zero_1" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_20 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_20 TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "allLeft" (formula "30") (inst "t=j_20"))
                                 (rule "replaceKnownSelect_taclet00000000_10" (formula "30") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "30") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "allLeft" (formula "28") (inst "t=i_20"))
                                 (rule "replaceKnownSelect_taclet00000000_12" (formula "28") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "42") (inst "t=i_20"))
                                 (rule "replaceKnownSelect_taclet00000000_9" (formula "42") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100000000_15" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "42") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "allLeft" (formula "48") (inst "t=i_20"))
                                 (rule "replaceKnownSelect_taclet00000000_7" (formula "48") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100000000_16" (formula "48") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "48") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "48") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "allLeft" (formula "42") (inst "t=j_20"))
                                 (rule "replaceKnownSelect_taclet00000000_8" (formula "42") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet100000000_14" (formula "42") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "cut_direct" (formula "42") (term "0"))
                                 (branch "CUT: a.length ≤ j_20 TRUE"
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "42"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "42"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "8"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0"))
                                    (rule "leq_literals" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                                 (branch "CUT: a.length ≤ j_20 FALSE"
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "50") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_6" (formula "50") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00100000000_17" (formula "50") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "50") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "50") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq0" (formula "50") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "50") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                    (rule "leq_literals" (formula "50") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "1"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "inEqSimp_homoInEq1" (formula "50"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0"))
                                    (rule "leq_literals" (formula "50"))
                                    (rule "closeFalse" (formula "50"))
                                 )
                              )
                              (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_20 FALSE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_leqRight" (formula "46"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "allLeft" (formula "29") (inst "t=j_20"))
                                 (rule "replaceKnownSelect_taclet00000000_10" (formula "29") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "29") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "29"))
                                 (rule "allLeft" (formula "28") (inst "t=i_20"))
                                 (rule "replaceKnownSelect_taclet00000000_12" (formula "28") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "28") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "28") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "42") (inst "t=i_20"))
                                 (rule "replaceKnownSelect_taclet00000000_9" (formula "42") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100000000_15" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "42") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "allLeft" (formula "42") (inst "t=j_20"))
                                 (rule "replaceKnownSelect_taclet00000000_8" (formula "42") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet100000000_14" (formula "42") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                 (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "30"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "42") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "42"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "42"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_20 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_geqRight" (formula "46"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                              (rule "times_zero_1" (formula "20") (term "0,0"))
                              (rule "add_zero_left" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "mul_literals" (formula "20") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_20 TRUE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0"))
                                 (rule "qeq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "11"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_20 TRUE"
                                    (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "5"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
                                    (rule "times_zero_1" (formula "20") (term "0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "30") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_10" (formula "30") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "30") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "30") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "31") (inst "t=i_20"))
                                    (rule "replaceKnownSelect_taclet00000000_12" (formula "31") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "31") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "46") (inst "t=i_20"))
                                    (rule "replaceKnownSelect_taclet00000000_7" (formula "46") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001100000000_17" (formula "46") (term "1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0,0,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq0" (formula "46") (term "0,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "commute_or_2" (formula "46") (term "0,0"))
                                    (rule "commute_or" (formula "46") (term "0,0,0"))
                                    (rule "allLeft" (formula "46") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_6" (formula "46") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01100000000_16" (formula "46") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                    (rule "leq_literals" (formula "46") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                    (rule "leq_literals" (formula "46") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "6"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "inEqSimp_homoInEq1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0"))
                                    (rule "add_zero_right" (formula "46") (term "0"))
                                    (rule "leq_literals" (formula "46"))
                                    (rule "closeFalse" (formula "46"))
                                 )
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_20 FALSE"
                                    (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_leqRight" (formula "46"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "allLeft" (formula "30") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_10" (formula "30") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "30") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "29") (inst "t=i_20"))
                                    (rule "replaceKnownSelect_taclet00000000_12" (formula "29") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "29"))
                                    (rule "allLeft" (formula "47") (inst "t=i_20"))
                                    (rule "replaceKnownSelect_taclet00000000_7" (formula "47") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101100000000_17" (formula "47") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "29"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "47") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "allLeft" (formula "47") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_6" (formula "47") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01100000000_16" (formula "47") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq0" (formula "47") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                    (rule "leq_literals" (formula "47") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "47"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "22"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                              (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_20 FALSE"
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "46"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_20 TRUE"
                                    (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "leq_literals" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_20 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "inEqSimp_leqRight" (formula "46"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "allLeft" (formula "29") (inst "t=j_20"))
                                    (rule "replaceKnownSelect_taclet00000000_10" (formula "29") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_11" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "29") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "29"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "allLeft" (formula "30") (inst "t=i_20"))
                                    (rule "replaceKnownSelect_taclet00000000_12" (formula "30") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_13" (formula "30") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (term "1") (ifseqformula "8"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "30"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "36") (inst "sk=i_19"))
                        (rule "orRight" (formula "36"))
                        (rule "orRight" (formula "36"))
                        (rule "allRight" (formula "38") (inst "sk=j_19"))
                        (rule "orRight" (formula "38"))
                        (rule "orRight" (formula "38"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_41"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_42"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1,0,0") (ifseqformula "23"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_43"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "24"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                        (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_44"))
                        (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,1,0,0") (ifseqformula "25"))
                        (rule "replace_known_left" (formula "5") (term "0,0,1,0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (term "0,1,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "5") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "elementOfSingleton" (formula "5") (term "0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")) (ifInst ""  (formula "16")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (term "0,1,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "5") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "elementOfSingleton" (formula "5") (term "0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_45"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "16")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                        (rule "commute_and" (formula "5") (term "0,0"))
                        (rule "commute_and" (formula "6") (term "0,0"))
                        (rule "all_pull_out3" (formula "45") (term "0"))
                        (rule "all_pull_out3" (formula "44") (term "0"))
                        (rule "all_pull_out3" (formula "43") (term "0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "right ≥ j_19 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "allLeft" (formula "38") (inst "t=i_19"))
                           (rule "replaceKnownSelect_taclet10000000_9" (formula "38") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "38") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "allLeft" (formula "30") (inst "t=i_19"))
                           (rule "replaceKnownSelect_taclet10000000_10" (formula "30") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "30") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "22") (inst "t=i_19"))
                           (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "ifthenelse_split" (formula "6") (term "0"))
                           (branch " right ≥ i_19 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_19 TRUE"
                              (rule "andLeft" (formula "6"))
                              (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "8"))
                              (rule "hideAuxiliaryEq" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "14"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                           (branch " right ≥ i_19 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_19 FALSE"
                              (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_19 TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "33"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "34"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "6") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "39") (inst "t=j_19"))
                                 (rule "replaceKnownSelect_taclet10000000_8" (formula "39") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010000000_15" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "leq_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "inEqSimp_homoInEq1" (formula "39"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                 (rule "add_literals" (formula "39") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0"))
                                 (rule "add_zero_right" (formula "39") (term "0"))
                                 (rule "leq_literals" (formula "39"))
                                 (rule "closeFalse" (formula "39"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_19 FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "allLeft" (formula "39") (inst "t=j_19"))
                                 (rule "replaceKnownSelect_taclet10000000_8" (formula "39") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11010000000_15" (formula "39") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "39") (term "0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "39") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                 (rule "leq_literals" (formula "39") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_19 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                                    (rule "times_zero_1" (formula "18") (term "0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "allLeft" (formula "30") (inst "t=j_19"))
                                    (rule "replaceKnownSelect_taclet10000000_12" (formula "30") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000_13" (formula "30") (term "0,1"))
                                    (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "allLeft" (formula "21") (inst "t=j_19"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "cut_direct" (formula "50") (term "0"))
                                    (branch "CUT: right ≥ i_19 TRUE"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_leqRight" (formula "51"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "allLeft" (formula "32") (inst "t=j_19"))
                                       (rule "replaceKnownSelect_taclet10000000_12" (formula "32") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010000000_13" (formula "32") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allLeft" (formula "31") (inst "t=i_19"))
                                       (rule "replaceKnownSelect_taclet10000000_10" (formula "31") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "31") (term "0,1"))
                                       (rule "eqSymm" (formula "31") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "31") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "allLeft" (formula "47") (inst "t=i_19"))
                                       (rule "replaceKnownSelect_taclet10000000_9" (formula "47") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "47") (term "1,1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "47") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "commute_or" (formula "47") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "47") (term "0,0"))
                                       (rule "commute_or_2" (formula "47") (term "0"))
                                       (rule "allLeft" (formula "53") (inst "t=i_19"))
                                       (rule "replaceKnownSelect_taclet10000000_7" (formula "53") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1010000000_14" (formula "53") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "53") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "53") (term "0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "53") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "cut_direct" (formula "47") (term "1,0"))
                                       (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_19 TRUE"
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "47"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "31"))
                                          (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "46"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "15"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                       (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_19 FALSE"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_leqRight" (formula "56"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "47") (inst "t=j_19"))
                                          (rule "replaceKnownSelect_taclet10000000_8" (formula "47") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11010000000_15" (formula "47") (term "0,1"))
                                          (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "allLeft" (formula "53") (inst "t=j_19"))
                                          (rule "replaceKnownSelect_taclet10000000_6" (formula "53") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet011010000000_16" (formula "53") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "53") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "53") (term "0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "53") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                          (rule "leq_literals" (formula "53") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradInEq0" (formula "53") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "53") (term "0,0,1"))
                                          (rule "leq_literals" (formula "53") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "5"))
                                          (rule "andLeft" (formula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "53"))
                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0"))
                                          (rule "add_zero_right" (formula "53") (term "0"))
                                          (rule "leq_literals" (formula "53"))
                                          (rule "closeFalse" (formula "53"))
                                       )
                                    )
                                    (branch "CUT: right ≥ i_19 FALSE"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "inEqSimp_geqRight" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "8"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "leq_literals" (formula "11"))
                                       (rule "closeFalse" (formula "11"))
                                    )
                                 )
                                 (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_19 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "inEqSimp_leqRight" (formula "48"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "39"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                        (branch "right ≥ j_19 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_geqRight" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "10"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "allLeft" (formula "29") (inst "t=i_19"))
                           (rule "replaceKnownSelect_taclet10000000_10" (formula "29") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "29") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "29") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allLeft" (formula "21") (inst "t=i_19"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "39") (inst "t=i_19"))
                           (rule "replaceKnownSelect_taclet10000000_9" (formula "39") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000000_11" (formula "39") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "39") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " right ≥ i_19 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_19 TRUE"
                              (rule "andLeft" (formula "4"))
                              (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                              (rule "mul_literals" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "13"))
                              (rule "andLeft" (formula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0"))
                              (rule "add_zero_right" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                           (branch " right ≥ i_19 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_19 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_19 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_19 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_geqRight" (formula "46"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0"))
                                 (rule "qeq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "allLeft" (formula "20") (inst "t=j_19"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "9"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "36") (inst "sk=f_3"))
                     (rule "allRight" (formula "36") (inst "sk=o_3"))
                     (rule "orRight" (formula "36"))
                     (rule "orRight" (formula "36"))
                     (rule "orRight" (formula "36"))
                     (rule "orRight" (formula "36"))
                     (rule "orRight" (formula "36"))
                     (rule "eqSymm" (formula "39") (term "0,0,0,1"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_3_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "15"))
                     (rule "eqSymm" (formula "42"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "16"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "42"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "40"))
                     (rule "commute_and" (formula "38"))
                     (rule "commute_and" (formula "39"))
                     (rule "commute_or_2" (formula "2") (term "0,1,1,0,0"))
                     (rule "commute_and_2" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "all_pull_out3" (formula "36") (term "0"))
                     (rule "shift_paren_or" (formula "36") (term "0,0"))
                     (rule "shift_paren_or" (formula "36") (term "0,0,0"))
                     (rule "all_pull_out3" (formula "35") (term "0"))
                     (rule "shift_paren_or" (formula "35") (term "0,0"))
                     (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                     (rule "all_pull_out3" (formula "34") (term "0"))
                     (rule "shift_paren_or" (formula "34") (term "0,0"))
                     (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                     (rule "cut_direct" (formula "42") (term "0,0"))
                     (branch "CUT: o_3 = null TRUE"
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "false_right" (formula "43"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "CUT: o_3 = null FALSE"
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "notRight" (formula "43"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                        (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                        (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "false_right" (formula "41"))
                        (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "false_right" (formula "39"))
                        (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "false_right" (formula "39"))
                        (rule "cut_direct" (formula "39") (term "0"))
                        (branch "CUT: o_3 = a TRUE"
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                           (rule "nnf_ex2all" (formula "39"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ∃ int iv; ( arr(iv) = f_3 ∧ iv ≥ left ∧ iv ≤ -1 + ThreeWayQs.less@anon_heap_split«anonHeapFunction») ∧ ¬f_3 = java.lang.Object::<created> TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "exLeft" (formula "3") (inst "sk=iv_3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "eqSymm" (formula "3"))
                              (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_commuteGeq" (formula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEqRigid" (formula "6") (term "2,1,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "6") (term "1,0") (ifseqformula "35") (ifseqformula "42"))
                              (rule "applyEqRigid" (formula "6") (term "2,2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "29") (ifseqformula "42"))
                              (rule "applyEqRigid" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "11") (ifseqformula "42"))
                              (rule "eqSymm" (formula "43"))
                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "false_right" (formula "41"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "30"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "commute_or" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "leq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " ∃ int iv; ( arr(iv) = f_3 ∧ iv ≥ left ∧ iv ≤ -1 + ThreeWayQs.less@anon_heap_split«anonHeapFunction») ∧ ¬f_3 = java.lang.Object::<created> FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " ∃ int iv; ( arr(iv) = f_3 ∧ iv ≤ right ∧ iv ≥ 1 + ThreeWayQs.great@anon_heap_split«anonHeapFunction») ∧ ¬f_3 = java.lang.Object::<created> TRUE"
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "exLeft" (formula "3") (inst "sk=iv_2"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "43"))
                                 (rule "replace_known_right" (formula "41") (term "0,1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "34") (ifseqformula "42"))
                                 (rule "eqSymm" (formula "43"))
                                 (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "3"))
                                 (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "10") (ifseqformula "41"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                                 (rule "times_zero_1" (formula "14") (term "0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "nnf_ex2all" (formula "42"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "commute_or" (formula "2") (term "0,0"))
                                 (rule "commute_or_2" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "0,0"))
                                 (rule "castDel" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "5"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch " ∃ int iv; ( arr(iv) = f_3 ∧ iv ≤ right ∧ iv ≥ 1 + ThreeWayQs.great@anon_heap_split«anonHeapFunction») ∧ ¬f_3 = java.lang.Object::<created> FALSE"
                                 (rule "close" (formula "41") (ifseqformula "3"))
                              )
                           )
                        )
                        (branch "CUT: o_3 = a FALSE"
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "false_right" (formula "40"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (sort)"
                  (builtin "One Step Simplification" (formula "32"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "24"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0") (ifseqformula "14"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "31"))
                  (rule "close" (formula "35") (ifseqformula "34"))
               )
               (branch "Pre (sort)"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1,0") (ifseqformula "24"))
                  (rule "wellFormedAnonEQ" (formula "30") (term "0,1,0") (ifseqformula "24"))
                  (rule "wellFormedAnonEQ" (formula "30") (term "0,0,1,0") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,1,0") (ifseqformula "14"))
                  (rule "translateJavaAddInt" (formula "30") (term "0,1"))
                  (rule "translateJavaSubInt" (formula "30") (term "0,0,1"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,1,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "13")) (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
                  (rule "polySimp_elimSub" (formula "30") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1"))
                  (rule "measuredByCheck" (formula "30") (term "1") (ifseqformula "7"))
                  (rule "precOfInt" (formula "30") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,1,1"))
                  (rule "mul_literals" (formula "30") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "30") (term "0,0,1,1"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0,0"))
                  (rule "times_zero_2" (formula "30") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1"))
                  (rule "times_zero_2" (formula "30") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                  (rule "replace_known_left" (formula "30") (term "1,0,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,0,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,1"))
                  (rule "inEqSimp_subsumption0" (formula "30") (term "0,1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,1"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,1"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,1"))
                  (rule "qeq_literals" (formula "30") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "inEqSimp_subsumption1" (formula "30") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,1"))
                  (rule "qeq_literals" (formula "30") (term "0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,1"))
                  (rule "nnf_imp2or" (formula "30") (term "0,0,1"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,1"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,1"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,1"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,1"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,1"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,1,1"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,1,1"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,1,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,1,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,1,1"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,1,0,1,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,1,0,1,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,1,0,1,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,1,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,1,0,1,1"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,1,0,0,1"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,1,0,0,1"))
                  (rule "all_pull_out3" (formula "30") (term "0,1,1"))
                  (rule "all_pull_out3" (formula "30") (term "0,0,1"))
                  (rule "cut_direct" (formula "30") (term "0"))
                  (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ -1 TRUE"
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "andRight" (formula "32"))
                     (branch "Case 1"
                        (rule "allRight" (formula "32") (inst "sk=i_18"))
                        (rule "allRight" (formula "32") (inst "sk=j_18"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "34"))
                        (rule "orRight" (formula "34"))
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_37"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "mul_literals" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "add_literals" (formula "10") (term "0,0"))
                        (rule "add_zero_left" (formula "10") (term "0"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_38"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "27"))
                        (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_39"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")) (ifInst ""  (formula "20")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                        (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_40"))
                        (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")) (ifInst ""  (formula "21")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "5") (term "1,1,0,0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0,1,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
                        (rule "qeq_literals" (formula "5") (term "0,1,1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                        (rule "times_zero_1" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "mul_literals" (formula "23") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "right ≥ j_18 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "left ≤ i_18 TRUE"
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "allLeft" (formula "33") (inst "t=j_18"))
                              (rule "replaceKnownSelect_taclet00200000_8" (formula "33") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000200000_10" (formula "33") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "38"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 FALSE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_geqRight" (formula "44"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_18 TRUE"
                                    (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                    (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "8"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "45") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_7" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000200000_13" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "45") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "allLeft" (formula "31") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_9" (formula "31") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000200000_11" (formula "31") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "46") (inst "t=j_18"))
                                    (rule "replaceKnownSelect_taclet00200000_6" (formula "46") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10000200000_12" (formula "46") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "46") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq0" (formula "46") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                    (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                    (rule "leq_literals" (formula "46") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "3"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "inEqSimp_homoInEq1" (formula "46"))
                                    (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                    (rule "add_literals" (formula "46") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "46") (term "1,0"))
                                    (rule "add_zero_right" (formula "46") (term "0"))
                                    (rule "leq_literals" (formula "46"))
                                    (rule "closeFalse" (formula "46"))
                                 )
                                 (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_18 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                    (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "inEqSimp_geqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "33"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "mul_literals" (formula "34") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                    (rule "times_zero_1" (formula "23") (term "0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "allLeft" (formula "32") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_9" (formula "32") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000200000_11" (formula "32") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradEq7" (formula "32") (term "1") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                    (rule "leq_literals" (formula "32") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "1"))
                                    (rule "andLeft" (formula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "32"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0"))
                                    (rule "add_zero_right" (formula "32") (term "0"))
                                    (rule "leq_literals" (formula "32"))
                                    (rule "closeFalse" (formula "32"))
                                 )
                              )
                           )
                           (branch "left ≤ i_18 FALSE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_leqRight" (formula "42"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "allLeft" (formula "32") (inst "t=j_18"))
                              (rule "replaceKnownSelect_taclet00200000_8" (formula "32") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000200000_10" (formula "32") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "32") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 FALSE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "inEqSimp_geqRight" (formula "43"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "7"))
                                 (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "35") (inst "t=i_18"))
                                 (rule "replaceKnownSelect_taclet00200000_9" (formula "35") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1000200000_11" (formula "35") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "45") (inst "t=i_18"))
                                 (rule "replaceKnownSelect_taclet00200000_7" (formula "45") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1000200000_12" (formula "45") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "45") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "25") (inst "t=j_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "46") (inst "t=j_18"))
                                 (rule "replaceKnownSelect_taclet00200000_6" (formula "46") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000200000_13" (formula "46") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "46") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq0" (formula "46") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                 (rule "leq_literals" (formula "46") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq0" (formula "46") (ifseqformula "15"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "inEqSimp_homoInEq1" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0"))
                                 (rule "add_zero_right" (formula "46") (term "0"))
                                 (rule "leq_literals" (formula "46"))
                                 (rule "closeFalse" (formula "46"))
                              )
                           )
                        )
                        (branch "right ≥ j_18 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_geqRight" (formula "43"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "23"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                           (rule "leq_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "left ≤ i_18 TRUE"
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "23") (term "0,0"))
                              (rule "add_zero_left" (formula "23") (term "0"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 FALSE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_geqRight" (formula "43"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "allLeft" (formula "27") (inst "t=i_18"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "allLeft" (formula "36") (inst "t=i_18"))
                                 (rule "replaceKnownSelect_taclet00200000_9" (formula "36") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100200000_11" (formula "36") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_18 TRUE"
                                    (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "38"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "39"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "45") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_7" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010100200000_13" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "45") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "allLeft" (formula "32") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_9" (formula "32") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0100200000_11" (formula "32") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "32") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                    (rule "leq_literals" (formula "32") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allLeft" (formula "37") (inst "t=j_18"))
                                    (rule "replaceKnownSelect_taclet00200000_8" (formula "37") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100200000_10" (formula "37") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allLeft" (formula "27") (inst "t=j_18"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "27") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "allLeft" (formula "48") (inst "t=j_18"))
                                    (rule "replaceKnownSelect_taclet00200000_6" (formula "48") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10100200000_12" (formula "48") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "48") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "48") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                    (rule "leq_literals" (formula "48") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "48"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_18 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "inEqSimp_geqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                    (rule "times_zero_1" (formula "23") (term "0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "allLeft" (formula "33") (inst "t=i_18"))
                                    (rule "replaceKnownSelect_taclet00200000_9" (formula "33") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0100200000_11" (formula "33") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "33"))
                                    (rule "allLeft" (formula "27") (inst "t=j_18"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "27") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "allLeft" (formula "38") (inst "t=j_18"))
                                    (rule "replaceKnownSelect_taclet00200000_8" (formula "38") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100200000_10" (formula "38") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "38"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "leq_literals" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                              )
                           )
                           (branch "left ≤ i_18 FALSE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_leqRight" (formula "42"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "ifthenelse_split" (formula "6") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 TRUE"
                                 (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "35"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_18 FALSE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "inEqSimp_geqRight" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "26") (inst "t=i_18"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "25") (inst "t=i_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "36") (inst "t=i_18"))
                                 (rule "replaceKnownSelect_taclet00200000_9" (formula "36") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1100200000_11" (formula "36") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "allLeft" (formula "27") (inst "t=j_18"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "27"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "32") (inst "sk=i_17"))
                        (rule "allRight" (formula "32") (inst "sk=j_17"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "34"))
                        (rule "orRight" (formula "34"))
                        (rule "inEqSimp_leqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_33"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                        (rule "mul_literals" (formula "8") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_34"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_35"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "19")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,1,0,0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_36"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")) (ifInst ""  (formula "19")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "4") (term "1,1,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "14"))
                        (rule "times_zero_1" (formula "21") (term "0,0"))
                        (rule "add_zero_left" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "21"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_17 TRUE"
                           (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_17 FALSE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_geqRight" (formula "41"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                           (rule "mul_literals" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "left ≤ i_17 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "allLeft" (formula "33") (inst "t=i_17"))
                              (rule "replaceKnownSelect_taclet10200000_10" (formula "33") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0110200000_12" (formula "33") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "33") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "25") (inst "t=i_17"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_17 TRUE"
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "36"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "13"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "allLeft" (formula "32") (inst "t=j_17"))
                                 (rule "replaceKnownSelect_taclet10200000_8" (formula "32") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10200000_9" (formula "32") (term "0,1"))
                                 (rule "eqSymm" (formula "32") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "allLeft" (formula "45") (inst "t=i_17"))
                                 (rule "replaceKnownSelect_taclet10200000_7" (formula "45") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00110200000_13" (formula "45") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "10"))
                                 (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0"))
                                 (rule "leq_literals" (formula "45") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "31") (inst "t=i_17"))
                                 (rule "replaceKnownSelect_taclet10200000_10" (formula "31") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0110200000_12" (formula "31") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allLeft" (formula "26") (inst "t=j_17"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "allLeft" (formula "38") (inst "t=j_17"))
                                 (rule "replaceKnownSelect_taclet10200000_8" (formula "38") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10200000_9" (formula "38") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "38") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "allLeft" (formula "48") (inst "t=j_17"))
                                 (rule "replaceKnownSelect_taclet10200000_6" (formula "48") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet110200000_11" (formula "48") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "48") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "48"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_17 FALSE"
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_geqRight" (formula "43"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "allLeft" (formula "25") (inst "t=j_17"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allLeft" (formula "35") (inst "t=j_17"))
                                 (rule "replaceKnownSelect_taclet10200000_8" (formula "35") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10200000_9" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "leq_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "leq_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "4"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "inEqSimp_homoInEq1" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0"))
                                 (rule "leq_literals" (formula "35"))
                                 (rule "closeFalse" (formula "35"))
                              )
                           )
                           (branch "left ≤ i_17 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_leqRight" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "allLeft" (formula "32") (inst "t=i_17"))
                              (rule "replaceKnownSelect_taclet10200000_10" (formula "32") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1110200000_12" (formula "32") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "allLeft" (formula "24") (inst "t=i_17"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "allLeft" (formula "23") (inst "t=i_17"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "allLeft" (formula "25") (inst "t=j_17"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1"))
                              (rule "leq_literals" (formula "25") (term "0,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "4"))
                              (rule "andLeft" (formula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "closeFalse" (formula "25"))
                           )
                        )
                     )
                  )
                  (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ -1 FALSE"
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
            )
            (branch "if x_7 false"
               (builtin "One Step Simplification" (formula "31"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "methodCallEmpty" (formula "31") (term "1"))
               (rule "tryEmpty" (formula "31") (term "1"))
               (rule "emptyModality" (formula "31") (term "1"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "eqSymm" (formula "31") (term "1,0,0,1"))
               (rule "andRight" (formula "31"))
               (branch "Case 1"
                  (rule "andRight" (formula "31"))
                  (branch "Case 1"
                     (rule "allRight" (formula "31") (inst "sk=i_16"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "allRight" (formula "33") (inst "sk=j_16"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "35"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "34"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "34"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_29"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "16") (term "0,0"))
                     (rule "add_zero_left" (formula "16") (term "0"))
                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_30"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "8")))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                     (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_31"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "15")))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_32"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")) (ifInst ""  (formula "15")))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_16 TRUE"
                        (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_16 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "allLeft" (formula "28") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_8" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_9" (formula "28") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "allLeft" (formula "29") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_10" (formula "29") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "29") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allLeft" (formula "41") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_7" (formula "41") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000010000_13" (formula "41") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0,0,0"))
                           (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0,0,0,0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "41") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "commute_or_2" (formula "41") (term "0,0"))
                           (rule "commute_or" (formula "41") (term "0,0,0"))
                           (rule "allLeft" (formula "41") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_6" (formula "41") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010000_12" (formula "41") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "41") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "41") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1"))
                           (rule "leq_literals" (formula "41") (term "0,1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "8"))
                           (rule "andLeft" (formula "41"))
                           (rule "inEqSimp_homoInEq1" (formula "41"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                           (rule "add_literals" (formula "41") (term "1,1,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0"))
                           (rule "add_zero_right" (formula "41") (term "0"))
                           (rule "leq_literals" (formula "41"))
                           (rule "closeFalse" (formula "41"))
                        )
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_16 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_geqRight" (formula "40"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "qeq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "7"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_16 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (rule "add_zero_left" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_16 TRUE"
                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "allLeft" (formula "27") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_10" (formula "27") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "27") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "27") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0"))
                           (rule "leq_literals" (formula "27") (term "0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "30") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_8" (formula "30") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_9" (formula "30") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "29") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_8" (formula "29") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_9" (formula "29") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "29") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allLeft" (formula "43") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_7" (formula "43") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010010000_13" (formula "43") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "43") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "allLeft" (formula "43") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_6" (formula "43") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010000_12" (formula "43") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq0" (formula "43") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                           (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "43"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "21"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_16 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_geqRight" (formula "39"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "allLeft" (formula "28") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_10" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "28") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "allLeft" (formula "29") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_8" (formula "29") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_9" (formula "29") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allLeft" (formula "27") (inst "t=i_16"))
                           (rule "replaceKnownSelect_taclet0010000_10" (formula "27") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_11" (formula "27") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "27") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "28") (inst "t=j_16"))
                           (rule "replaceKnownSelect_taclet0010000_8" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010000_9" (formula "28") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "cut_direct" (formula "30") (term "0"))
                           (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ i_16 TRUE"
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "27"))
                              (rule "inEqSimp_contradEq3" (formula "28") (term "1") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                              (rule "qeq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "31"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ i_16 FALSE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "add_zero_left" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
                              (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_commuteGeq" (formula "6"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,0"))
                              (rule "times_zero_1" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "8"))
                              (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,0"))
                              (rule "times_zero_1" (formula "8") (term "0"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "7"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "applyEq" (formula "36") (term "1") (ifseqformula "7"))
                              (rule "applyEq" (formula "25") (term "2,1,1,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "35") (term "1") (ifseqformula "7"))
                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "23") (term "1,1,0,0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "9"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "34") (term "1,1,1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "31"))
                     (branch "Case 1"
                        (rule "allRight" (formula "31") (inst "sk=i_15"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "allRight" (formula "33") (inst "sk=j_15"))
                        (rule "orRight" (formula "33"))
                        (rule "orRight" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "34"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_26"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_27"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "23"))
                        (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "0,1,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "4") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")) (ifInst ""  (formula "14")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "0,1,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "4") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_28"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "14")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                        (rule "allLeft" (formula "28") (inst "t=i_15"))
                        (rule "replaceKnownSelect_taclet01010000_8" (formula "28") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01010000_9" (formula "28") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "allLeft" (formula "20") (inst "t=i_15"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allLeft" (formula "39") (inst "t=i_15"))
                        (rule "replaceKnownSelect_taclet01010000_7" (formula "39") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01010000_9" (formula "39") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "39") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "right ≥ j_15 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "allLeft" (formula "29") (inst "t=j_15"))
                           (rule "replaceKnownSelect_taclet01010000_10" (formula "29") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001010000_11" (formula "29") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "29") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allLeft" (formula "20") (inst "t=j_15"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (term "0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "allLeft" (formula "41") (inst "t=j_15"))
                           (rule "replaceKnownSelect_taclet01010000_6" (formula "41") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1"))
                           (rule "leq_literals" (formula "41") (term "0,1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1"))
                           (rule "leq_literals" (formula "41") (term "0,1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "2"))
                           (rule "andLeft" (formula "41"))
                           (rule "inEqSimp_homoInEq1" (formula "41"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                           (rule "add_literals" (formula "41") (term "1,1,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0"))
                           (rule "add_zero_right" (formula "41") (term "0"))
                           (rule "leq_literals" (formula "41"))
                           (rule "closeFalse" (formula "41"))
                        )
                        (branch "right ≥ j_15 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_geqRight" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "9"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "allLeft" (formula "29") (inst "t=j_15"))
                           (rule "replaceKnownSelect_taclet01010000_10" (formula "29") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101010000_11" (formula "29") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_15 TRUE"
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_15 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "inEqSimp_geqRight" (formula "42"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "29"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "31") (inst "sk=i_14"))
                        (rule "orRight" (formula "31"))
                        (rule "orRight" (formula "31"))
                        (rule "allRight" (formula "33") (inst "sk=j_14"))
                        (rule "orRight" (formula "33"))
                        (rule "orRight" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_22"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "mul_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_23"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "23"))
                        (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_24"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "0,1,0,0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_25"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")) (ifInst ""  (formula "16")))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "4") (term "1,1,0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (rule "add_zero_left" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_14 TRUE"
                           (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + j_14 FALSE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_geqRight" (formula "40"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "allLeft" (formula "31") (inst "t=i_14"))
                           (rule "replaceKnownSelect_taclet11010000_10" (formula "31") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "allLeft" (formula "23") (inst "t=i_14"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "left ≤ i_14 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "33") (term "1,1,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "allLeft" (formula "23") (inst "t=j_14"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "allLeft" (formula "34") (inst "t=j_14"))
                              (rule "replaceKnownSelect_taclet11010000_8" (formula "34") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11010000_9" (formula "34") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,0"))
                              (rule "leq_literals" (formula "34") (term "0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_14 TRUE"
                                 (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "39"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "38"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "qeq_literals" (formula "11") (term "0"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "39"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "allLeft" (formula "31") (inst "t=i_14"))
                                 (rule "replaceKnownSelect_taclet11010000_10" (formula "31") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0111010000_12" (formula "31") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allLeft" (formula "33") (inst "t=j_14"))
                                 (rule "replaceKnownSelect_taclet11010000_8" (formula "33") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11010000_9" (formula "33") (term "0,1"))
                                 (rule "eqSymm" (formula "33") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "33") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "allLeft" (formula "48") (inst "t=i_14"))
                                 (rule "replaceKnownSelect_taclet11010000_7" (formula "48") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00111010000_13" (formula "48") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0,0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "48") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0") (ifseqformula "10"))
                                 (rule "qeq_literals" (formula "48") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "allLeft" (formula "48") (inst "t=j_14"))
                                 (rule "replaceKnownSelect_taclet11010000_6" (formula "48") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111010000_11" (formula "48") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq0" (formula "48") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                 (rule "leq_literals" (formula "48") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "48"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch " ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≥ 1 + i_14 FALSE"
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_geqRight" (formula "45"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "34"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch "left ≤ i_14 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_leqRight" (formula "41"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "allLeft" (formula "21") (inst "t=i_14"))
                              (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "allLeft" (formula "23") (inst "t=j_14"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1"))
                              (rule "leq_literals" (formula "23") (term "0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "23"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "31") (inst "sk=f_2"))
                  (rule "allRight" (formula "31") (inst "sk=o_2"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "eqSymm" (formula "34") (term "0,0,0,1"))
                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_2_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "37"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "34"))
                  (rule "commute_and" (formula "32"))
                  (rule "commute_and" (formula "33"))
                  (rule "cut_direct" (formula "36") (term "0,0"))
                  (branch "CUT: o_2 = null TRUE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "false_right" (formula "37"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "35") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "35") (term "0"))
                     (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "closeTrue" (formula "35"))
                  )
                  (branch "CUT: o_2 = null FALSE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "notRight" (formula "37"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "false_right" (formula "34"))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch " o_2 = a ∧ ∃ int iv; ( arr(iv) = f_2 ∧ iv ≥ left ∧ iv ≤ -1 + ThreeWayQs.less@anon_heap_split«anonHeapFunction») ∧ ¬f_2 = java.lang.Object::<created> TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "3"))
                        (rule "andLeft" (formula "2"))
                        (rule "exLeft" (formula "3") (inst "sk=iv_1"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "eqSymm" (formula "3"))
                        (rule "eqSymm" (formula "39"))
                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_commuteGeq" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "false_right" (formula "34"))
                        (rule "applyEqRigid" (formula "35") (term "1,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectArrayType" (formula "37") (term "0") (ifseqformula "28") (ifseqformula "34"))
                        (rule "eqSymm" (formula "37"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "9") (ifseqformula "34"))
                        (rule "eqSymm" (formula "36"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "26"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "mul_literals" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "29"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "29"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "nnf_ex2all" (formula "38"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch " o_2 = a ∧ ∃ int iv; ( arr(iv) = f_2 ∧ iv ≥ left ∧ iv ≤ -1 + ThreeWayQs.less@anon_heap_split«anonHeapFunction») ∧ ¬f_2 = java.lang.Object::<created> FALSE"
                        (rule "close" (formula "36") (ifseqformula "2"))
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (sort)"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0") (ifseqformula "13"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "25"))
            (rule "close" (formula "28") (ifseqformula "27"))
         )
         (branch "Pre (sort)"
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
            (rule "wellFormedAnonEQ" (formula "24") (term "0,1,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,1,0") (ifseqformula "13"))
            (rule "translateJavaAddInt" (formula "24") (term "0,1"))
            (rule "translateJavaSubInt" (formula "24") (term "0,0,1"))
            (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
            (rule "polySimp_elimSub" (formula "24") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "24") (term "0,1"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "24") (term "0,1"))
            (rule "measuredByCheck" (formula "24") (term "1") (ifseqformula "6"))
            (rule "precOfInt" (formula "24") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,0,1,1,0"))
            (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,1"))
            (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,1,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
            (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "24") (term "1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "24") (term "0,0,0,1,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
            (rule "times_zero_2" (formula "24") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "24") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
            (rule "replace_known_left" (formula "24") (term "1,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1,1,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "24") (term "1") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
            (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "24") (term "0,0,1"))
            (rule "qeq_literals" (formula "24") (term "0,1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "nnf_imp2or" (formula "24") (term "0,1,1"))
            (rule "nnf_imp2or" (formula "24") (term "0,0,1"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,1,1"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,1"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,1"))
            (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,1"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,1"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,1"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,1"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1"))
            (rule "nnf_imp2or" (formula "24") (term "0,1,0,1,1"))
            (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,1"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,1,1"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,1,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,1,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,1,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,1,1"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,1,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
            (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,1"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,1"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0,0,1"))
            (rule "all_pull_out3" (formula "24") (term "0,1,1"))
            (rule "all_pull_out3" (formula "24") (term "0,0,1"))
            (rule "cut_direct" (formula "24") (term "0"))
            (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ a.length TRUE"
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
               (rule "mul_literals" (formula "4") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "andRight" (formula "26"))
               (branch "Case 1"
                  (rule "allRight" (formula "26") (inst "sk=i_13"))
                  (rule "allRight" (formula "26") (inst "sk=j_13"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "27"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "28"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "30"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_20"))
                  (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")) (ifInst ""  (formula "13")))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "elementOfUnion" (formula "5") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "5") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                  (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0"))
                  (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
                  (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "15") (term "0,0"))
                  (rule "add_zero_left" (formula "15") (term "0"))
                  (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_21"))
                  (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "33")) (ifInst ""  (formula "14")))
                  (rule "elementOfUnion" (formula "6") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "6") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_commuteLeq" (formula "6") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0"))
                  (rule "leq_literals" (formula "6") (term "0,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "elementOfUnion" (formula "6") (term "0,0"))
                  (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "33")))
                  (rule "elementOfUnion" (formula "6") (term "0,0"))
                  (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "33")))
                  (rule "elementOfSingleton" (formula "6") (term "0,0"))
                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "33")))
                  (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "ifthenelse_split" (formula "6") (term "0"))
                  (branch "right ≥ j_13 TRUE"
                     (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "allLeft" (formula "20") (inst "t=i_13"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "allLeft" (formula "29") (inst "t=i_13"))
                     (rule "replaceKnownSelect_taclet002000_7" (formula "29") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet002000_8" (formula "29") (term "1,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "allLeft" (formula "20") (inst "t=j_13"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "20") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "allLeft" (formula "30") (inst "t=j_13"))
                     (rule "replaceKnownSelect_taclet002000_6" (formula "30") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0002000_9" (formula "30") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "7"))
                     (rule "andLeft" (formula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                     (rule "add_literals" (formula "30") (term "1,1,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0"))
                     (rule "add_zero_right" (formula "30") (term "0"))
                     (rule "leq_literals" (formula "30"))
                     (rule "closeFalse" (formula "30"))
                  )
                  (branch "right ≥ j_13 FALSE"
                     (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "8"))
                     (rule "times_zero_1" (formula "17") (term "0,0"))
                     (rule "add_zero_left" (formula "17") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "allLeft" (formula "20") (inst "t=i_13"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "allLeft" (formula "29") (inst "t=i_13"))
                     (rule "replaceKnownSelect_taclet002000_7" (formula "29") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet002000_8" (formula "29") (term "1,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "allLeft" (formula "20") (inst "t=j_13"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "20"))
                     (rule "andLeft" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_zero_right" (formula "8") (term "0"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "26") (inst "sk=i_12"))
                  (rule "allRight" (formula "26") (inst "sk=j_12"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "inEqSimp_geqRight" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "27"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "30"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_18"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "13")))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                  (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                  (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "30"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "33"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                  (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_19"))
                  (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")) (ifInst ""  (formula "19")))
                  (rule "elementOfUnion" (formula "4") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (term "1,1,0,0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                  (rule "qeq_literals" (formula "4") (term "0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                  (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                  (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "35"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                  (rule "times_zero_1" (formula "21") (term "0,0"))
                  (rule "add_zero_left" (formula "21") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "right ≥ j_12 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "left ≤ i_12 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "22") (term "0,0"))
                        (rule "add_zero_left" (formula "22") (term "0"))
                        (rule "allLeft" (formula "30") (inst "t=i_12"))
                        (rule "replaceKnownSelect_taclet102000_7" (formula "30") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00102000_9" (formula "30") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "30") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "allLeft" (formula "32") (inst "t=j_12"))
                        (rule "replaceKnownSelect_taclet102000_6" (formula "32") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0102000_8" (formula "32") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                        (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "32") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "allLeft" (formula "34") (inst "t=j_12"))
                        (rule "replaceKnownSelect_taclet102000_6" (formula "34") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0102000_8" (formula "34") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "34") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "cut_direct" (formula "32") (term "0"))
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_12 TRUE"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,0"))
                           (rule "leq_literals" (formula "34") (term "0,0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                           (rule "mul_literals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "mul_literals" (formula "34") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "30"))
                           (rule "andLeft" (formula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "1,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0"))
                           (rule "add_zero_right" (formula "34") (term "0"))
                           (rule "leq_literals" (formula "34"))
                           (rule "closeFalse" (formula "34"))
                        )
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_12 FALSE"
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_leqRight" (formula "41"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq0" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,1"))
                           (rule "add_literals" (formula "35") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "35") (term "1,0,1"))
                           (rule "add_zero_right" (formula "35") (term "0,1"))
                           (rule "leq_literals" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "5"))
                           (rule "andLeft" (formula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_zero_right" (formula "30") (term "0"))
                           (rule "leq_literals" (formula "30"))
                           (rule "closeFalse" (formula "30"))
                        )
                     )
                     (branch "left ≤ i_12 FALSE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_leqRight" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0"))
                        (rule "qeq_literals" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "allLeft" (formula "33") (inst "t=i_12"))
                        (rule "replaceKnownSelect_taclet102000_7" (formula "33") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10102000_9" (formula "33") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "33") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "allLeft" (formula "25") (inst "t=i_12"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "allLeft" (formula "34") (inst "t=j_12"))
                        (rule "replaceKnownSelect_taclet102000_6" (formula "34") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0102000_8" (formula "34") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1"))
                        (rule "leq_literals" (formula "34") (term "0,1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1"))
                        (rule "leq_literals" (formula "34") (term "0,1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "16"))
                        (rule "andLeft" (formula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                        (rule "add_literals" (formula "34") (term "1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0"))
                        (rule "add_zero_right" (formula "34") (term "0"))
                        (rule "leq_literals" (formula "34"))
                        (rule "closeFalse" (formula "34"))
                     )
                  )
                  (branch "right ≥ j_12 FALSE"
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "inEqSimp_geqRight" (formula "37"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "mul_literals" (formula "9") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "22") (term "0,0"))
                     (rule "add_zero_left" (formula "22") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                     (rule "leq_literals" (formula "21") (term "0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "left ≤ i_12 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "22") (term "0,0"))
                        (rule "add_zero_left" (formula "22") (term "0"))
                        (rule "allLeft" (formula "34") (inst "t=i_12"))
                        (rule "replaceKnownSelect_taclet102000_7" (formula "34") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01102000_9" (formula "34") (term "1,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "34") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "34") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "allLeft" (formula "26") (inst "t=i_12"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "allLeft" (formula "31") (inst "t=i_12"))
                        (rule "replaceKnownSelect_taclet102000_7" (formula "31") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01102000_9" (formula "31") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "31") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0"))
                        (rule "leq_literals" (formula "31") (term "0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "31"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "mul_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "allLeft" (formula "37") (inst "t=j_12"))
                        (rule "replaceKnownSelect_taclet102000_6" (formula "37") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1102000_8" (formula "37") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "37") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                        (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0"))
                        (rule "leq_literals" (formula "37") (term "0,0"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "6"))
                        (rule "andLeft" (formula "37"))
                        (rule "inEqSimp_homoInEq1" (formula "37"))
                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "1,1,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0"))
                        (rule "add_zero_right" (formula "37") (term "0"))
                        (rule "leq_literals" (formula "37"))
                        (rule "closeFalse" (formula "37"))
                     )
                     (branch "left ≤ i_12 FALSE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_leqRight" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "allLeft" (formula "25") (inst "t=i_12"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "allLeft" (formula "27") (inst "t=i_12"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "allLeft" (formula "36") (inst "t=i_12"))
                        (rule "replaceKnownSelect_taclet102000_7" (formula "36") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11102000_9" (formula "36") (term "1,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "allLeft" (formula "25") (inst "t=j_12"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "25") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "25"))
                        (rule "andLeft" (formula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "1,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0"))
                        (rule "add_zero_right" (formula "13") (term "0"))
                        (rule "leq_literals" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                  )
               )
            )
            (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ a.length FALSE"
               (builtin "One Step Simplification" (formula "25"))
               (rule "false_right" (formula "25"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "23"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_5"))
         (rule "compound_less_than_comparison_1" (formula "25") (term "1") (inst "#v0=x_6"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_6"))
         (rule "assignmentAdditionInt" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
         (rule "ifSplit" (formula "25"))
         (branch "if x_5 true"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "qeq_literals" (formula "23") (term "0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1"))
            (rule "polySimp_rightDist" (formula "20") (term "1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
            (rule "mul_literals" (formula "20") (term "0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "20"))
            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "methodCallUnfoldArguments" (formula "25") (term "1"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var"))
            (rule "assignment" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
            (rule "assignmentAdditionInt" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_2"))
            (rule "assignment" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_sort_0,exc_1,heapAfter_sort,anon_heap_sort") (contract "ThreeWayQs[ThreeWayQs::sort([I,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (sort)"
               (builtin "One Step Simplification" (formula "27"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "commuteUnion" (formula "25") (term "0,0,1,0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "29") (term "0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
               (rule "mul_literals" (formula "29") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "27") (term "1,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
               (rule "commute_or" (formula "27") (term "0,0"))
               (rule "methodCallEmpty" (formula "31") (term "1"))
               (rule "commute_or" (formula "27") (term "0,0,1,0"))
               (rule "commute_or" (formula "28") (term "0,0,1,0"))
               (rule "shift_paren_or" (formula "27") (term "0,1,0"))
               (rule "tryEmpty" (formula "31") (term "1"))
               (rule "emptyModality" (formula "31") (term "1"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")))
               (rule "eqSymm" (formula "31") (term "1,0,0,1"))
               (rule "andRight" (formula "31"))
               (branch "Case 1"
                  (rule "andRight" (formula "31"))
                  (branch "Case 1"
                     (rule "allRight" (formula "31") (inst "sk=i_11"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "allRight" (formula "33") (inst "sk=j_11"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "35"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "33"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "34"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "19"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "2") (term "1,1,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                     (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_16"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")) (ifInst ""  (formula "13")))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_17"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "13")))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "all_pull_out3" (formula "39") (term "0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0"))
                     (rule "all_pull_out3" (formula "38") (term "0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0"))
                     (rule "all_pull_out3" (formula "37") (term "0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0,0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_11 TRUE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "29"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_11 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "29"))
                           (rule "times_zero_1" (formula "14") (term "0,0"))
                           (rule "add_zero_left" (formula "14") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "allLeft" (formula "24") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_8" (formula "24") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_9" (formula "24") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "25") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_10" (formula "25") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "25") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "25") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "39") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_7" (formula "39") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000100_13" (formula "39") (term "1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "commute_or_2" (formula "39") (term "0,0"))
                           (rule "commute_or" (formula "39") (term "0,0,0"))
                           (rule "allLeft" (formula "39") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_6" (formula "39") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00000100_12" (formula "39") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1"))
                           (rule "leq_literals" (formula "39") (term "0,1"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "39"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_11 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_leqRight" (formula "39"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "allLeft" (formula "25") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_8" (formula "25") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_9" (formula "25") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "25") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "23") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_10" (formula "23") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "23") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_8" (formula "24") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_9" (formula "24") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1"))
                           (rule "leq_literals" (formula "24") (term "0,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "allLeft" (formula "26") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_10" (formula "26") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "26") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allLeft" (formula "42") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_7" (formula "42") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100000100_13" (formula "42") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "42") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "allLeft" (formula "42") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_6" (formula "42") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00000100_12" (formula "42") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "42") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "42") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1"))
                           (rule "leq_literals" (formula "42") (term "0,1"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "42"))
                           (rule "times_zero_1" (formula "16") (term "0,0"))
                           (rule "add_zero_left" (formula "16") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "42"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "6"))
                           (rule "andLeft" (formula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                     )
                     (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_11 FALSE"
                        (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_leqRight" (formula "39"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_11 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_11 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_leqRight" (formula "39"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "allLeft" (formula "24") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_10" (formula "24") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "24") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "25") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_8" (formula "25") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_9" (formula "25") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "25") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "27") (inst "t=j_11"))
                           (rule "replaceKnownSelect_taclet0000100_8" (formula "27") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_9" (formula "27") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "28") (inst "t=i_11"))
                           (rule "replaceKnownSelect_taclet0000100_10" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "28") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "cut_direct" (formula "24") (term "0"))
                           (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_11 TRUE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "28"))
                              (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_contradEq3" (formula "26") (term "1") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1"))
                              (rule "qeq_literals" (formula "26") (term "0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                              (rule "polySimp_elimOne" (formula "35") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                              (rule "mul_literals" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "7"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "34") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "35") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "31") (term "1,1,1,0,0,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "7"))
                              (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,0"))
                              (rule "times_zero_1" (formula "7") (term "0"))
                              (rule "qeq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "5"))
                              (rule "andLeft" (formula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,1,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "leq_literals" (formula "7"))
                              (rule "closeFalse" (formula "7"))
                           )
                           (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_11 FALSE"
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_leqRight" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "10"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,0"))
                              (rule "times_zero_1" (formula "11") (term "0"))
                              (rule "qeq_literals" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "31") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0"))
                              (rule "qeq_literals" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "10"))
                              (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "32"))
                              (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,0"))
                              (rule "times_zero_1" (formula "11") (term "0"))
                              (rule "qeq_literals" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "applyEqRigid" (formula "25") (term "1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "32"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0"))
                              (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEqRigid" (formula "25") (term "1,1,1,0,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                              (rule "add_zero_left" (formula "25") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "8"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "qeq_literals" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "8"))
                              (rule "andLeft" (formula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "leq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "31") (inst "sk=i_10"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "allRight" (formula "33") (inst "sk=j_10"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "32"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_11"))
                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                     (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,0"))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                     (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                     (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "13")))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                     (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "41")) (ifInst ""  (formula "14")))
                     (rule "elementOfUnion" (formula "5") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "5") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "0,1,0,0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0"))
                     (rule "leq_literals" (formula "5") (term "0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "elementOfUnion" (formula "5") (term "0,0"))
                     (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "41")))
                     (rule "elementOfUnion" (formula "5") (term "0,0"))
                     (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "41")))
                     (rule "elementOfSingleton" (formula "5") (term "0,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "41")))
                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "all_pull_out3" (formula "39") (term "0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0"))
                     (rule "all_pull_out3" (formula "38") (term "0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0"))
                     (rule "all_pull_out3" (formula "37") (term "0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "37") (term "0,0,0,0"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "right ≥ j_10 TRUE"
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "allLeft" (formula "19") (inst "t=i_10"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "19") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "28") (inst "t=i_10"))
                        (rule "replaceKnownSelect_taclet1000100_9" (formula "28") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1000100_10" (formula "28") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "ifthenelse_split" (formula "5") (term "0"))
                        (branch " right ≥ i_10 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_10 TRUE"
                           (rule "andLeft" (formula "5"))
                           (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "10"))
                           (rule "andLeft" (formula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "1,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0"))
                           (rule "add_zero_right" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                        (branch " right ≥ i_10 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_10 FALSE"
                           (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_10 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "4"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "30"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "30"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "allLeft" (formula "17") (inst "t=j_10"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "allLeft" (formula "26") (inst "t=j_10"))
                              (rule "replaceKnownSelect_taclet1000100_8" (formula "26") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01000100_11" (formula "26") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "26") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0"))
                              (rule "leq_literals" (formula "26") (term "0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allLeft" (formula "28") (inst "t=j_10"))
                              (rule "replaceKnownSelect_taclet1000100_8" (formula "28") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01000100_11" (formula "28") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "cut_direct" (formula "44") (term "0"))
                              (branch "CUT: right ≥ i_10 TRUE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "inEqSimp_leqRight" (formula "45"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "26") (inst "t=j_10"))
                                 (rule "replaceKnownSelect_taclet1000100_8" (formula "26") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000100_11" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "29"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "36"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "26"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "36"))
                                 (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0"))
                                 (rule "qeq_literals" (formula "39") (term "0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "allLeft" (formula "28") (inst "t=i_10"))
                                 (rule "replaceKnownSelect_taclet1000100_9" (formula "28") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1000100_10" (formula "28") (term "0,1"))
                                 (rule "eqSymm" (formula "28") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "allLeft" (formula "46") (inst "t=i_10"))
                                 (rule "replaceKnownSelect_taclet1000100_7" (formula "46") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101000100_12" (formula "46") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0"))
                                 (rule "leq_literals" (formula "46") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "allLeft" (formula "46") (inst "t=j_10"))
                                 (rule "replaceKnownSelect_taclet1000100_6" (formula "46") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0101000100_13" (formula "46") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "46") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq0" (formula "46") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                 (rule "leq_literals" (formula "46") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "46"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch "CUT: right ≥ i_10 FALSE"
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "inEqSimp_geqRight" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "33"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0"))
                                 (rule "add_zero_right" (formula "8") (term "0"))
                                 (rule "leq_literals" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                           (branch " ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + j_10 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_leqRight" (formula "40"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "allLeft" (formula "18") (inst "t=j_10"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "allLeft" (formula "28") (inst "t=j_10"))
                              (rule "replaceKnownSelect_taclet1000100_8" (formula "28") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01000100_11" (formula "28") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "28"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "right ≥ j_10 FALSE"
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_geqRight" (formula "38"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "27"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "allLeft" (formula "25") (inst "t=i_10"))
                        (rule "replaceKnownSelect_taclet1000100_9" (formula "25") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1000100_10" (formula "25") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "25") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "allLeft" (formula "17") (inst "t=i_10"))
                        (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0,0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "17") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch " right ≥ i_10 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_10 TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "32"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch " right ≥ i_10 ∧ ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≤ -1 + i_10 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "allLeft" (formula "16") (inst "t=j_10"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1"))
                           (rule "leq_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "31") (inst "sk=f_1"))
                  (rule "allRight" (formula "31") (inst "sk=o_1"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "orRight" (formula "31"))
                  (rule "eqSymm" (formula "34") (term "0,0,0,1"))
                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
                  (rule "eqSymm" (formula "37"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "34"))
                  (rule "commute_and" (formula "32"))
                  (rule "commute_and" (formula "33"))
                  (rule "commute_and_2" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "all_pull_out3" (formula "30") (term "0"))
                  (rule "shift_paren_or" (formula "30") (term "0,0"))
                  (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                  (rule "all_pull_out3" (formula "29") (term "0"))
                  (rule "shift_paren_or" (formula "29") (term "0,0"))
                  (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                  (rule "all_pull_out3" (formula "28") (term "0"))
                  (rule "shift_paren_or" (formula "28") (term "0,0"))
                  (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                  (rule "cut_direct" (formula "36") (term "0,0"))
                  (branch "CUT: o_1 = null TRUE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "false_right" (formula "37"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "35") (term "0"))
                     (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "closeTrue" (formula "35"))
                  )
                  (branch "CUT: o_1 = null FALSE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "notRight" (formula "37"))
                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch " o_1 = a ∧ ∃ int iv; ( arr(iv) = f_1 ∧ iv ≤ right ∧ iv ≥ 1 + ThreeWayQs.great@anon_heap_split«anonHeapFunction») ∧ ¬f_1 = java.lang.Object::<created> TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "4"))
                        (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "eqSymm" (formula "3"))
                        (rule "eqSymm" (formula "39"))
                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "37") (term "1,0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "38") (term "2,1") (ifseqformula "2"))
                        (rule "narrowSelectArrayType" (formula "38") (term "1") (ifseqformula "7") (ifseqformula "35"))
                        (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "false_right" (formula "34"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                        (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "28") (ifseqformula "34"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "10") (term "0,0"))
                        (rule "add_zero_left" (formula "10") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "nnf_ex2all" (formula "37"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0,1"))
                        (rule "castDel" (formula "1") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " o_1 = a ∧ ∃ int iv; ( arr(iv) = f_1 ∧ iv ≤ right ∧ iv ≥ 1 + ThreeWayQs.great@anon_heap_split«anonHeapFunction») ∧ ¬f_1 = java.lang.Object::<created> FALSE"
                        (rule "close" (formula "36") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "Exceptional Post (sort)"
               (builtin "One Step Simplification" (formula "27"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "12"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "26"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (sort)"
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "12"))
               (rule "wellFormedAnonEQ" (formula "25") (term "0,1,0") (ifseqformula "12"))
               (rule "translateJavaSubInt" (formula "25") (term "0,0,1"))
               (rule "translateJavaAddInt" (formula "25") (term "0,1"))
               (rule "replace_known_left" (formula "25") (term "0,1,1,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "3")) (ifInst ""  (formula "11")))
               (rule "polySimp_elimSub" (formula "25") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
               (rule "polySimp_addLiterals" (formula "25") (term "0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,1"))
               (rule "measuredByCheck" (formula "25") (term "1") (ifseqformula "5"))
               (rule "precOfInt" (formula "25") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "25") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
               (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0,1,1"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,1,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
               (rule "times_zero_2" (formula "25") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
               (rule "times_zero_2" (formula "25") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0"))
               (rule "replace_known_left" (formula "25") (term "1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,1,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1,1"))
               (rule "replace_known_left" (formula "25") (term "1,1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_subsumption0" (formula "25") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,1"))
               (rule "qeq_literals" (formula "25") (term "0,1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "nnf_imp2or" (formula "25") (term "0,0,1"))
               (rule "nnf_imp2or" (formula "25") (term "0,1,1"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,0,1"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,1"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1"))
               (rule "nnf_imp2or" (formula "25") (term "0,1,0,0,1"))
               (rule "nnf_imp2or" (formula "25") (term "0,1,0,1,1"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0,0,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0,1"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,1,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,1,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0,1,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0,1,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,0,1,1"))
               (rule "all_pull_out3" (formula "25") (term "0,0,1"))
               (rule "all_pull_out3" (formula "25") (term "0,1,1"))
               (rule "cut_direct" (formula "25") (term "0"))
               (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ -1 TRUE"
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "allRight" (formula "27") (inst "sk=i_9"))
                     (rule "allRight" (formula "27") (inst "sk=j_9"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "29"))
                     (rule "orRight" (formula "29"))
                     (rule "inEqSimp_leqRight" (formula "27"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "28"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "12")))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "3") (term "0,0,0") (ifseqformula "29"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")) (ifInst ""  (formula "16")))
                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "4") (term "1,1,0,0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                     (rule "qeq_literals" (formula "4") (term "0,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                     (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "32"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (rule "add_zero_left" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "right ≥ j_9 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "left ≤ i_9 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "allLeft" (formula "28") (inst "t=j_9"))
                           (rule "replaceKnownSelect_taclet0020100_6" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00020100_8" (formula "28") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                           (rule "mul_literals" (formula "28") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                           (rule "allLeft" (formula "26") (inst "t=j_9"))
                           (rule "replaceKnownSelect_taclet0020100_6" (formula "26") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00020100_8" (formula "26") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "35"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                           (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "26") (term "0,0,1"))
                           (rule "leq_literals" (formula "26") (term "0,1"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                           (rule "polySimp_elimOne" (formula "38") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "35"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "qeq_literals" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "allLeft" (formula "28") (inst "t=i_9"))
                           (rule "replaceKnownSelect_taclet0020100_7" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020100_9" (formula "28") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "28") (term "1") (ifseqformula "30"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1"))
                           (rule "leq_literals" (formula "28") (term "0,1"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                           (rule "polySimp_elimOne" (formula "28") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "28") (ifseqformula "4"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "38"))
                           (rule "polySimp_addComm1" (formula "38") (term "0"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (rule "qeq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "40") (term "1") (ifseqformula "27"))
                           (rule "applyEq" (formula "20") (term "1,1,0,0,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "37") (term "1") (ifseqformula "26"))
                           (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "33") (term "1,1,0,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "33") (term "1,1,1,0,0,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,0"))
                           (rule "times_zero_1" (formula "27") (term "0"))
                           (rule "leq_literals" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "26"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "26"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "mul_literals" (formula "34") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "24"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "35"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "11"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "1,0"))
                           (rule "times_zero_1" (formula "11") (term "0"))
                           (rule "qeq_literals" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "26"))
                           (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "add_zero_left" (formula "28") (term "1,1,0,0"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,0"))
                           (rule "times_zero_1" (formula "27") (term "0"))
                           (rule "leq_literals" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "33"))
                           (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "32"))
                           (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "25"))
                           (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_or_antiSymm0" (formula "20") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1,0,1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0,1,0,0"))
                           (rule "add_zero_left" (formula "20") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,0,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "commute_or" (formula "26") (term "0,0"))
                           (rule "commute_or" (formula "20") (term "0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "castDel" (formula "20") (term "0,2,0"))
                           (rule "replaceKnownSelect_taclet0020100_7" (formula "20") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000020100_9" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "27"))
                           (rule "andLeft" (formula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0"))
                           (rule "add_zero_right" (formula "20") (term "0"))
                           (rule "leq_literals" (formula "20"))
                           (rule "closeFalse" (formula "20"))
                        )
                        (branch "left ≤ i_9 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_leqRight" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "allLeft" (formula "28") (inst "t=j_9"))
                           (rule "replaceKnownSelect_taclet0020100_6" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00020100_8" (formula "28") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "allLeft" (formula "21") (inst "t=i_9"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "32") (inst "t=i_9"))
                           (rule "replaceKnownSelect_taclet0020100_7" (formula "32") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100020100_9" (formula "32") (term "1,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "allLeft" (formula "21") (inst "t=j_9"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "33") (inst "t=j_9"))
                           (rule "replaceKnownSelect_taclet0020100_6" (formula "33") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00020100_8" (formula "33") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "38"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1"))
                           (rule "leq_literals" (formula "33") (term "0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "4"))
                           (rule "andLeft" (formula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "33"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "1,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0"))
                           (rule "add_zero_right" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                     )
                     (branch "right ≥ j_9 FALSE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "mul_literals" (formula "10") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "add_literals" (formula "10") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "31"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (rule "add_zero_left" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "18"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "left ≤ i_9 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "allLeft" (formula "30") (inst "t=i_9"))
                           (rule "replaceKnownSelect_taclet0020100_7" (formula "30") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010020100_9" (formula "30") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "22") (inst "t=i_9"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "31") (inst "t=j_9"))
                           (rule "replaceKnownSelect_taclet0020100_6" (formula "31") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10020100_8" (formula "31") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "31") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1"))
                           (rule "leq_literals" (formula "31") (term "0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "3"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "31"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0"))
                           (rule "add_zero_right" (formula "31") (term "0"))
                           (rule "leq_literals" (formula "31"))
                           (rule "closeFalse" (formula "31"))
                        )
                        (branch "left ≤ i_9 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_leqRight" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "allLeft" (formula "21") (inst "t=i_9"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "23") (inst "t=i_9"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "32") (inst "t=i_9"))
                           (rule "replaceKnownSelect_taclet0020100_7" (formula "32") (term "1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110020100_9" (formula "32") (term "1,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "allLeft" (formula "21") (inst "t=j_9"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "21") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1"))
                           (rule "leq_literals" (formula "21") (term "0,1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "35"))
                           (rule "andLeft" (formula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0"))
                           (rule "add_zero_right" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "closeFalse" (formula "21"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "27") (inst "sk=i_8"))
                     (rule "allRight" (formula "27") (inst "sk=j_8"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "29"))
                     (rule "orRight" (formula "29"))
                     (rule "inEqSimp_geqRight" (formula "28"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "28"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "12")))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (term "1,1,0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "leq_literals" (formula "3") (term "0,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                     (rule "mul_literals" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                     (rule "mul_literals" (formula "28") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "14")))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "29"))
                     (rule "times_zero_1" (formula "16") (term "0,0"))
                     (rule "add_zero_left" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "16"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "allLeft" (formula "28") (inst "t=i_8"))
                     (rule "replaceKnownSelect_taclet1020100_8" (formula "28") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "allLeft" (formula "20") (inst "t=i_8"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "left ≤ i_8 TRUE"
                        (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "allLeft" (formula "20") (inst "t=j_8"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allLeft" (formula "30") (inst "t=j_8"))
                        (rule "replaceKnownSelect_taclet1020100_6" (formula "30") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1020100_7" (formula "30") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1"))
                        (rule "leq_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                        (rule "andLeft" (formula "30"))
                        (rule "inEqSimp_homoInEq1" (formula "30"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                        (rule "add_literals" (formula "30") (term "1,1,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0"))
                        (rule "add_zero_right" (formula "30") (term "0"))
                        (rule "leq_literals" (formula "30"))
                        (rule "closeFalse" (formula "30"))
                     )
                     (branch "left ≤ i_8 FALSE"
                        (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "allLeft" (formula "19") (inst "t=i_8"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "19") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "21") (inst "t=j_8"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1"))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1"))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "21"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
               (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ -1 FALSE"
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "false_right" (formula "26"))
                  (rule "inEqSimp_geqRight" (formula "25"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
            )
         )
         (branch "if x_5 false"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
            (rule "tryEmpty" (formula "26") (term "1"))
            (rule "emptyModality" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "1,0,0,1"))
            (rule "andRight" (formula "26"))
            (branch "Case 1"
               (rule "andRight" (formula "26"))
               (branch "Case 1"
                  (rule "allRight" (formula "26") (inst "sk=i_7"))
                  (rule "orRight" (formula "26"))
                  (rule "orRight" (formula "26"))
                  (rule "allRight" (formula "28") (inst "sk=j_7"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "30"))
                  (rule "inEqSimp_leqRight" (formula "26"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "27"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "29"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "12")))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "13") (term "0,0"))
                  (rule "add_zero_left" (formula "13") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "14") (term "0,0"))
                  (rule "add_zero_left" (formula "14") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "allLeft" (formula "23") (inst "t=j_7"))
                  (rule "replaceKnownSelect_taclet001100_6" (formula "23") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_7" (formula "23") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "allLeft" (formula "24") (inst "t=i_7"))
                  (rule "replaceKnownSelect_taclet001100_8" (formula "24") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_9" (formula "24") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "allLeft" (formula "27") (inst "t=j_7"))
                  (rule "replaceKnownSelect_taclet001100_6" (formula "27") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_7" (formula "27") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "allLeft" (formula "28") (inst "t=i_7"))
                  (rule "replaceKnownSelect_taclet001100_8" (formula "28") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_9" (formula "28") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "allLeft" (formula "26") (inst "t=j_7"))
                  (rule "replaceKnownSelect_taclet001100_6" (formula "26") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_7" (formula "26") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                  (rule "allLeft" (formula "27") (inst "t=i_7"))
                  (rule "replaceKnownSelect_taclet001100_8" (formula "27") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001100_9" (formula "27") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                  (rule "cut_direct" (formula "23") (term "0"))
                  (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ j_7 TRUE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "26") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "23"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "cut_direct" (formula "24") (term "0"))
                     (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_7 TRUE"
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "24"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "27") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                        (rule "cut_direct" (formula "29") (term "0"))
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ j_7 TRUE"
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0"))
                           (rule "leq_literals" (formula "26") (term "0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "inEqSimp_contradEq7" (formula "27") (term "1") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                           (rule "leq_literals" (formula "27") (term "0,1"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "add_zero_left" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "7"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "22") (term "2,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "35") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "36") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "5"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,0"))
                           (rule "times_zero_1" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "applyEq" (formula "32") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "32") (term "1,1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_commuteGeq" (formula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "mul_literals" (formula "9") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ j_7 FALSE"
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_geqRight" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "8"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "applyEq" (formula "37") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "1,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "38") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "5"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "applyEq" (formula "35") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "23") (term "2,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "21") (term "1,1,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,0"))
                           (rule "times_zero_1" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0"))
                           (rule "qeq_literals" (formula "34") (term "0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "25") (term "1") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                           (rule "leq_literals" (formula "25") (term "0,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0"))
                           (rule "qeq_literals" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                           (rule "times_zero_1" (formula "14") (term "0,0"))
                           (rule "add_zero_left" (formula "14") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,0"))
                           (rule "times_zero_1" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_commuteGeq" (formula "32"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "add_zero_left" (formula "25") (term "1,0,0,0"))
                           (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "qeq_literals" (formula "21") (term "0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ i_7 FALSE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_leqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1"))
                        (rule "leq_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "8"))
                        (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "34") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "6"))
                        (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0"))
                        (rule "qeq_literals" (formula "33") (term "0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "33"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "qeq_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "applyEqRigid" (formula "26") (term "1,1,1,0,0") (ifseqformula "3"))
                        (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "1,1,0,0"))
                        (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "33"))
                        (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "30"))
                        (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "29"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_or_antiSymm0" (formula "22") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,1,0,1,0,0"))
                        (rule "add_zero_left" (formula "22") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,0,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "commute_or" (formula "24") (term "0,0"))
                        (rule "commute_or" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "castDel" (formula "22") (term "0,2,0"))
                        (rule "replaceKnownSelect_taclet001100_8" (formula "22") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet001100_9" (formula "22") (term "0"))
                        (rule "allLeft" (formula "23") (inst "t=j_7"))
                        (rule "replaceKnownSelect_taclet001100_6" (formula "23") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet001100_7" (formula "23") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "23") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                        (rule "true_left" (formula "23"))
                        (rule "cut_direct" (formula "24") (term "0"))
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ j_7 TRUE"
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "4"))
                           (rule "andLeft" (formula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0"))
                           (rule "add_zero_right" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "closeFalse" (formula "21"))
                        )
                        (branch "CUT: ThreeWayQs.great@anon_heap_split«anonHeapFunction» ≥ j_7 FALSE"
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_geqRight" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
                           (rule "applyEq" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "7"))
                           (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "2,1,1,0") (ifseqformula "7"))
                           (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "21"))
                           (rule "andLeft" (formula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                     )
                  )
                  (branch "CUT: ThreeWayQs.less@anon_heap_split«anonHeapFunction» ≤ j_7 FALSE"
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_leqRight" (formula "39"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "times_zero_1" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "36") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "32") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "19") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "32") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,0"))
                     (rule "times_zero_1" (formula "5") (term "0"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "7"))
                     (rule "andLeft" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "26"))
                  (branch "Case 1"
                     (rule "allRight" (formula "26") (inst "sk=i_6"))
                     (rule "orRight" (formula "26"))
                     (rule "orRight" (formula "26"))
                     (rule "allRight" (formula "28") (inst "sk=j_6"))
                     (rule "orRight" (formula "28"))
                     (rule "orRight" (formula "28"))
                     (rule "inEqSimp_geqRight" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "27"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "30"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "11")))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                     (rule "mul_literals" (formula "6") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "add_zero_left" (formula "14") (term "0"))
                     (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")) (ifInst ""  (formula "13")))
                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "4") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,1,0,0") (ifseqformula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0,0,1,0,0"))
                     (rule "leq_literals" (formula "4") (term "0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")))
                     (rule "elementOfUnion" (formula "4") (term "0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "4") (term "0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")))
                     (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "right ≥ j_6 TRUE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "allLeft" (formula "18") (inst "t=i_6"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0,0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "18") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "allLeft" (formula "27") (inst "t=i_6"))
                        (rule "replaceKnownSelect_taclet0101100_7" (formula "27") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0101100_8" (formula "27") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "allLeft" (formula "18") (inst "t=j_6"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,0"))
                        (rule "leq_literals" (formula "18") (term "0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "allLeft" (formula "28") (inst "t=j_6"))
                        (rule "replaceKnownSelect_taclet0101100_6" (formula "28") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00101100_9" (formula "28") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "28"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "right ≥ j_6 FALSE"
                        (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
                        (rule "times_zero_1" (formula "15") (term "0,0"))
                        (rule "add_zero_left" (formula "15") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "allLeft" (formula "18") (inst "t=i_6"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,0,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "18") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "allLeft" (formula "27") (inst "t=i_6"))
                        (rule "replaceKnownSelect_taclet0101100_7" (formula "27") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0101100_8" (formula "27") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "allLeft" (formula "18") (inst "t=j_6"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1"))
                        (rule "leq_literals" (formula "18") (term "0,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,0"))
                        (rule "leq_literals" (formula "18") (term "0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "26") (inst "sk=i_5"))
                     (rule "orRight" (formula "26"))
                     (rule "orRight" (formula "26"))
                     (rule "allRight" (formula "28") (inst "sk=j_5"))
                     (rule "orRight" (formula "28"))
                     (rule "orRight" (formula "28"))
                     (rule "inEqSimp_leqRight" (formula "26"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "27"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "11")))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (term "1,1,0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "leq_literals" (formula "3") (term "0,1,1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "13")))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "elementOfUnion" (formula "3") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "15") (term "0,0"))
                     (rule "add_zero_left" (formula "15") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "allLeft" (formula "28") (inst "t=i_5"))
                     (rule "replaceKnownSelect_taclet1101100_8" (formula "28") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "allLeft" (formula "20") (inst "t=i_5"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "left ≤ i_5 TRUE"
                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "16") (term "0,0"))
                        (rule "add_zero_left" (formula "16") (term "0"))
                        (rule "allLeft" (formula "20") (inst "t=j_5"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allLeft" (formula "30") (inst "t=j_5"))
                        (rule "replaceKnownSelect_taclet1101100_6" (formula "30") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1101100_7" (formula "30") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "30") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1"))
                        (rule "leq_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "2"))
                        (rule "andLeft" (formula "30"))
                        (rule "inEqSimp_homoInEq1" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                        (rule "add_literals" (formula "30") (term "1,1,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0"))
                        (rule "add_zero_right" (formula "30") (term "0"))
                        (rule "leq_literals" (formula "30"))
                        (rule "closeFalse" (formula "30"))
                     )
                     (branch "left ≤ i_5 FALSE"
                        (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "allLeft" (formula "19") (inst "t=i_5"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "19") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "21") (inst "t=j_5"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "21") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,0"))
                        (rule "leq_literals" (formula "21") (term "0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "21"))
                        (rule "andLeft" (formula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "26") (inst "sk=f_0"))
               (rule "allRight" (formula "26") (inst "sk=o_0"))
               (rule "orRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "orRight" (formula "26"))
               (rule "eqSymm" (formula "29") (term "0,0,0,1"))
               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
               (rule "eqSymm" (formula "32"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
               (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "Exceptional Post (split)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (split)"
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "2")) (ifInst ""  (formula "10")) (ifInst ""  (formula "3")))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0,1,1"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
      (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0"))
      (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "nnf_imp2or" (formula "11") (term "0,0"))
      (rule "nnf_imp2or" (formula "11") (term "0,1"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "11") (term "0,1,0,0"))
      (rule "nnf_imp2or" (formula "11") (term "0,1,0,1"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,0,1"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,0,1"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,1"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,1"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,1"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,1"))
      (rule "andRight" (formula "11"))
      (branch "Case 1"
         (rule "allRight" (formula "11") (inst "sk=i_4"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "allRight" (formula "13") (inst "sk=j_4"))
         (rule "orRight" (formula "13"))
         (rule "orRight" (formula "13"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "15"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "4") (term "0,0"))
         (rule "mul_literals" (formula "4") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
         (rule "times_zero_1" (formula "11") (term "0,0"))
         (rule "add_zero_left" (formula "11") (term "0"))
         (rule "allLeft" (formula "15") (inst "t=i_4"))
         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0,0") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0,0"))
         (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "6"))
         (rule "qeq_literals" (formula "15") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "allLeft" (formula "15") (inst "t=j_4"))
         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_contradInEq0" (formula "15") (term "0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
         (rule "leq_literals" (formula "15") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0"))
         (rule "leq_literals" (formula "15") (term "0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "15"))
         (rule "andLeft" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "11") (inst "sk=i_3"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "allRight" (formula "13") (inst "sk=j_3"))
         (rule "orRight" (formula "13"))
         (rule "orRight" (formula "13"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
         (rule "mul_literals" (formula "7") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "7"))
         (rule "times_zero_1" (formula "12") (term "0,0"))
         (rule "add_zero_left" (formula "12") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "allLeft" (formula "17") (inst "t=i_3"))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0,0") (ifseqformula "6"))
         (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0") (ifseqformula "5"))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "allLeft" (formula "17") (inst "t=j_3"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
         (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
         (rule "leq_literals" (formula "17") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0"))
         (rule "leq_literals" (formula "17") (term "0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "17"))
         (rule "andLeft" (formula "3"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,1,0"))
         (rule "times_zero_1" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
   )
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_geqRight" (formula "9"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
   (rule "polySimp_elimOne" (formula "1") (term "1"))
   (rule "methodCallEmpty" (formula "11") (term "1"))
   (rule "tryEmpty" (formula "11") (term "1"))
   (rule "emptyModality" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andRight" (formula "11"))
   (branch "Case 1"
      (rule "allRight" (formula "11") (inst "sk=i_2"))
      (rule "orRight" (formula "11"))
      (rule "orRight" (formula "11"))
      (rule "allRight" (formula "13") (inst "sk=j_2"))
      (rule "orRight" (formula "13"))
      (rule "orRight" (formula "14"))
      (rule "orRight" (formula "13"))
      (rule "inEqSimp_geqRight" (formula "12"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_leqRight" (formula "12"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_geqRight" (formula "16"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_leqRight" (formula "16"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_geqRight" (formula "16"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "inEqSimp_leqRight" (formula "16"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
      (rule "add_literals" (formula "2") (term "0,0,0"))
      (rule "add_zero_left" (formula "2") (term "0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
      (rule "polySimp_elimOne" (formula "5") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1"))
      (rule "polySimp_rightDist" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "polySimp_elimOne" (formula "2") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
      (rule "times_zero_1" (formula "11") (term "0,0"))
      (rule "add_zero_left" (formula "11") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
      (rule "polySimp_elimOne" (formula "2") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
      (rule "applyEq" (formula "9") (term "1") (ifseqformula "2"))
      (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,0"))
      (rule "times_zero_1" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "16") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "1"))
      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "3"))
      (rule "andLeft" (formula "5"))
      (rule "inEqSimp_homoInEq1" (formula "5"))
      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "1,1,0"))
      (rule "times_zero_1" (formula "5") (term "1,0"))
      (rule "add_zero_right" (formula "5") (term "0"))
      (rule "leq_literals" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
   (branch "Case 2"
      (rule "andRight" (formula "11"))
      (branch "Case 1"
         (rule "allRight" (formula "11") (inst "sk=i_1"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "allRight" (formula "13") (inst "sk=j_1"))
         (rule "orRight" (formula "13"))
         (rule "orRight" (formula "13"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "12"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "15"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
         (rule "polySimp_elimOne" (formula "5") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
         (rule "mul_literals" (formula "5") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
         (rule "times_zero_1" (formula "11") (term "0,0"))
         (rule "add_zero_left" (formula "11") (term "0"))
         (rule "allLeft" (formula "15") (inst "t=i_1"))
         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0,0") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0,0"))
         (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0") (ifseqformula "4"))
         (rule "qeq_literals" (formula "15") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "allLeft" (formula "15") (inst "t=j_1"))
         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "15") (term "0,0,1"))
         (rule "leq_literals" (formula "15") (term "0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0"))
         (rule "leq_literals" (formula "15") (term "0,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "11") (inst "sk=i_0"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "allRight" (formula "13") (inst "sk=j_0"))
         (rule "orRight" (formula "13"))
         (rule "orRight" (formula "13"))
         (rule "inEqSimp_leqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_leqRight" (formula "14"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1"))
         (rule "polySimp_elimOne" (formula "5") (term "1"))
         (rule "allLeft" (formula "16") (inst "t=i_0"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0,0,0") (ifseqformula "7"))
         (rule "qeq_literals" (formula "16") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0,0") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "allLeft" (formula "16") (inst "t=j_0"))
         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0"))
         (rule "inEqSimp_contradInEq0" (formula "16") (term "0,0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
         (rule "leq_literals" (formula "16") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
         (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "16") (term "0,0,1"))
         (rule "leq_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "16"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
