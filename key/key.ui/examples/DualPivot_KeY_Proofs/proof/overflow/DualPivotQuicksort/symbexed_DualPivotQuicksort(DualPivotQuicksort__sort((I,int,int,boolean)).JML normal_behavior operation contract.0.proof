\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 15:52:28 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=30000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 15:52:28 CET 2019
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:sort([I,int,int,boolean)].JML normal_behavior operation contract.0
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:sort([I,int,int,boolean)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "1" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "5773425")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,left,right,leftmost,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "5") (term "0,0"))
(rule "translateJavaAddInt" (formula "5") (term "0"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "5") (term "1,0,1,0"))
(rule "polySimp_elimSub" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_elimSub" (formula "5") (term "0,0,0,0,0,0"))
(rule "polySimp_elimSub" (formula "5") (term "0,0,0,2,0"))
(rule "polySimp_elimSub" (formula "5") (term "0,0,0,1,0"))
(rule "polySimp_elimSub" (formula "5") (term "1,0,2,0"))
(rule "polySimp_addComm0" (formula "5") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,0,2,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
(rule "polySimp_addComm0" (formula "5") (term "1,0,2,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
(rule "polySimp_addComm0" (formula "5") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "14") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "commute_and_2" (formula "6") (term "0,0"))
(rule "commute_and_2" (formula "12") (term "0,0"))
(rule "commute_and_2" (formula "11") (term "0,0"))
(rule "commute_and_2" (formula "12") (term "0,0,1,0"))
(rule "commute_and" (formula "6") (term "0,0,0"))
(rule "commute_and_2" (formula "6") (term "0,0"))
(rule "commute_and_2" (formula "11") (term "0,0,1,0"))
(rule "commute_and" (formula "12") (term "0,0,0"))
(rule "commute_and" (formula "11") (term "0,0,0"))
(rule "commute_and_2" (formula "11") (term "0,0"))
(rule "commute_and" (formula "12") (term "0,0,0,1,0"))
(rule "commute_and" (formula "11") (term "0,0,0,1,0"))
(rule "commute_and_2" (formula "11") (term "0,0,1,0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
 (builtin "One Step Simplification" (formula "14"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "length_1"))
(rule "compound_addition_1" (formula "14") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
(rule "assignmentSubtractionInt" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "translateJavaSubInt" (formula "14") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_elimSub" (formula "14") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_addComm0" (formula "14") (term "1,0,1,0"))
(rule "assignmentAdditionInt" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "14") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
(rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
(rule "greater_than_comparison_simple" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "arrayLengthNotNegative" (formula "10") (term "1"))
(rule "arrayLengthIsAShort" (formula "11") (term "1"))
(rule "ifElseSplit" (formula "16"))
(branch "if x_1 true"
    (builtin "One Step Simplification" (formula "1"))
    (builtin "One Step Simplification" (formula "17"))
    (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_prepare_indices,exc_1,heapAfter_prepare_indices,anon_heap_prepare_indices") (contract "DualPivotQuicksort[DualPivotQuicksort::prepare_indices([I,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (prepare_indices)"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,0"))
      (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=DualPivotQuicksort_e5_0"))
      (rule "applyEq" (formula "21") (term "0,2,0") (ifseqformula "27"))
      (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "inEqSimp_commuteGeq" (formula "21"))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfArrayRange" (formula "27") (term "1,0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "21") (term "0,2,1") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=DualPivotQuicksort_e4_0"))
      (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "26"))
      (rule "applyEq" (formula "21") (term "0,2,0") (ifseqformula "26"))
      (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
      (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_commuteGeq" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "elementOfUnion" (formula "26") (term "0,0"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfArrayRange" (formula "26") (term "1,0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "applyEqReverse" (formula "21") (term "0,2,1") (ifseqformula "26"))
      (rule "applyEqReverse" (formula "20") (term "0,2,1") (ifseqformula "26"))
      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
      (rule "hideAuxiliaryEq" (formula "26"))
      (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=DualPivotQuicksort_e3_0"))
      (rule "applyEq" (formula "24") (term "1") (ifseqformula "25"))
      (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "25"))
      (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "25"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_commuteGeq" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfArrayRange" (formula "25") (term "1,0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "applyEqReverse" (formula "20") (term "0,2,1") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "19") (term "0,2,1") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
      (rule "hideAuxiliaryEq" (formula "25"))
      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DualPivotQuicksort_e2_0"))
      (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "24"))
      (rule "applyEq" (formula "23") (term "1") (ifseqformula "24"))
      (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "24"))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "inEqSimp_commuteGeq" (formula "18"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfArrayRange" (formula "24") (term "1,0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
      (rule "applyEqReverse" (formula "19") (term "0,2,1") (ifseqformula "24"))
      (rule "applyEqReverse" (formula "18") (term "0,2,1") (ifseqformula "24"))
      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
      (rule "hideAuxiliaryEq" (formula "24"))
      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=DualPivotQuicksort_e1_0"))
      (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "23"))
      (rule "applyEq" (formula "22") (term "1") (ifseqformula "23"))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "elementOfUnion" (formula "23") (term "0,0"))
      (rule "elementOfArrayRange" (formula "23") (term "1,0,0") (inst "iv=iv"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0"))
      (rule "elementOfSingleton" (formula "23") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "18") (term "0,2,1") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "inEqSimp_commuteGeq" (formula "22"))
      (rule "elementOfUnion" (formula "21") (term "0,0"))
      (rule "elementOfArrayRangeConcrete" (formula "21") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "21") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
      (rule "elementOfUnion" (formula "21") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
      (rule "elementOfUnion" (formula "21") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
      (rule "elementOfUnion" (formula "21") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
      (rule "elementOfSingleton" (formula "21") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "33")))
      (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_1"))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "20"))
      (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")) (ifInst ""  (formula "3")))
      (rule "inEqSimp_commuteGeq" (formula "21"))
      (rule "elementOfUnion" (formula "20") (term "0,0"))
      (rule "elementOfArrayRangeConcrete" (formula "20") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "20") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
      (rule "elementOfUnion" (formula "20") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
      (rule "elementOfUnion" (formula "20") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
      (rule "elementOfUnion" (formula "20") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
      (rule "elementOfSingleton" (formula "20") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
      (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_2"))
      (rule "applyEq" (formula "22") (term "0") (ifseqformula "19"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")) (ifInst ""  (formula "3")))
      (rule "inEqSimp_commuteGeq" (formula "20"))
      (rule "elementOfUnion" (formula "19") (term "0,0"))
      (rule "elementOfArrayRangeConcrete" (formula "19") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")))
      (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")))
      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_3"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
      (rule "inEqSimp_commuteGeq" (formula "19"))
      (rule "elementOfUnion" (formula "18") (term "0,0"))
      (rule "elementOfArrayRangeConcrete" (formula "18") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "18") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
      (rule "elementOfUnion" (formula "18") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
      (rule "elementOfUnion" (formula "18") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
      (rule "elementOfUnion" (formula "18") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
      (rule "elementOfSingleton" (formula "18") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")))
      (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_4"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
      (rule "elementOfUnion" (formula "19") (term "0,0"))
      (rule "elementOfArrayRangeConcrete" (formula "19") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
      (rule "elementOfUnion" (formula "19") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
      (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
      (rule "commute_and_2" (formula "33") (term "0,0"))
      (rule "commute_and_2" (formula "34") (term "0,0"))
      (rule "commute_and_2" (formula "35") (term "0,0"))
      (rule "commute_and_2" (formula "34") (term "0,0,1,0"))
      (rule "commute_and_2" (formula "33") (term "0,0,1,0"))
      (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_3"))
      (rule "commute_and" (formula "33") (term "0,0,0"))
      (rule "commute_and_2" (formula "33") (term "0,0"))
      (rule "commute_and" (formula "34") (term "0,0,0"))
      (rule "commute_and" (formula "35") (term "0,0,0"))
      (rule "commute_and_2" (formula "35") (term "0,0"))
      (rule "commute_and" (formula "34") (term "0,0,0,1,0"))
      (rule "commute_and" (formula "33") (term "0,0,0,1,0"))
      (rule "commute_and_2" (formula "33") (term "0,0,1,0"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "38") (term "1"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "var"))
      (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_4"))
      (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
      (rule "assignment_read_static_attribute" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "replaceKnownSelect_taclet00_8" (formula "38") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "38") (term "0,1,0"))
      (rule "assignment_array2" (formula "38"))
      (branch "Normal Execution (x_arr != null)"
          (builtin "One Step Simplification" (formula "38"))
         (rule "replaceKnownSelect_taclet00_14" (formula "38") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_1"))
         (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_1"))
         (rule "assignment" (formula "38") (term "1"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_5"))
         (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
         (rule "assignment_read_static_attribute" (formula "38") (term "1"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "replaceKnownSelect_taclet00_6" (formula "38") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "38") (term "0,1,0"))
         (rule "assignment_array2" (formula "38"))
         (branch "Normal Execution (x_arr_1 != null)"
             (builtin "One Step Simplification" (formula "38"))
            (rule "replaceKnownSelect_taclet00_13" (formula "38") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "38") (term "1"))
            (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_2"))
            (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
            (rule "variableDeclarationAssign" (formula "38") (term "1"))
            (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_2"))
            (rule "assignment" (formula "38") (term "1"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "variableDeclarationAssign" (formula "38") (term "1"))
            (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_6"))
            (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
            (rule "assignment_read_static_attribute" (formula "38") (term "1"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "replaceKnownSelect_taclet00_4" (formula "38") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "38") (term "0,1,0"))
            (rule "assignment_array2" (formula "38"))
            (branch "Normal Execution (x_arr_2 != null)"
                (builtin "One Step Simplification" (formula "38"))
               (rule "replaceKnownSelect_taclet00_12" (formula "38") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "38") (term "1"))
               (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_3"))
               (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
               (rule "variableDeclarationAssign" (formula "38") (term "1"))
               (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_3"))
               (rule "assignment" (formula "38") (term "1"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "variableDeclarationAssign" (formula "38") (term "1"))
               (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_7"))
               (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
               (rule "assignment_read_static_attribute" (formula "38") (term "1"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "replaceKnownSelect_taclet00_2" (formula "38") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "38") (term "0,1,0"))
               (rule "assignment_array2" (formula "38"))
               (branch "Normal Execution (x_arr_3 != null)"
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replaceKnownSelect_taclet00_11" (formula "38") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "38") (term "1"))
                  (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_4"))
                  (rule "eval_order_array_access5" (formula "38") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_4"))
                  (rule "variableDeclarationAssign" (formula "38") (term "1"))
                  (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_4"))
                  (rule "assignment" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "variableDeclarationAssign" (formula "38") (term "1"))
                  (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_8"))
                  (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
                  (rule "assignment_read_static_attribute" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replaceKnownSelect_taclet00_0" (formula "38") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "38") (term "0,1,0"))
                  (rule "assignment_array2" (formula "38"))
                  (branch "Normal Execution (x_arr_4 != null)"
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "replaceKnownSelect_taclet00_10" (formula "38") (term "0,1,0"))
                     (rule "methodCallWithAssignmentWithinClass" (formula "38") (term "1") (inst "#v0=x_4"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_9"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "e1"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "e2"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "e3"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "e4"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "e5"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "methodBodyExpand" (formula "38") (term "1") (newnames "heapBefore_allLess,savedHeapBefore_allLess"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "returnUnfold" (formula "38") (term "1") (inst "#v0=x_10"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_10"))
                     (rule "compound_assignment_3_nonsimple" (formula "38") (term "1"))
                     (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x_11"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_11"))
                     (rule "compound_assignment_2" (formula "38") (term "1") (inst "#v=x_12"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_12"))
                     (rule "compound_assignment_3_nonsimple" (formula "38") (term "1"))
                     (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x_13"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_13"))
                     (rule "compound_assignment_2" (formula "38") (term "1") (inst "#v=x_14"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_14"))
                     (rule "compound_assignment_3_nonsimple" (formula "38") (term "1"))
                     (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x_15"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_15"))
                     (rule "compound_assignment_2" (formula "38") (term "1") (inst "#v=x_16"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_16"))
                     (rule "less_than_comparison_simple" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "compound_assignment_1_new" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "ifElseSplit" (formula "38"))
                     (branch "if x_15 true"
                         (builtin "One Step Simplification" (formula "39"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "39") (term "1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "compound_assignment_1_new" (formula "39") (term "1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "ifElseSplit" (formula "39"))
                        (branch "if x_13 true"
                            (builtin "One Step Simplification" (formula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "39") (term "1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "compound_assignment_1_new" (formula "39") (term "1"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "ifElseSplit" (formula "39"))
                           (branch "if x_11 true"
                               (builtin "One Step Simplification" (formula "40"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "39") (term "1"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "methodCallReturn" (formula "39") (term "1"))
                              (rule "assignment" (formula "39") (term "1"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "methodCallEmpty" (formula "39") (term "1"))
                              (rule "blockEmpty" (formula "39") (term "1"))
                              (rule "assignment" (formula "39") (term "1"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "blockEmpty" (formula "39") (term "1"))
                              (rule "ifElseSplit" (formula "39"))
                              (branch "if x_3 true"
                                  (builtin "One Step Simplification" (formula "40"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_3 false"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "1"))
                                  (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_insertionSort_3,exc_9,heapAfter_insertionSort_3,anon_heap_insertionSort_3") (contract "DualPivotQuicksort[DualPivotQuicksort::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                 (branch "Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=DualPivotQuicksort_great_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfArrayRange" (formula "44") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfArrayRange" (formula "44") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfSingleton" (formula "44") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=DualPivotQuicksort_less_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfArrayRange" (formula "43") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfArrayRange" (formula "43") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfSingleton" (formula "43") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "commute_and_2" (formula "39") (term "0,0"))
                                    (rule "commute_and_2" (formula "40") (term "0,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "39") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "40") (term "0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "46") (term "1"))
                                    (rule "commute_and" (formula "39") (term "0,0,0"))
                                    (rule "commute_and" (formula "40") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "40") (term "0,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "39") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "40") (term "0,0,0,1,0"))
                                    (rule "commute_and_2" (formula "40") (term "0,0,1,0"))
                                    (rule "tryEmpty" (formula "46") (term "1"))
                                    (rule "emptyModality" (formula "46") (term "1"))
                                    (rule "andRight" (formula "46"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "closeTrue" (formula "46"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "allRight" (formula "46") (inst "sk=f_0"))
                                       (rule "allRight" (formula "46") (inst "sk=o_0"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "eqSymm" (formula "53") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (term "0,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_subsumption0" (formula "26") (term "1,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "19"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,0"))
                                       (rule "times_zero_1" (formula "22") (term "0"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "23") (term "1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (term "1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "19") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "20") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "20"))
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                                       (rule "hideAuxiliaryEq" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "8") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "commute_and" (formula "55"))
                                       (rule "commute_and" (formula "54"))
                                       (rule "commute_and" (formula "53"))
                                       (rule "commute_and" (formula "52"))
                                       (rule "commute_and" (formula "51"))
                                       (rule "commute_and" (formula "50"))
                                       (rule "commute_and" (formula "49"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "7") (term "1,1,0"))
                                       (branch "inInt(left * -1 + right) TRUE"
                                          (rule "replace_known_left" (formula "2") (term "0,0,2,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                                          (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "44") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "inInt(left * -1 + right) FALSE"
                                          (rule "replace_known_right" (formula "2") (term "0,1,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                          (rule "replace_known_right" (formula "7") (term "0,0,2,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "48")))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "43") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "38"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0") (ifseqformula "38"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0") (ifseqformula "17"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "close" (formula "41") (ifseqformula "40"))
                                 )
                                 (branch "Pre (insertionSort)"
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                    (rule "wellFormedAnonEQ" (formula "39") (term "0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1") (ifseqformula "17"))
                                    (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "2")) (ifInst ""  (formula "16")))
                                    (rule "closeTrue" (formula "39"))
                                 )
                              )
                           )
                           (branch "if x_11 false"
                               (builtin "One Step Simplification" (formula "40"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_13 false"
                            (builtin "One Step Simplification" (formula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_15 false"
                         (builtin "One Step Simplification" (formula "39"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "less_than_comparison_simple" (formula "39") (term "1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "blockEmpty" (formula "39") (term "1"))
                        (rule "compound_assignment_1_new" (formula "39") (term "1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "ifElseSplit" (formula "39"))
                        (branch "if x_13 true"
                            (builtin "One Step Simplification" (formula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "assignment" (formula "40") (term "1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "compound_assignment_1_new" (formula "40") (term "1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "ifElseSplit" (formula "40"))
                           (branch "if x_11 true"
                               (builtin "One Step Simplification" (formula "41"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "40") (term "1"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "methodCallReturn" (formula "40") (term "1"))
                              (rule "assignment" (formula "40") (term "1"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "methodCallEmpty" (formula "40") (term "1"))
                              (rule "blockEmpty" (formula "40") (term "1"))
                              (rule "assignment" (formula "40") (term "1"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "blockEmpty" (formula "40") (term "1"))
                              (rule "ifElseSplit" (formula "40"))
                              (branch "if x_3 true"
                                  (builtin "One Step Simplification" (formula "41"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_3 false"
                                  (builtin "One Step Simplification" (formula "41"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                  (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_insertionSort_2,exc_8,heapAfter_insertionSort_2,anon_heap_insertionSort_2") (contract "DualPivotQuicksort[DualPivotQuicksort::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                 (branch "Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "39"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=DualPivotQuicksort_less_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfArrayRange" (formula "44") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfArrayRange" (formula "44") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfSingleton" (formula "44") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=DualPivotQuicksort_great_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfArrayRange" (formula "44") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfArrayRange" (formula "44") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfUnion" (formula "44") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "elementOfSingleton" (formula "44") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "commute_and_2" (formula "40") (term "0,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "40") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "47") (term "1"))
                                    (rule "commute_and" (formula "40") (term "0,0,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0"))
                                    (rule "commute_and" (formula "43") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "40") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0,1,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                    (rule "tryEmpty" (formula "47") (term "1"))
                                    (rule "emptyModality" (formula "47") (term "1"))
                                    (rule "andRight" (formula "47"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "allRight" (formula "47") (inst "sk=f_1"))
                                       (rule "allRight" (formula "47") (inst "sk=o_1"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "47"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "eqSymm" (formula "54") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                       (rule "mul_literals" (formula "34") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "26") (term "1,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (term "0,0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_1_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "20"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "23") (term "1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "20") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "21"))
                                       (rule "hideAuxiliaryEq" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "nnf_imp2or" (formula "9") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "commute_and" (formula "55"))
                                       (rule "commute_and" (formula "54"))
                                       (rule "commute_and" (formula "53"))
                                       (rule "commute_and" (formula "52"))
                                       (rule "commute_and" (formula "51"))
                                       (rule "commute_and" (formula "50"))
                                       (rule "commute_and" (formula "49"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "8") (term "0,2,0"))
                                       (branch "inInt(left * -1 + right) TRUE"
                                          (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                                          (rule "replace_known_left" (formula "9") (term "0,1,0,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
                                          (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "44") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_1 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_1 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "inInt(left * -1 + right) FALSE"
                                          (rule "replace_known_right" (formula "3") (term "0,1,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                          (rule "replace_known_right" (formula "8") (term "0,1,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "48")))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_imp2or" (formula "43") (term "1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_1 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_1 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "39"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0") (ifseqformula "39"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0") (ifseqformula "18"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "close" (formula "42") (ifseqformula "41"))
                                 )
                                 (branch "Pre (insertionSort)"
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")))
                                    (rule "wellFormedAnonEQ" (formula "40") (term "0") (ifseqformula "18"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "3")) (ifInst ""  (formula "17")))
                                    (rule "closeTrue" (formula "40"))
                                 )
                              )
                           )
                           (branch "if x_11 false"
                               (builtin "One Step Simplification" (formula "41"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_13 false"
                            (builtin "One Step Simplification" (formula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "40") (term "1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "blockEmpty" (formula "40") (term "1"))
                           (rule "compound_assignment_1_new" (formula "40") (term "1"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "ifElseSplit" (formula "40"))
                           (branch "if x_11 true"
                               (builtin "One Step Simplification" (formula "41"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "assignment" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "methodCallReturn" (formula "41") (term "1"))
                              (rule "assignment" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "methodCallEmpty" (formula "41") (term "1"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                              (rule "assignment" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                              (rule "ifElseSplit" (formula "41"))
                              (branch "if x_3 true"
                                  (builtin "One Step Simplification" (formula "42"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_3 false"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "1"))
                                  (builtin "Use Operation Contract" (formula "41") (newnames "heapBefore_insertionSort_1,exc_7,heapAfter_insertionSort_1,anon_heap_insertionSort_1") (contract "DualPivotQuicksort[DualPivotQuicksort::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                 (branch "Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "43"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "45"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=DualPivotQuicksort_less_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfArrayRange" (formula "45") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfArrayRange" (formula "45") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfSingleton" (formula "45") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "45"))
                                    (rule "hideAuxiliaryEq" (formula "45"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=DualPivotQuicksort_great_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfArrayRange" (formula "45") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfArrayRange" (formula "45") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfUnion" (formula "45") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "45") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "elementOfSingleton" (formula "45") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "45"))
                                    (rule "hideAuxiliaryEq" (formula "45"))
                                    (rule "commute_and_2" (formula "41") (term "0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0"))
                                    (rule "commute_and_2" (formula "44") (term "0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "41") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "48") (term "1"))
                                    (rule "commute_and" (formula "41") (term "0,0,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and" (formula "43") (term "0,0,0"))
                                    (rule "commute_and" (formula "44") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "44") (term "0,0"))
                                    (rule "commute_and" (formula "43") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0,1,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0,1,0"))
                                    (rule "tryEmpty" (formula "48") (term "1"))
                                    (rule "emptyModality" (formula "48") (term "1"))
                                    (rule "andRight" (formula "48"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "closeTrue" (formula "48"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "allRight" (formula "48") (inst "sk=f_2"))
                                       (rule "allRight" (formula "48") (inst "sk=o_2"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "eqSymm" (formula "55") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (term "1,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_2_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "21"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "25"))
                                       (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,0"))
                                       (rule "times_zero_1" (formula "25") (term "0"))
                                       (rule "qeq_literals" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (term "1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "23") (term "1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "21") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "22") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "commute_and" (formula "55"))
                                       (rule "commute_and" (formula "54"))
                                       (rule "commute_and" (formula "53"))
                                       (rule "commute_and" (formula "52"))
                                       (rule "commute_and" (formula "51"))
                                       (rule "commute_and" (formula "50"))
                                       (rule "commute_and" (formula "49"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "9") (term "1,1,0"))
                                       (branch "inInt(left * -1 + right) TRUE"
                                          (rule "replace_known_left" (formula "10") (term "0,0,2,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
                                          (rule "replace_known_left" (formula "4") (term "0,0,2,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                          (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_2 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_2 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "inInt(left * -1 + right) FALSE"
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                          (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "48")))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_2 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_2 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "43"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "40"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0") (ifseqformula "19"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "notLeft" (formula "41"))
                                    (rule "close" (formula "43") (ifseqformula "42"))
                                 )
                                 (branch "Pre (insertionSort)"
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")))
                                    (rule "wellFormedAnonEQ" (formula "41") (term "0") (ifseqformula "19"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "18")) (ifInst ""  (formula "5")))
                                    (rule "closeTrue" (formula "41"))
                                 )
                              )
                           )
                           (branch "if x_11 false"
                               (builtin "One Step Simplification" (formula "41"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "less_than_comparison_simple" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                              (rule "methodCallReturn" (formula "41") (term "1"))
                              (rule "assignment" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "methodCallEmpty" (formula "41") (term "1"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                              (rule "assignment" (formula "41") (term "1"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "blockEmpty" (formula "41") (term "1"))
                              (rule "ifElseSplit" (formula "41"))
                              (branch "if x_3 true"
                                  (builtin "One Step Simplification" (formula "42"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "methodCallUnfoldArguments" (formula "42") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_5"))
                                 (rule "assignment" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_6"))
                                 (rule "assignment" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_7"))
                                 (rule "assignment" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_8"))
                                 (rule "eval_order_array_access5" (formula "42") (term "1") (inst "#ar1=x_arr") (inst "#v1=x"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr_5"))
                                 (rule "assignment" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_17"))
                                 (rule "activeUseStaticFieldReadAccess" (formula "42") (term "1"))
                                 (rule "assignment_read_static_attribute" (formula "42") (term "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "42") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "42") (term "0,1,0"))
                                 (rule "assignment_array2" (formula "42"))
                                 (branch "Normal Execution (x_arr_5 != null)"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "replaceKnownSelect_taclet00_13" (formula "42") (term "0,1,0"))
                                    (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                    (rule "variableDeclaration" (formula "42") (term "1") (newnames "var_9"))
                                    (rule "eval_order_array_access5" (formula "42") (term "1") (inst "#ar1=x_arr") (inst "#v1=x"))
                                    (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                    (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr_6"))
                                    (rule "assignment" (formula "42") (term "1"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                    (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_18"))
                                    (rule "activeUseStaticFieldReadAccess" (formula "42") (term "1"))
                                    (rule "assignment_read_static_attribute" (formula "42") (term "1"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "replaceKnownSelect_taclet00_2" (formula "42") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "42") (term "0,1,0"))
                                    (rule "assignment_array2" (formula "42"))
                                    (branch "Normal Execution (x_arr_6 != null)"
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "replaceKnownSelect_taclet00_11" (formula "42") (term "0,1,0"))
                                        (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_split,exc_3,heapAfter_split,anon_heap_split") (contract "DualPivotQuicksort[DualPivotQuicksort::split([I,int,int,int,int)].JML normal_behavior operation contract.0"))
                                       (branch "Post (split)"
                                           (builtin "One Step Simplification" (formula "44"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "44"))
                                          (rule "andLeft" (formula "45"))
                                          (rule "andLeft" (formula "46"))
                                          (rule "andLeft" (formula "47"))
                                          (rule "andLeft" (formula "48"))
                                          (rule "andLeft" (formula "49"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "52"))
                                          (rule "andLeft" (formula "53"))
                                          (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "21"))
                                          (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0,0") (ifseqformula "21"))
                                          (rule "translateJavaSubInt" (formula "43") (term "1,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "47") (term "0,0,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "48") (term "1"))
                                          (rule "translateJavaSubInt" (formula "49") (term "1"))
                                          (rule "translateJavaAddInt" (formula "46") (term "0,2,2,0"))
                                          (rule "translateJavaAddInt" (formula "46") (term "0,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "46") (term "0,2,1,0"))
                                          (rule "translateJavaSubInt" (formula "44") (term "0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "44") (term "0,2,2,0"))
                                          (rule "translateJavaSubInt" (formula "44") (term "0,2,1,0"))
                                          (rule "replace_known_left" (formula "44") (term "0,0,1,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "replace_known_left" (formula "46") (term "0,0,1,0,0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "polySimp_elimSub" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,1,1,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "43") (term "0,0,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "48") (term "1,1"))
                                          (rule "mul_literals" (formula "48") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "48") (term "0,0,1"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "49") (term "0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "1,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "49") (term "1,1"))
                                          (rule "mul_literals" (formula "49") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "44") (term "0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "1,0,2,1,0"))
                                          (rule "mul_literals" (formula "44") (term "1,1,0,2,1,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "0,0,0,2,1,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0,2,1,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "1,0,2,2,0"))
                                          (rule "mul_literals" (formula "44") (term "1,1,0,2,2,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "0,0,0,2,2,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0,2,2,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,1,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "1,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "1,0,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "1,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "0,0,0,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "46") (term "0,0,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "0,0,1,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "48") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "48") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "49") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "49") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "1,0,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0,0,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "1,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0,0,2,2,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "45") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "51") (term "1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0"))
                                          (rule "blockEmpty" (formula "57") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "57") (term "1"))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "lless"))
                                          (rule "activeUseStaticFieldReadAccess" (formula "57") (term "1"))
                                          (rule "assignment_read_static_attribute" (formula "57") (term "1"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "pullOutSelect" (formula "57") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_less_2"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "44") (term "1,0,0,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "1,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "0,2,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "44") (term "1,1,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "44") (term "0,2,1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "0,2,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "46") (term "1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "0,2,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "variableDeclarationAssign" (formula "58") (term "1"))
                                          (rule "variableDeclaration" (formula "58") (term "1") (newnames "lgreat"))
                                          (rule "activeUseStaticFieldReadAccess" (formula "58") (term "1"))
                                          (rule "assignment_read_static_attribute" (formula "58") (term "1"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "pullOutSelect" (formula "58") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_great_2"))
                                          (rule "applyEq" (formula "48") (term "0,2,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "47") (term "1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "0,2,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "0,2,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,1,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "1,1,0,2,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfUnion" (formula "46") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "inEqSimp_commuteLeq" (formula "46") (term "0,1,0,0"))
                                          (rule "elementOfUnion" (formula "2") (term "0,0"))
                                          (rule "elementOfUnion" (formula "48") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "inEqSimp_commuteLeq" (formula "48") (term "0,1,0,0"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0"))
                                          (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "46") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "58")))
                                          (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "58")))
                                          (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "0,2,0,2,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,0,0,0,2,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "45") (term "1,0,0,1,1,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "0,2,0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "59") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "47") (term "1,0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "0,2,0,2,2,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "0,2,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "45") (term "1,1,1,1,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "1,1,1") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,0,0,0,2,2,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0,2,2,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0,2,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "0,2,1") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "45") (term "0,2,1,1,0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "elementOfUnion" (formula "47") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "57")))
                                          (rule "elementOfSingleton" (formula "47") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "57")))
                                          (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,0,0,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "48") (term "0,2,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "48") (term "1,1,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "0,2,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "58") (term "0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "48") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,0,0,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "0,2,0,2,2,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,1,0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "0,2,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "1,1,0,2,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "44") (term "2,0") (inst "selectSK=arr_5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "44") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "44") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0"))
                                          (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                          (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                          (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                          (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                          (rule "elementOfSingleton" (formula "44") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                                          (rule "pullOutSelect" (formula "47") (term "2,0") (inst "selectSK=arr_6"))
                                          (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "47") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "47") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_commuteLeq" (formula "47") (term "0,1,0,0"))
                                          (rule "elementOfUnion" (formula "47") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                          (rule "elementOfUnion" (formula "47") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                          (rule "elementOfUnion" (formula "47") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "47") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                          (rule "elementOfUnion" (formula "47") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "47") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                          (rule "elementOfSingleton" (formula "47") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                          (rule "commuteUnion" (formula "42") (term "0,1,0"))
                                          (rule "commute_and_2" (formula "53") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "46") (term "1,0"))
                                          (rule "commute_and_2" (formula "52") (term "0,0"))
                                          (rule "commute_and_2" (formula "53") (term "0,0"))
                                          (rule "commute_and_2" (formula "54") (term "0,0"))
                                          (rule "commute_and_2" (formula "52") (term "0,0,1,0"))
                                          (rule "commute_and_2" (formula "43") (term "0,0"))
                                          (rule "commute_and_2" (formula "46") (term "0,0"))
                                          (rule "commute_and_2" (formula "49") (term "0,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "52") (term "0,0"))
                                          (rule "commute_and" (formula "53") (term "0,0,0"))
                                          (rule "commute_and" (formula "54") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "54") (term "0,0"))
                                          (rule "commute_and" (formula "43") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "43") (term "0,0"))
                                          (rule "commute_and" (formula "46") (term "0,0,0"))
                                          (rule "commute_and_2" (formula "46") (term "0,0"))
                                          (rule "commute_and" (formula "49") (term "0,0,0"))
                                          (rule "methodCallUnfoldArguments" (formula "59") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_10"))
                                          (rule "assignment" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_11"))
                                          (rule "assignment" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_12"))
                                          (rule "commute_and" (formula "53") (term "0,0,0,1,0"))
                                          (rule "commute_and" (formula "52") (term "0,0,0,1,0"))
                                          (rule "commute_and_2" (formula "52") (term "0,0,1,0"))
                                          (rule "assignmentSubtractionInt" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "translateJavaSubInt" (formula "59") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "59") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "1,0,1,0"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "var_13"))
                                          (rule "assignment" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                           (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_sort_0,exc_4,heapAfter_sort,anon_heap_sort") (contract "DualPivotQuicksort[DualPivotQuicksort::sort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                          (branch "Post (sort)"
                                              (builtin "One Step Simplification" (formula "59"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "andLeft" (formula "59"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "andLeft" (formula "61"))
                                             (rule "andLeft" (formula "62"))
                                             (rule "andLeft" (formula "63"))
                                             (rule "andLeft" (formula "64"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "61") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0"))
                                             (rule "blockEmpty" (formula "68") (term "1"))
                                             (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=DualPivotQuicksort_less_3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replaceKnownSelect_taclet00001110000000_17" (formula "64") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00001110000000_19" (formula "64") (term "2,0"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfArrayRange" (formula "64") (term "1,0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "elementOfUnion" (formula "64") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "64") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "64"))
                                             (rule "hideAuxiliaryEq" (formula "64"))
                                             (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=DualPivotQuicksort_great_3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replaceKnownSelect_taclet00001110000000_18" (formula "65") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00001110000000_20" (formula "65") (term "2,0"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfArrayRange" (formula "65") (term "1,0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "elementOfUnion" (formula "65") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "65"))
                                             (rule "hideAuxiliaryEq" (formula "65"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0"))
                                             (rule "commuteUnion" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,0,1,0"))
                                             (rule "commuteUnion_2" (formula "59") (term "0,1,0"))
                                             (rule "commute_and_2" (formula "60") (term "0,0"))
                                             (rule "commute_and_2" (formula "61") (term "0,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,0"))
                                             (rule "commute_and_2" (formula "63") (term "0,0"))
                                             (rule "commute_and_2" (formula "62") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "60") (term "0,0,1,0"))
                                             (rule "commute_and_2" (formula "61") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "60") (term "0,0,0"))
                                             (rule "commute_and" (formula "61") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "61") (term "0,0"))
                                             (rule "commute_and" (formula "62") (term "0,0,0"))
                                             (rule "commute_and" (formula "63") (term "0,0,0"))
                                             (rule "commute_and_2" (formula "63") (term "0,0"))
                                             (rule "commute_and" (formula "62") (term "0,0,0,1,0"))
                                             (rule "commute_and" (formula "60") (term "0,0,0,1,0"))
                                             (rule "commute_and" (formula "61") (term "0,0,0,1,0"))
                                             (rule "commute_and_2" (formula "61") (term "0,0,1,0"))
                                             (rule "methodCallUnfoldArguments" (formula "68") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                             (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_14"))
                                             (rule "assignment" (formula "68") (term "1"))
                                              (builtin "One Step Simplification" (formula "68"))
                                             (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                             (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_15"))
                                             (rule "assignmentAdditionInt" (formula "68") (term "1"))
                                              (builtin "One Step Simplification" (formula "68"))
                                             (rule "translateJavaAddInt" (formula "68") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "1,0,1,0"))
                                             (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                             (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_16"))
                                             (rule "assignment" (formula "68") (term "1"))
                                              (builtin "One Step Simplification" (formula "68"))
                                             (rule "variableDeclarationAssign" (formula "68") (term "1"))
                                             (rule "variableDeclaration" (formula "68") (term "1") (newnames "var_17"))
                                             (rule "assignment" (formula "68") (term "1"))
                                              (builtin "One Step Simplification" (formula "68"))
                                              (builtin "Use Operation Contract" (formula "68") (newnames "heapBefore_sort_1,exc_5,heapAfter_sort_0,anon_heap_sort_0") (contract "DualPivotQuicksort[DualPivotQuicksort::sort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                             (branch "Post (sort)"
                                                 (builtin "One Step Simplification" (formula "68"))
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "andLeft" (formula "68"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "71"))
                                                (rule "andLeft" (formula "72"))
                                                (rule "andLeft" (formula "73"))
                                                (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "70") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "71") (term "1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0"))
                                                (rule "blockEmpty" (formula "77") (term "1"))
                                                (rule "pullOutSelect" (formula "74") (term "0") (inst "selectSK=DualPivotQuicksort_great_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "74") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "replaceKnownSelect_taclet000001110000000_25" (formula "74") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000001110000000_26" (formula "74") (term "2,0"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfArrayRange" (formula "74") (term "1,0,0") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "74") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "elementOfSingleton" (formula "74") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "74"))
                                                (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "74"))
                                                (rule "hideAuxiliaryEq" (formula "74"))
                                                (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=DualPivotQuicksort_less_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "replaceKnownSelect_taclet000001110000000_23" (formula "73") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000001110000000_24" (formula "73") (term "2,0"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfArrayRange" (formula "73") (term "1,0,0") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "73") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "elementOfSingleton" (formula "73") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "73"))
                                                (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "73"))
                                                (rule "hideAuxiliaryEq" (formula "73"))
                                                (rule "commuteUnion" (formula "68") (term "0,0,0,0,0,1,0"))
                                                (rule "commuteUnion" (formula "68") (term "1,0,0,0,0,0,1,0"))
                                                (rule "commuteUnion_2" (formula "68") (term "0,0,0,0,1,0"))
                                                (rule "commuteUnion_2" (formula "68") (term "0,0,0,1,0"))
                                                (rule "commuteUnion_2" (formula "68") (term "0,0,1,0"))
                                                (rule "commuteUnion_2" (formula "68") (term "0,1,0"))
                                                (rule "commute_and_2" (formula "69") (term "0,0"))
                                                (rule "commute_and_2" (formula "70") (term "0,0"))
                                                (rule "commute_and_2" (formula "71") (term "0,0"))
                                                (rule "commute_and_2" (formula "72") (term "0,0"))
                                                (rule "commute_and_2" (formula "71") (term "0,0,1,0"))
                                                (rule "commute_and_2" (formula "69") (term "0,0,1,0"))
                                                (rule "commute_and_2" (formula "70") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "69") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "69") (term "0,0"))
                                                (rule "commute_and" (formula "70") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "70") (term "0,0"))
                                                (rule "commute_and" (formula "71") (term "0,0,0"))
                                                (rule "commute_and" (formula "72") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "72") (term "0,0"))
                                                (rule "commute_and" (formula "71") (term "0,0,0,1,0"))
                                                (rule "commute_and" (formula "69") (term "0,0,0,1,0"))
                                                (rule "commute_and_2" (formula "69") (term "0,0,1,0"))
                                                (rule "commute_and" (formula "70") (term "0,0,0,1,0"))
                                                (rule "commute_and_2" (formula "70") (term "0,0,1,0"))
                                                (rule "associativeLawUnion" (formula "68") (term "0,1,0"))
                                                 (builtin "Use Operation Contract" (formula "77") (newnames "heapBefore_sort_2,exc_6,heapAfter_sort_1,anon_heap_sort_1") (contract "DualPivotQuicksort[DualPivotQuicksort::sort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                                (branch "Post (sort)"
                                                    (builtin "One Step Simplification" (formula "79"))
                                                    (builtin "One Step Simplification" (formula "77"))
                                                   (rule "andLeft" (formula "77"))
                                                   (rule "andLeft" (formula "78"))
                                                   (rule "andLeft" (formula "78"))
                                                   (rule "andLeft" (formula "78"))
                                                   (rule "andLeft" (formula "79"))
                                                   (rule "andLeft" (formula "80"))
                                                   (rule "andLeft" (formula "81"))
                                                   (rule "andLeft" (formula "82"))
                                                   (rule "inEqSimp_commuteLeq" (formula "78") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "79") (term "1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=DualPivotQuicksort_less_5"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "82") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "replaceKnownSelect_taclet0000001110000000_29" (formula "82") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000001110000000_30" (formula "82") (term "2,0"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "82") (term "1,0,0") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "elementOfUnion" (formula "82") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "82") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "82"))
                                                   (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "82"))
                                                   (rule "hideAuxiliaryEq" (formula "82"))
                                                   (rule "pullOutSelect" (formula "83") (term "0") (inst "selectSK=DualPivotQuicksort_great_5"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "83") (ifseqformula "77"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "replaceKnownSelect_taclet0000001110000000_27" (formula "83") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000001110000000_28" (formula "83") (term "2,0"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "83") (term "1,0,0") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "elementOfUnion" (formula "83") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "83"))
                                                   (rule "applyEqReverse" (formula "84") (term "0") (ifseqformula "83"))
                                                   (rule "hideAuxiliaryEq" (formula "83"))
                                                   (rule "commuteUnion" (formula "77") (term "0,0,0,0,0,1,0"))
                                                   (rule "commuteUnion_2" (formula "77") (term "0,0,0,0,1,0"))
                                                   (rule "commuteUnion_2" (formula "77") (term "0,0,0,1,0"))
                                                   (rule "commuteUnion_2" (formula "77") (term "0,0,1,0"))
                                                   (rule "commuteUnion" (formula "77") (term "1,0,0,1,0"))
                                                   (rule "commuteUnion_2" (formula "77") (term "0,1,0"))
                                                   (rule "commute_and_2" (formula "78") (term "0,0"))
                                                   (rule "commute_and_2" (formula "79") (term "0,0"))
                                                   (rule "commute_and_2" (formula "80") (term "0,0"))
                                                   (rule "commute_and_2" (formula "81") (term "0,0"))
                                                   (rule "commute_and_2" (formula "80") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "78") (term "0,0,1,0"))
                                                   (rule "commute_and_2" (formula "79") (term "0,0,1,0"))
                                                   (rule "methodCallEmpty" (formula "86") (term "1"))
                                                   (rule "commute_and" (formula "78") (term "0,0,0"))
                                                   (rule "commute_and_2" (formula "78") (term "0,0"))
                                                   (rule "commute_and" (formula "79") (term "0,0,0"))
                                                   (rule "commute_and_2" (formula "79") (term "0,0"))
                                                   (rule "commute_and" (formula "80") (term "0,0,0"))
                                                   (rule "commute_and" (formula "81") (term "0,0,0"))
                                                   (rule "commute_and_2" (formula "81") (term "0,0"))
                                                   (rule "commute_and" (formula "80") (term "0,0,0,1,0"))
                                                   (rule "commute_and" (formula "78") (term "0,0,0,1,0"))
                                                   (rule "commute_and_2" (formula "78") (term "0,0,1,0"))
                                                   (rule "commute_and" (formula "79") (term "0,0,0,1,0"))
                                                   (rule "commute_and_2" (formula "79") (term "0,0,1,0"))
                                                   (rule "tryEmpty" (formula "86") (term "1"))
                                                   (rule "associativeLawUnion" (formula "77") (term "0,1,0"))
                                                   (rule "emptyModality" (formula "86") (term "1"))
                                                   (rule "andRight" (formula "86"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "86"))
                                                      (rule "closeTrue" (formula "86"))
                                                   )
                                                   (branch ""
                                                       (builtin "One Step Simplification" (formula "86"))
                                                      (rule "allRight" (formula "86") (inst "sk=f_7") (userinteraction))
                                                      (rule "allRight" (formula "86") (inst "sk=o_7") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "orRight" (formula "86") (userinteraction))
                                                      (rule "applyEqReverse" (formula "95") (term "0,1") (ifseqformula "77") (userinteraction))
                                                      (rule "selectOfAnon" (formula "95") (term "1"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,1"))
                                                      (rule "elementOfArrayRange" (formula "95") (term "1,0,0,0,1") (inst "iv=iv"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,0,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,0,0,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,0,0,0,0,0,0,1"))
                                                      (rule "elementOfSingleton" (formula "95") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "2,1") (ifseqformula "68"))
                                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "88")) (ifInst ""  (formula "89")) (ifInst ""  (formula "90")) (ifInst ""  (formula "91")) (ifInst ""  (formula "92")) (ifInst ""  (formula "87")) (ifInst ""  (formula "86")))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,2,1"))
                                                      (rule "elementOfArrayRange" (formula "95") (term "1,0,0,0,2,1") (inst "iv=iv"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,1,1,0,2,1") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "2,2,1") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,2,2,1"))
                                                      (rule "elementOfArrayRange" (formula "95") (term "1,0,0,0,2,2,1") (inst "iv=iv"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,1,1,0,1") (ifseqformula "68"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "2,2,2,1") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,2,2,2,1"))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,0,0,2,2,2,1"))
                                                      (rule "elementOfArrayRange" (formula "95") (term "1,0,0,0,2,2,2,1") (inst "iv=iv"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,0,1,1,0,1") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,1,1,0,2,2,1") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "2,2,2,2,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "94")))
                                                      (rule "elementOfUnion" (formula "95") (term "0,0,2,2,2,2,1"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,0,1,1,0,2,2,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "0,0,0,1,1,0,2,1") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,1,0,0,0,0,1,1,0,2,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "95") (term "0,0,0,0,1,1,0,1") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "95"))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "0,0,1,1,0,2,2,2,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "0,0,0,0,0,1,1,0,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "94")))
                                                      (rule "selectOfAnonEQ" (formula "95") (term "2,0,0,0,1,1,0,2,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "94")))
                                                      (rule "cut_direct" (formula "86") (term "0") (userinteraction))
                                                      (branch "CUT: o_7 = null TRUE"
                                                         (rule "applyEqRigid" (formula "96") (term "0,0,0,0,0,1") (ifseqformula "1") (userinteraction))
                                                         (rule "eqSymm" (formula "96") (term "0,0,0,0,1") (userinteraction))
                                                         (rule "replace_known_right" (formula "96") (term "0,0,0,0,1") (ifseqformula "86") (userinteraction))
                                                          (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "applyEqRigid" (formula "96") (term "0,0,1,0,0,1") (ifseqformula "1") (userinteraction))
                                                         (rule "eqSymm" (formula "96") (term "0,1,0,0,1") (userinteraction))
                                                         (rule "replace_known_right" (formula "96") (term "0,1,0,0,1") (ifseqformula "86") (userinteraction))
                                                          (builtin "One Step Simplification" (formula "96"))
                                                          (builtin "One Step Simplification" (formula "87"))
                                                         (rule "eqSymm" (formula "94") (term "0,0,0,1"))
                                                         (rule "eqSymm" (formula "96") (term "0,0,0,1,1,0,0,2,1"))
                                                         (rule "eqSymm" (formula "96") (term "0,0,0,1,1,0,0,2,2,1"))
                                                         (rule "eqSymm" (formula "96"))
                                                         (rule "replace_known_left" (formula "90") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "90"))
                                                         (rule "replace_known_left" (formula "95") (term "0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "false_right" (formula "95"))
                                                         (rule "replace_known_left" (formula "93") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "93"))
                                                         (rule "replace_known_left" (formula "89") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "89"))
                                                         (rule "replace_known_left" (formula "91") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "91"))
                                                         (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "88"))
                                                         (rule "replace_known_left" (formula "92") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "92"))
                                                         (rule "elementOfSingleton" (formula "95") (term "1,0,0,0,2,2,0"))
                                                         (rule "replace_known_right" (formula "95") (term "1,1,0,0,0,2,2,0") (ifseqformula "87"))
                                                          (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_ltToLeq" (formula "51"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "63") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "72") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "70") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "50") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "81") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "52"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "79") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                         (rule "elementOfSingleton" (formula "95") (term "0,0,0,2,2,0"))
                                                         (rule "replace_known_right" (formula "95") (term "1,0,0,0,2,2,0") (ifseqformula "88"))
                                                          (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "1")))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "79") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,1,1,0,0,2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,1,0,0,2,2,0"))
                                                         (rule "replace_known_right" (formula "95") (term "0,0,2,2,0") (ifseqformula "94"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "applyEq" (formula "95") (term "1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "95") (term "0,0,1,0,0,2,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "95") (term "0,1,0,0,2,0"))
                                                         (rule "replace_known_right" (formula "95") (term "0,1,0,0,2,0") (ifseqformula "86"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "applyEq" (formula "94") (term "0,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "94") (term "0"))
                                                         (rule "replace_known_right" (formula "94") (term "0") (ifseqformula "86"))
                                                          (builtin "One Step Simplification" (formula "94"))
                                                         (rule "false_right" (formula "94"))
                                                         (rule "applyEqRigid" (formula "94") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "1,1,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "94") (term "0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "94") (term "1,2,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "0,1,0,0,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "0,0,0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "1,1,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "94") (term "0,0,0,0,2,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "72") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "72") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "70") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "81") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "81") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                         (rule "mul_literals" (formula "37") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "79") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "79") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "79") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,0") (ifseqformula "31"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_subsumption1" (formula "44") (term "0,0,0") (ifseqformula "50"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_subsumption1" (formula "44") (term "0,0,0") (ifseqformula "49"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0"))
                                                         (rule "qeq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_subsumption0" (formula "28") (term "1,0,0") (ifseqformula "34"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "83")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0,2,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0,2,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "89")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "84")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0,2,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0,2,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "88")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "83")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "89")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "84")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "88")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0,2,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0,2,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "87")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "87")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,0,2,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,0,2,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "86")))
                                                         (rule "elementOfSingleton" (formula "90") (term "0,0,0,2,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "85")))
                                                         (rule "elementOfArrayRange" (formula "90") (term "0,0,2,2,0") (inst "iv=iv"))
                                                         (rule "eqSymm" (formula "90") (term "0,0,0,1,0,0,2,2,0"))
                                                         (rule "eqSymm" (formula "90") (term "0,0,0,2,2,0"))
                                                         (rule "replace_known_right" (formula "90") (term "0,0,0,2,2,0") (ifseqformula "82"))
                                                          (builtin "One Step Simplification" (formula "90"))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "89")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "88")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "1,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "87")))
                                                         (rule "elementOfUnion" (formula "90") (term "0,0,2,0"))
                                                         (rule "elementOfSingleton" (formula "90") (term "0,0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "85")))
                                                         (rule "elementOfSingleton" (formula "90") (term "0,0,2,0"))
                                                          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "86")))
                                                         (rule "orRight" (formula "90"))
                                                         (rule "notRight" (formula "90"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "elementOfUnion" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                         (rule "elementOfSingleton" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch ""
                                                         (rule "cut_direct" (formula "96") (term "0,0,0,0,1") (userinteraction))
                                                         (branch "CUT: o_7 = a TRUE"
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "87")) (ifInst ""  (formula "1")) (ifInst ""  (formula "87")) (ifInst ""  (formula "87")) (ifInst ""  (formula "1")) (ifInst ""  (formula "87")) (ifInst ""  (formula "1")))
                                                            (rule "applyEq" (formula "97") (term "1,0,0,0,0,0,1,0,1") (ifseqformula "1") (userinteraction))
                                                            (rule "replace_known_left" (formula "97") (term "0,0,0,0,1,0,1") (ifseqformula "8") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "cut_direct" (formula "97") (term "0,0,0,0,2,1") (userinteraction))
                                                            (branch "CUT: (o_7, f_7) in {(null, DualPivotQuicksort::$e1)} cup {(null, DualPivotQuicksort::$e2)} cup {(null, DualPivotQuicksort::$e3)} cup {(null, DualPivotQuicksort::$e4)} cup {(null, DualPivotQuicksort::$e5)} cup {(null, DualPivotQuicksort::$great)} cup {(null, DualPivotQuicksort::$less)} TRUE"
                                                               (rule "hide_right" (formula "98") (userinteraction))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "89")))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "87"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "replace_known_right" (formula "1") (ifseqformula "88"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: (o_7, f_7) in {(null, DualPivotQuicksort::$e1)} cup {(null, DualPivotQuicksort::$e2)} cup {(null, DualPivotQuicksort::$e3)} cup {(null, DualPivotQuicksort::$e4)} cup {(null, DualPivotQuicksort::$e5)} cup {(null, DualPivotQuicksort::$great)} cup {(null, DualPivotQuicksort::$less)} FALSE"
                                                               (rule "replace_known_right" (formula "98") (term "0,0,0,0,2,2,1") (ifseqformula "97") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "98"))
                                                               (rule "ifthenelse_split" (formula "98") (term "1") (userinteraction))
                                                               (branch " exists int iv; ( f_7 = arr(iv) & DualPivotQuicksort.less@anon_heap_split<<anonHeapFunction>> <= iv & iv <= DualPivotQuicksort.great@anon_heap_split<<anonHeapFunction>>) & !f_7 = java.lang.Object::<created> TRUE"
                                                                   (opengoal " ")
                                                               )
                                                               (branch " exists int iv; ( f_7 = arr(iv) & DualPivotQuicksort.less@anon_heap_split<<anonHeapFunction>> <= iv & iv <= DualPivotQuicksort.great@anon_heap_split<<anonHeapFunction>>) & !f_7 = java.lang.Object::<created> FALSE"
                                                                   (opengoal " ")
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: o_7 = a FALSE"
                                                             (opengoal " ")
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Exceptional Post (sort)"
                                                    (builtin "One Step Simplification" (formula "77"))
                                                    (builtin "One Step Simplification" (formula "79"))
                                                   (rule "andLeft" (formula "77"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "1,0") (ifseqformula "77"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,1,0") (ifseqformula "68"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,0,1,0") (ifseqformula "59"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,0,0,1,0") (ifseqformula "42"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "78") (term "0,0,0,0,1,0") (ifseqformula "21"))
                                                   (rule "andLeft" (formula "78"))
                                                   (rule "andLeft" (formula "78"))
                                                   (rule "notLeft" (formula "78"))
                                                   (rule "close" (formula "80") (ifseqformula "79"))
                                                )
                                                (branch "Pre (sort)"
                                                    (opengoal " ")
                                                )
                                             )
                                             (branch "Exceptional Post (sort)"
                                                 (builtin "One Step Simplification" (formula "70"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "andLeft" (formula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0") (ifseqformula "59"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,0") (ifseqformula "42"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,0,1,0") (ifseqformula "21"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "notLeft" (formula "69"))
                                                (rule "close" (formula "71") (ifseqformula "70"))
                                             )
                                             (branch "Pre (sort)"
                                                 (opengoal " ")
                                             )
                                          )
                                          (branch "Exceptional Post (sort)"
                                              (builtin "One Step Simplification" (formula "59"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "andLeft" (formula "59"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "1,0") (ifseqformula "59"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,1,0") (ifseqformula "42"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,1,0") (ifseqformula "21"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "notLeft" (formula "60"))
                                             (rule "close" (formula "62") (ifseqformula "61"))
                                          )
                                          (branch "Pre (sort)"
                                              (opengoal " ")
                                          )
                                       )
                                       (branch "Exceptional Post (split)"
                                           (builtin "One Step Simplification" (formula "44"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0") (ifseqformula "21"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "andLeft" (formula "43"))
                                          (rule "notLeft" (formula "43"))
                                          (rule "close" (formula "45") (ifseqformula "44"))
                                       )
                                       (branch "Case 3"
                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
                                          (rule "andRight" (formula "42") (userinteraction))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "42") (userinteraction))
                                             (branch "Case 1"
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1") (ifseqformula "21"))
                                                (rule "wellFormedAnonEQ" (formula "42") (term "0") (ifseqformula "21"))
                                                (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "6")) (ifInst ""  (formula "20")))
                                                (rule "closeTrue" (formula "42"))
                                             )
                                             (branch "Case 2"
                                                (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "22") (userinteraction))
                                                (rule "ifthenelse_split" (formula "42") (term "0") (userinteraction))
                                                (branch ""
                                                   (rule "instAll" (formula "43") (term "0,2,0") (ifseqformula "40") (userinteraction))
                                                   (rule "impLeft" (formula "1") (userinteraction))
                                                   (branch ""
                                                      (rule "commute_and" (formula "42") (userinteraction))
                                                      (rule "andRight" (formula "42") (userinteraction))
                                                      (branch "Case 1"
                                                          (opengoal " ")
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "42") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "expand_inInt" (formula "42") (userinteraction))
                                                            (rule "replace_int_MAX" (formula "42") (term "1,0") (userinteraction))
                                                            (rule "replace_int_MIN" (formula "42") (term "0,1") (userinteraction))
                                                            (rule "andRight" (formula "42") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "expand_inShort" (formula "17") (userinteraction))
                                                               (rule "replace_short_MAX" (formula "17") (term "1,0") (userinteraction))
                                                                (opengoal " ")
                                                            )
                                                            (branch "Case 2"
                                                                (opengoal " ")
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                             (opengoal " ")
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "expand_inInt" (formula "1") (userinteraction))
                                                      (rule "expand_inInt" (formula "44") (userinteraction))
                                                      (rule "andLeft" (formula "1") (userinteraction))
                                                      (rule "andRight" (formula "45") (userinteraction))
                                                      (branch ""
                                                         (rule "eqTermCut" (formula "1") (term "0") (inst "s=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            a,
            arr(int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
                            null,
                            DualPivotQuicksort::$e2)))") (userinteraction))
                                                         (branch "Assume a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@heapAfter_prepare_indices = a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@anon_heap_prepare_indices<<anonHeapFunction>>"
                                                             (opengoal " ")
                                                         )
                                                         (branch "Assume a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@heapAfter_prepare_indices != a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@anon_heap_prepare_indices<<anonHeapFunction>>"
                                                            (rule "notLeft" (formula "1") (userinteraction))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "2") (term "1"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "44") (term "0"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "1") (term "0"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "eqSymm" (formula "45"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "4")) (ifInst ""  (formula "45")))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "eqTermCut" (formula "45") (term "1") (inst "s=int::select(heapAfter_prepare_indices,
            a,
            arr(int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
                            null,
                            DualPivotQuicksort::$e2)))") (userinteraction))
                                                         (branch "Assume a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@anon_heap_prepare_indices<<anonHeapFunction>> = a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@heapAfter_prepare_indices"
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "2") (term "0"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "3") (term "1"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "1") (term "1"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "1"))
                                                            (rule "close" (formula "47") (ifseqformula "3"))
                                                         )
                                                         (branch "Assume a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@anon_heap_prepare_indices<<anonHeapFunction>> != a[DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>>]@heapAfter_prepare_indices"
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "2") (term "0"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "3") (term "1"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "1") (term "1,0"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "4")) (ifInst ""  (formula "45")))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left & DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> <= right FALSE"
                                                   (rule "expand_inInt" (formula "5") (term "0,0"))
                                                   (rule "expand_inInt" (formula "43"))
                                                   (rule "expand_inInt" (formula "5") (term "0,1,1,0"))
                                                   (rule "expand_inInt" (formula "5") (term "0,0,2,0"))
                                                   (rule "expand_inInt" (formula "8"))
                                                   (rule "expand_inInt" (formula "9"))
                                                   (rule "expand_inInt" (formula "10") (term "0,0"))
                                                   (rule "expand_inInt" (formula "10") (term "0,1,1,0"))
                                                   (rule "expand_inInt" (formula "10") (term "0,0,2,0"))
                                                   (rule "expand_inInt" (formula "11") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "11") (term "1,0"))
                                                   (rule "expand_inInt" (formula "12"))
                                                   (rule "expand_inInt" (formula "13"))
                                                   (rule "expand_inShort" (formula "16"))
                                                   (rule "expand_inInt" (formula "18") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "18") (term "0,0,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "19") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "19") (term "0,0,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "37") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "37") (term "0,0,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "38") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "38") (term "0,0,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "39") (term "0,0,0,0"))
                                                   (rule "expand_inInt" (formula "39") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "5") (term "0,1,0,0"))
                                                   (rule "replace_int_MAX" (formula "5") (term "1,0,0,0"))
                                                   (rule "expand_inInt" (formula "5") (term "0,1,0,0,0,0"))
                                                   (rule "expand_inInt" (formula "5") (term "0,1,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "43") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "43") (term "1,0"))
                                                   (rule "replace_int_MAX" (formula "5") (term "1,0,0,1,1,0"))
                                                   (rule "replace_int_MIN" (formula "5") (term "0,1,0,1,1,0"))
                                                   (rule "replace_int_MIN" (formula "5") (term "0,1,0,0,2,0"))
                                                   (rule "replace_int_MAX" (formula "5") (term "1,0,0,0,2,0"))
                                                   (rule "replace_int_MAX" (formula "8") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "8") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,0,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,0,0"))
                                                   (rule "expand_inInt" (formula "10") (term "0,1,0,0,0,0"))
                                                   (rule "expand_inInt" (formula "10") (term "0,1,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,0,1,1,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,0,1,1,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,0,0,2,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,0,0,2,0"))
                                                   (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "11") (term "1,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "11") (term "0,1,1,0"))
                                                   (rule "replace_int_MAX" (formula "12") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "12") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                                   (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                                   (rule "replace_short_MIN" (formula "16") (term "0,1"))
                                                   (rule "replace_short_MAX" (formula "16") (term "1,0"))
                                                   (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "37") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "37") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "37") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "39") (term "1,0,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "39") (term "0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "39") (term "1,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "39") (term "0,1,1,0"))
                                                   (rule "replace_int_MAX" (formula "5") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "5") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "replace_int_MAX" (formula "5") (term "1,0,0,1,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "5") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "replace_int_MIN" (formula "10") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "replace_int_MAX" (formula "10") (term "1,0,0,1,1,1,0,0"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "27"))
                                                   (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "27"))
                                                   (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "27"))
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "47") (term "1"))
                                                   (rule "inEqSimp_gtToGeq" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,2,0"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,2,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,1,0,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,0,2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,2,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,1,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,1,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,2,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,1,0,0,2,1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,2,1,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0,2,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,1,1,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,1,0,1,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,1,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,1,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,1,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,1,1,1,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1,1,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,2,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,0,2,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,2,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                   (rule "mul_literals" (formula "40") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,2,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,2,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,2,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,2,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,2,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,1,0,0,2,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,2,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0,2,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,2,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,2,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,1,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0"))
                                                   (rule "qeq_literals" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "inEqSimp_subsumption0" (formula "32") (term "1,0,0") (ifseqformula "39"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "32") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0"))
                                                   (rule "qeq_literals" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                   (rule "add_literals" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "20"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "28") (term "1,0,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "33"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "44") (term "1") (ifseqformula "32"))
                                                   (rule "inEqSimp_homoInEq0" (formula "44") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                   (rule "qeq_literals" (formula "44") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_geqRight" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "27") (term "0,0") (ifseqformula "32"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "27"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "27"))
                                                   (rule "hideAuxiliaryEq" (formula "27"))
                                                   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0"))
                                                   (rule "leq_literals" (formula "32"))
                                                   (rule "closeFalse" (formula "32"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (opengoal " ")
                                          )
                                       )
                                    )
                                    (branch "Null Reference (x_arr_6 = null)"
                                       (rule "false_right" (formula "43"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 3"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "false_right" (formula "43"))
                                       (rule "expand_inInt" (formula "40") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "40") (term "1,0"))
                                       (rule "expand_inInt" (formula "39") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "expand_inInt" (formula "11") (term "0,1,1,0"))
                                       (rule "expand_inInt" (formula "11") (term "0,0,2,0"))
                                       (rule "expand_inInt" (formula "6") (term "0,0"))
                                       (rule "expand_inInt" (formula "38") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "38") (term "0,0,0,0,1,0"))
                                       (rule "expand_inInt" (formula "20") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "expand_inInt" (formula "19") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "19") (term "0,0,0,0,1,0"))
                                       (rule "expand_inInt" (formula "6") (term "0,1,1,0"))
                                       (rule "expand_inShort" (formula "17"))
                                       (rule "expand_inInt" (formula "14"))
                                       (rule "expand_inInt" (formula "13"))
                                       (rule "expand_inInt" (formula "12") (term "0,0,0,0"))
                                       (rule "expand_inInt" (formula "6") (term "0,0,2,0"))
                                       (rule "expand_inInt" (formula "12") (term "1,0"))
                                       (rule "expand_inInt" (formula "11") (term "0,0"))
                                       (rule "expand_inInt" (formula "10"))
                                       (rule "expand_inInt" (formula "9"))
                                       (rule "replace_int_MAX" (formula "40") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "40") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "40") (term "0,1,1,0"))
                                       (rule "replace_int_MAX" (formula "40") (term "1,0,1,0"))
                                       (rule "replace_int_MAX" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "39") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,1,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,1,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,0"))
                                       (rule "expand_inInt" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "6") (term "1,0,0,0"))
                                       (rule "expand_inInt" (formula "6") (term "0,1,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,1,0"))
                                       (rule "replace_short_MAX" (formula "17") (term "1,0"))
                                       (rule "replace_short_MIN" (formula "17") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "6") (term "1,0,0,0,2,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,0,2,0"))
                                       (rule "replace_int_MAX" (formula "12") (term "1,0,1,0"))
                                       (rule "replace_int_MIN" (formula "12") (term "0,1,1,0"))
                                       (rule "expand_inInt" (formula "11") (term "0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,0,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0,0,0"))
                                       (rule "expand_inInt" (formula "11") (term "0,1,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,1,1,0,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,0,0,0,0"))
                                       (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,1,1,0,0"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "inEqSimp_ltToLeq" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "inEqSimp_ltToLeq" (formula "38"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,2,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,2,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "inEqSimp_commuteLeq" (formula "10"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,2,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,2,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0,0,2,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,0,2,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,2,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0,1,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,1,0,1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1"))
                                       (rule "mul_literals" (formula "42") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,2,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,2,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,0,2,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,2,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,2,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,0,2,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,2,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,2,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "inEqSimp_subsumption1" (formula "29") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (term "1,0,0") (ifseqformula "38"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "29") (term "1,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                       (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "28") (term "1,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "26") (term "1,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "27") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1"))
                                       (rule "mul_literals" (formula "30") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,2,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,2,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,2,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,2,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,2,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,1,0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,1,1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,1,1,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,2,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,2,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,2,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,2,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,2,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,1,1,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,1,1,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,1,1,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,1,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "add_literals" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "30"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                       (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "nnf_imp2or" (formula "11") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "commute_and" (formula "41") (term "0,0,0,0"))
                                       (rule "commute_and" (formula "21") (term "0,0,0,0"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "nnf_imp2or" (formula "42") (term "0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0"))
                                       (rule "nnf_imp2or" (formula "41") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "28") (term "0"))
                                       (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "29"))
                                          (rule "hideAuxiliaryEq" (formula "29"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "40"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0"))
                                          (rule "qeq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,1,0"))
                                          (rule "commute_and" (formula "10") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                          (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "38"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1"))
                                             (rule "mul_literals" (formula "27") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "commute_and" (formula "6") (term "0,0"))
                                             (rule "commute_and" (formula "11") (term "1,0"))
                                             (rule "commute_and" (formula "43") (term "1,0"))
                                             (rule "ifthenelse_split" (formula "26") (term "0"))
                                             (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                                (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "27"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "36"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                (rule "mul_literals" (formula "26") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0"))
                                                (rule "qeq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "ifthenelse_split" (formula "25") (term "0"))
                                                (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "26"))
                                                   (rule "hideAuxiliaryEq" (formula "26"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "34"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                                                   (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "commute_or" (formula "42") (term "0,0,0"))
                                                   (rule "commute_or" (formula "22") (term "0,0,0"))
                                                   (rule "ifthenelse_split" (formula "10") (term "1,1,0"))
                                                   (branch "right <= 2147483647 + left TRUE"
                                                      (rule "replace_known_left" (formula "6") (term "0,1,1,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                                      (rule "replace_known_left" (formula "11") (term "0,0,0,0,0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0") (ifseqformula "31"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "commute_or_2" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_or_subsumption1" (formula "12") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0"))
                                                      (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0,0"))
                                                      (rule "commute_or" (formula "44") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_or_subsumption0" (formula "42") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                      (rule "inEqSimp_or_subsumption0" (formula "22") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "commute_or" (formula "13") (term "0"))
                                                      (rule "cnf_rightDist" (formula "45") (term "0"))
                                                      (rule "distr_forallAnd" (formula "45"))
                                                      (rule "andLeft" (formula "45"))
                                                      (rule "commute_or" (formula "46") (term "0"))
                                                      (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "44") (term "0"))
                                                      (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "24") (term "0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "right <= 2147483646 + left TRUE"
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0"))
                                                         (rule "qeq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0"))
                                                         (rule "qeq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "6"))
                                                         (rule "mul_literals" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "21"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "all_pull_out3" (formula "42") (term "0"))
                                                         (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                                         (rule "all_pull_out3" (formula "24") (term "0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "12") (term "0"))
                                                         (branch "right <= 2147483642 + left TRUE"
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                            (rule "mul_literals" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                            (rule "add_literals" (formula "10") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "mul_literals" (formula "10") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                            (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                            (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                            (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "47") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00002001110000000_19" (formula "47") (term "0,1"))
                                                            (rule "allLeft" (formula "48") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                            (rule "replaceKnownSelect_taclet00_14" (formula "48") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet2001110000000_15" (formula "48") (term "0,1"))
                                                            (rule "allLeft" (formula "49") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                            (rule "replaceKnownSelect_taclet00_12" (formula "49") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0002001110000000_18" (formula "49") (term "0,1"))
                                                            (rule "allLeft" (formula "50") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                            (rule "replaceKnownSelect_taclet00_11" (formula "50") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet002001110000000_17" (formula "50") (term "0,1"))
                                                            (rule "allLeft" (formula "51") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                            (rule "replaceKnownSelect_taclet00_10" (formula "51") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet02001110000000_16" (formula "51") (term "0,1"))
                                                            (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                            (rule "allLeft" (formula "18") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                            (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                            (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                            (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                            (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                            (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                            (rule "allLeft" (formula "60") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                            (rule "replaceKnownSelect_taclet00_13" (formula "60") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00002001110000000_19" (formula "60") (term "0,1"))
                                                            (rule "allLeft" (formula "61") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                            (rule "replaceKnownSelect_taclet00_14" (formula "61") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet2001110000000_15" (formula "61") (term "0,1"))
                                                            (rule "allLeft" (formula "62") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                            (rule "replaceKnownSelect_taclet00_12" (formula "62") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0002001110000000_18" (formula "62") (term "0,1"))
                                                            (rule "allLeft" (formula "63") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                            (rule "replaceKnownSelect_taclet00_11" (formula "63") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet002001110000000_17" (formula "63") (term "0,1"))
                                                            (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                            (rule "replaceKnownSelect_taclet00_10" (formula "64") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet02001110000000_16" (formula "64") (term "0,1"))
                                                            (rule "cut_direct" (formula "1") (term "1"))
                                                            (branch "CUT: DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "true_left" (formula "62"))
                                                               (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "true_left" (formula "56"))
                                                               (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "32"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "67")))
                                                               (rule "true_left" (formula "57"))
                                                               (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "65")))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")))
                                                               (rule "true_left" (formula "60"))
                                                               (rule "inEqSimp_geqRight" (formula "63"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "48"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_contradInEq0" (formula "62") (term "1,0") (ifseqformula "48"))
                                                               (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "62") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "62") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "62") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "62") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "48"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq0" (formula "57") (term "1,0") (ifseqformula "48"))
                                                               (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "57") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "57") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "7") (term "0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "39"))
                                                               (rule "qeq_literals" (formula "27") (term "0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "closeFalse" (formula "27"))
                                                            )
                                                         )
                                                         (branch "right <= 2147483642 + left FALSE"
                                                            (rule "inEqSimp_leqRight" (formula "47"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "9") (term "0,0"))
                                                            (rule "qeq_literals" (formula "9") (term "0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "22"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "right <= 2147483646 + left FALSE"
                                                         (rule "inEqSimp_leqRight" (formula "48"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0"))
                                                         (rule "qeq_literals" (formula "33") (term "0"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12"))
                                                         (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                         (rule "add_literals" (formula "12") (term "1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "0"))
                                                         (rule "qeq_literals" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEq" (formula "44") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,0,0,0"))
                                                         (rule "applyEq" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "26") (term "2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0"))
                                                         (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                                         (rule "add_literals" (formula "41") (term "0,1"))
                                                         (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                         (rule "add_literals" (formula "35") (term "0,1"))
                                                         (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                                         (rule "add_literals" (formula "22") (term "0,1"))
                                                         (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0,0"))
                                                         (rule "applyEq" (formula "43") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                                         (rule "add_literals" (formula "39") (term "0,1"))
                                                         (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "1"))
                                                         (rule "add_literals" (formula "37") (term "0,1"))
                                                         (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                         (rule "add_literals" (formula "33") (term "0,1"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,1,1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                   )
                                                   (branch "right <= 2147483647 + left FALSE"
                                                      (rule "replace_known_right" (formula "6") (term "0,0,0,0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                      (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "45"))
                                                       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                      (rule "inEqSimp_leqRight" (formula "45"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "25"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "25"))
                                                   (rule "hideAuxiliaryEq" (formula "25"))
                                                   (rule "inEqSimp_geqRight" (formula "44"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                                                   (rule "andLeft" (formula "33"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0"))
                                                   (rule "leq_literals" (formula "33"))
                                                   (rule "closeFalse" (formula "33"))
                                                )
                                             )
                                             (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "26"))
                                                (rule "hideAuxiliaryEq" (formula "26"))
                                                (rule "inEqSimp_geqRight" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "35"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                                (rule "hideAuxiliaryEq" (formula "26"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                                (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "29"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0"))
                                             (rule "add_zero_right" (formula "31") (term "0"))
                                             (rule "leq_literals" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "27") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                                          (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_5 = null)"
                                    (rule "false_right" (formula "43"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 3"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "false_right" (formula "43"))
                                    (rule "expand_inInt" (formula "6") (term "0,0"))
                                    (rule "expand_inInt" (formula "38") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "38") (term "0,0,0,0,1,0"))
                                    (rule "expand_inInt" (formula "11") (term "0,1,0,0,0"))
                                    (rule "expand_inInt" (formula "11") (term "0,1,1,0"))
                                    (rule "expand_inInt" (formula "6") (term "0,1,1,0"))
                                    (rule "expand_inInt" (formula "11") (term "0,0,2,0"))
                                    (rule "expand_inInt" (formula "40") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "40") (term "1,0"))
                                    (rule "expand_inInt" (formula "6") (term "0,0,2,0"))
                                    (rule "expand_inInt" (formula "39") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "expand_inInt" (formula "20") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "expand_inInt" (formula "19") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "19") (term "0,0,0,0,1,0"))
                                    (rule "expand_inShort" (formula "17"))
                                    (rule "expand_inInt" (formula "14"))
                                    (rule "expand_inInt" (formula "13"))
                                    (rule "expand_inInt" (formula "12") (term "0,0,0,0"))
                                    (rule "expand_inInt" (formula "12") (term "1,0"))
                                    (rule "expand_inInt" (formula "10"))
                                    (rule "expand_inInt" (formula "9"))
                                    (rule "expand_inInt" (formula "6") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,0"))
                                    (rule "replace_int_MAX" (formula "6") (term "1,0,0,0"))
                                    (rule "expand_inInt" (formula "6") (term "0,1,1,1,0,0"))
                                    (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                    (rule "expand_inInt" (formula "11") (term "0,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,0,0,2,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0,0,0,2,0"))
                                    (rule "replace_int_MAX" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "40") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "40") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "40") (term "0,1,1,0"))
                                    (rule "replace_int_MAX" (formula "6") (term "1,0,0,0,2,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,0,2,0"))
                                    (rule "replace_int_MAX" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "39") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                    (rule "replace_int_MAX" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                    (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                    (rule "replace_int_MIN" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                    (rule "replace_short_MIN" (formula "17") (term "0,1"))
                                    (rule "replace_short_MAX" (formula "17") (term "1,0"))
                                    (rule "replace_int_MAX" (formula "14") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "14") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "13") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "13") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "12") (term "1,0,1,0"))
                                    (rule "replace_int_MIN" (formula "12") (term "0,1,1,0"))
                                    (rule "replace_int_MIN" (formula "10") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "10") (term "1,0"))
                                    (rule "replace_int_MIN" (formula "9") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "9") (term "1,0"))
                                    (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "6") (term "0,1,0,1,1,1,0,0"))
                                    (rule "replace_int_MAX" (formula "6") (term "1,0,0,1,1,1,0,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,1,1,0,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,0,1,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0,0,0"))
                                    (rule "replace_int_MIN" (formula "11") (term "0,1,0,0"))
                                    (rule "replace_int_MAX" (formula "11") (term "1,0,0,1,1,1,0,0"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,2,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,2,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,0,2,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "12"))
                                    (rule "inEqSimp_commuteLeq" (formula "10"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,2,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,1,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,0,1,1,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,1,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,1,1,1,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,2,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,2,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,2,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,1,1,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,2,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,0,0,2,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,2,1,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,0,2,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,0,1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1"))
                                    (rule "mul_literals" (formula "42") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,2,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,0,2,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,2,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,2,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,2,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,2,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,2,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0,0,2,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,2,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,2,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "29") (term "0,0,0") (ifseqformula "37"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "qeq_literals" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "qeq_literals" (formula "35") (term "0"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "qeq_literals" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_subsumption0" (formula "33") (term "1,0,0") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "qeq_literals" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "29") (term "1,0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "28") (term "1,0,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "26") (term "1,0,0") (ifseqformula "33"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "27") (term "0,0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1"))
                                    (rule "mul_literals" (formula "30") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,2,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,2,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,2,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,2,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,2,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,2,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,0,2,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,1,0,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,1,1,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,1,1,0"))
                                    (rule "qeq_literals" (formula "11") (term "0,1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,2,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,2,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,2,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,2,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,2,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,2,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,2,0"))
                                    (rule "qeq_literals" (formula "11") (term "0,1,0,0,2,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "1,0,1,1,0") (ifseqformula "30"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,1,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0,1,1,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "30"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                                    (rule "commute_and" (formula "41") (term "0,0,0,0"))
                                    (rule "commute_and" (formula "21") (term "0,0,0,0"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                    (rule "ifthenelse_split" (formula "28") (term "0"))
                                    (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "29"))
                                       (rule "hideAuxiliaryEq" (formula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "40"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "qeq_literals" (formula "28") (term "0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "commute_and" (formula "10") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "27") (term "0"))
                                       (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                          (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "28"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "38"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1"))
                                          (rule "mul_literals" (formula "27") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "commute_and" (formula "11") (term "1,0"))
                                          (rule "commute_and" (formula "43") (term "1,0"))
                                          (rule "ifthenelse_split" (formula "26") (term "0"))
                                          (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "36"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1"))
                                             (rule "mul_literals" (formula "26") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0"))
                                             (rule "qeq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "ifthenelse_split" (formula "25") (term "0"))
                                             (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "26"))
                                                (rule "hideAuxiliaryEq" (formula "26"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "34"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0"))
                                                (rule "qeq_literals" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "commute_or" (formula "42") (term "0,0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "ifthenelse_split" (formula "10") (term "1,1,0"))
                                                (branch "right <= 2147483647 + left TRUE"
                                                   (rule "replace_known_left" (formula "6") (term "0,0,1,0,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                                   (rule "replace_known_left" (formula "11") (term "0,0,2,0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0") (ifseqformula "31"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0") (ifseqformula "31"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption1" (formula "12") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "commute_or_2" (formula "42") (term "0,0"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0"))
                                                   (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0,0"))
                                                   (rule "commute_or" (formula "44") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                   (rule "inEqSimp_or_subsumption0" (formula "42") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_or_subsumption0" (formula "22") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or" (formula "13") (term "0"))
                                                   (rule "cnf_rightDist" (formula "45") (term "0"))
                                                   (rule "distr_forallAnd" (formula "45"))
                                                   (rule "andLeft" (formula "45"))
                                                   (rule "commute_or" (formula "46") (term "0"))
                                                   (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                                   (rule "all_pull_out3" (formula "44") (term "0"))
                                                   (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                                   (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                                                   (rule "all_pull_out3" (formula "24") (term "0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "11") (term "0"))
                                                   (branch "right <= 2147483642 + left TRUE"
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_subsumption0" (formula "6") (term "0,0") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0"))
                                                      (rule "qeq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "21"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
                                                      (rule "mul_literals" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "all_pull_out3" (formula "42") (term "0"))
                                                      (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "24") (term "0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                      (rule "allLeft" (formula "45") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                      (rule "replaceKnownSelect_taclet00_13" (formula "45") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000201110000000_19" (formula "45") (term "0,1"))
                                                      (rule "allLeft" (formula "46") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                      (rule "replaceKnownSelect_taclet00_14" (formula "46") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet201110000000_15" (formula "46") (term "0,1"))
                                                      (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                      (rule "replaceKnownSelect_taclet00_12" (formula "47") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000201110000000_18" (formula "47") (term "0,1"))
                                                      (rule "allLeft" (formula "48") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                      (rule "replaceKnownSelect_taclet00_11" (formula "48") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00201110000000_17" (formula "48") (term "0,1"))
                                                      (rule "allLeft" (formula "49") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                      (rule "replaceKnownSelect_taclet00_10" (formula "49") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0201110000000_16" (formula "49") (term "0,1"))
                                                      (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                      (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                      (rule "allLeft" (formula "53") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                      (rule "replaceKnownSelect_taclet00_13" (formula "53") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000201110000000_19" (formula "53") (term "0,1"))
                                                      (rule "allLeft" (formula "54") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                      (rule "replaceKnownSelect_taclet00_14" (formula "54") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet201110000000_15" (formula "54") (term "0,1"))
                                                      (rule "allLeft" (formula "55") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                      (rule "replaceKnownSelect_taclet00_12" (formula "55") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000201110000000_18" (formula "55") (term "0,1"))
                                                      (rule "allLeft" (formula "56") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                      (rule "replaceKnownSelect_taclet00_11" (formula "56") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00201110000000_17" (formula "56") (term "0,1"))
                                                      (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                      (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                                      (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                                      (rule "allLeft" (formula "20") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                      (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                                      (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                                      (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                      (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                                      (rule "replaceKnownSelect_taclet00_10" (formula "64") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0201110000000_16" (formula "64") (term "0,1"))
                                                      (rule "cut_direct" (formula "1") (term "1"))
                                                      (branch "CUT: DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "replace_known_left" (formula "59") (term "1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "true_left" (formula "59"))
                                                         (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "43"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0"))
                                                         (rule "leq_literals" (formula "32"))
                                                         (rule "closeFalse" (formula "32"))
                                                      )
                                                      (branch "CUT: DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "67")))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "replace_known_right" (formula "59") (term "1,0") (ifseqformula "66"))
                                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "1")))
                                                         (rule "true_left" (formula "59"))
                                                         (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "65")))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")))
                                                         (rule "true_left" (formula "52"))
                                                         (rule "inEqSimp_geqRight" (formula "63"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "37"))
                                                         (rule "leq_literals" (formula "7") (term "0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "27"))
                                                         (rule "qeq_literals" (formula "36") (term "0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "closeFalse" (formula "36"))
                                                      )
                                                   )
                                                   (branch "right <= 2147483642 + left FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "48"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0"))
                                                      (rule "qeq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                                (branch "right <= 2147483647 + left FALSE"
                                                   (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                   (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                                   (rule "inEqSimp_leqRight" (formula "45"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0"))
                                                   (rule "qeq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "25"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "25"))
                                                (rule "hideAuxiliaryEq" (formula "25"))
                                                (rule "inEqSimp_geqRight" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                                                (rule "andLeft" (formula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0"))
                                                (rule "add_zero_right" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                          )
                                          (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "inEqSimp_geqRight" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                             (rule "hideAuxiliaryEq" (formula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "32"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0"))
                                             (rule "leq_literals" (formula "30"))
                                             (rule "closeFalse" (formula "30"))
                                          )
                                       )
                                       (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "27") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "27"))
                                          (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                          (rule "hideAuxiliaryEq" (formula "27"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                          (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "29"))
                                          (rule "andLeft" (formula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "31"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0"))
                                          (rule "leq_literals" (formula "31"))
                                          (rule "closeFalse" (formula "31"))
                                       )
                                    )
                                    (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "inEqSimp_geqRight" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "28") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "26") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0"))
                                       (rule "add_zero_right" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "closeFalse" (formula "28"))
                                    )
                                 )
                              )
                              (branch "if x_3 false"
                                  (builtin "One Step Simplification" (formula "42"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                  (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_insertionSort_0,exc_2,heapAfter_insertionSort_0,anon_heap_insertionSort_0") (contract "DualPivotQuicksort[DualPivotQuicksort::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
                                 (branch "Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "44"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "andLeft" (formula "45"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=DualPivotQuicksort_less_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfArrayRange" (formula "46") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfArrayRange" (formula "46") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfSingleton" (formula "46") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
                                    (rule "hideAuxiliaryEq" (formula "46"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=DualPivotQuicksort_great_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfArrayRange" (formula "46") (term "0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfArrayRange" (formula "46") (term "1,0,0") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfUnion" (formula "46") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "elementOfSingleton" (formula "46") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
                                    (rule "hideAuxiliaryEq" (formula "46"))
                                    (rule "commute_and_2" (formula "42") (term "0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0"))
                                    (rule "commute_and_2" (formula "44") (term "0,0"))
                                    (rule "commute_and_2" (formula "45") (term "0,0"))
                                    (rule "commute_and_2" (formula "44") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "42") (term "0,0,1,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "49") (term "1"))
                                    (rule "commute_and" (formula "42") (term "0,0,0"))
                                    (rule "commute_and" (formula "43") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0"))
                                    (rule "commute_and" (formula "44") (term "0,0,0"))
                                    (rule "commute_and" (formula "45") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "45") (term "0,0"))
                                    (rule "commute_and" (formula "44") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "42") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "43") (term "0,0,0,1,0"))
                                    (rule "commute_and_2" (formula "43") (term "0,0,1,0"))
                                    (rule "tryEmpty" (formula "49") (term "1"))
                                    (rule "emptyModality" (formula "49") (term "1"))
                                    (rule "andRight" (formula "49"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "closeTrue" (formula "49"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "allRight" (formula "49") (inst "sk=f_4"))
                                       (rule "allRight" (formula "49") (inst "sk=o_4"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "49"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "eqSymm" (formula "56") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "47"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_subsumption0" (formula "29") (term "1,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_4_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "22"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "27"))
                                       (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,0"))
                                       (rule "times_zero_1" (formula "27") (term "0"))
                                       (rule "qeq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "1,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                       (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "24") (term "1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "28"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "23"))
                                       (rule "hideAuxiliaryEq" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "nnf_imp2or" (formula "45") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "46") (term "0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "11") (term "0"))
                                       (rule "commute_and" (formula "55"))
                                       (rule "commute_and" (formula "54"))
                                       (rule "commute_and" (formula "53"))
                                       (rule "commute_and" (formula "52"))
                                       (rule "commute_and" (formula "51"))
                                       (rule "commute_and" (formula "49"))
                                       (rule "commute_and" (formula "50"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                       (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                       (rule "ifthenelse_split" (formula "10") (term "0,2,0"))
                                       (branch "inInt(left * -1 + right) TRUE"
                                          (rule "replace_known_left" (formula "5") (term "0,0,2,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                          (rule "replace_known_left" (formula "11") (term "0,1,1,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_4 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_4 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "inInt(left * -1 + right) FALSE"
                                          (rule "replace_known_right" (formula "5") (term "0,0,2,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                          (rule "replace_known_right" (formula "10") (term "0,1,0,0,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "48")))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: o_4 = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_4 = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (insertionSort)"
                                     (builtin "One Step Simplification" (formula "41"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,0") (ifseqformula "41"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0") (ifseqformula "20"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "notLeft" (formula "42"))
                                    (rule "close" (formula "44") (ifseqformula "43"))
                                 )
                                 (branch "Pre (insertionSort)"
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")))
                                    (rule "wellFormedAnonEQ" (formula "42") (term "0") (ifseqformula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "5")) (ifInst ""  (formula "19")))
                                    (rule "closeTrue" (formula "42"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_4 = null)"
                     (rule "false_right" (formula "39"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 3"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "false_right" (formula "39"))
                     (rule "expand_inInt" (formula "36") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "36") (term "1,0"))
                     (rule "expand_inInt" (formula "7") (term "0,1,0,0,0"))
                     (rule "expand_inInt" (formula "35") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "2") (term "0,0"))
                     (rule "expand_inInt" (formula "7") (term "0,1,1,0"))
                     (rule "expand_inInt" (formula "7") (term "0,0,2,0"))
                     (rule "expand_inInt" (formula "2") (term "0,0,2,0"))
                     (rule "expand_inInt" (formula "2") (term "0,1,1,0"))
                     (rule "expand_inInt" (formula "35") (term "0,0,0,0,1,0"))
                     (rule "expand_inInt" (formula "34") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "34") (term "0,0,0,0,1,0"))
                     (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "16") (term "0,0,0,0,1,0"))
                     (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "15") (term "0,0,0,0,1,0"))
                     (rule "expand_inShort" (formula "13"))
                     (rule "expand_inInt" (formula "10"))
                     (rule "expand_inInt" (formula "9"))
                     (rule "expand_inInt" (formula "8") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "8") (term "1,0"))
                     (rule "expand_inInt" (formula "6"))
                     (rule "expand_inInt" (formula "5"))
                     (rule "replace_int_MAX" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "36") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "36") (term "0,1,1,0"))
                     (rule "expand_inInt" (formula "7") (term "0,0"))
                     (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
                     (rule "expand_inInt" (formula "2") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "2") (term "1,0,0,0"))
                     (rule "expand_inInt" (formula "2") (term "0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,2,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,2,0"))
                     (rule "replace_int_MAX" (formula "2") (term "1,0,0,0,2,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,2,0"))
                     (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,0"))
                     (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_short_MIN" (formula "13") (term "0,1"))
                     (rule "replace_short_MAX" (formula "13") (term "1,0"))
                     (rule "replace_int_MAX" (formula "10") (term "1,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
                     (rule "replace_int_MIN" (formula "6") (term "0,1"))
                     (rule "replace_int_MAX" (formula "6") (term "1,0"))
                     (rule "replace_int_MIN" (formula "5") (term "0,1"))
                     (rule "replace_int_MAX" (formula "5") (term "1,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0,0,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1,0,0"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,1,0,0"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "5"))
                     (rule "inEqSimp_ltToLeq" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,2,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,2,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,2,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0,0,2,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "14"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,2,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,2,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,2,1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,2,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,2,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,2,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,2,1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,2,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,2,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1"))
                     (rule "mul_literals" (formula "38") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,2,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,2,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,2,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,2,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,0,2,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,2,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,2,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,2,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,2,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,2,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,1,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                     (rule "leq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_subsumption0" (formula "30") (term "1,0,0") (ifseqformula "37"))
                     (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "30") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "35"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                     (rule "leq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "33"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "23") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                     (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                     (rule "mul_literals" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1"))
                     (rule "mul_literals" (formula "30") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,0,0"))
                     (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,0,0"))
                     (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,1,1,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1,1,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,1,1,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,1,0"))
                     (rule "qeq_literals" (formula "2") (term "0,1,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0,0"))
                     (rule "qeq_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,2,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,2,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,2,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,2,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,2,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,2,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,2,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,2,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,2,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,2,0"))
                     (rule "qeq_literals" (formula "2") (term "0,1,0,0,2,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,1,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,1,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,1,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,1,1,0"))
                     (rule "qeq_literals" (formula "7") (term "0,1,0,1,1,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0"))
                     (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,2,0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,2,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,2,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,2,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,2,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,2,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,2,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,2,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,2,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,2,0"))
                     (rule "qeq_literals" (formula "7") (term "0,1,0,0,2,0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "16"))
                     (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                     (rule "mul_literals" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "add_literals" (formula "30") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
                     (rule "leq_literals" (formula "5") (term "0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                     (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                     (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "nnf_imp2or" (formula "43") (term "0"))
                     (rule "nnf_imp2or" (formula "7") (term "0"))
                     (rule "nnf_imp2or" (formula "41") (term "0"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "commute_or" (formula "1"))
                     (rule "nnf_imp2or" (formula "42") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                     (rule "ifthenelse_split" (formula "27") (term "0"))
                     (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                        (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "inEqSimp_commuteLeq" (formula "28"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "40"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1"))
                        (rule "mul_literals" (formula "27") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "qeq_literals" (formula "27") (term "0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "ifthenelse_split" (formula "25") (term "0"))
                        (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                           (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "26"))
                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "qeq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "43") (term "1,0"))
                           (rule "commute_and" (formula "7") (term "1,0"))
                           (rule "ifthenelse_split" (formula "23") (term "0"))
                           (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                              (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "inEqSimp_commuteLeq" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "36"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "mul_literals" (formula "23") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "ifthenelse_split" (formula "21") (term "0"))
                              (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                                 (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "22"))
                                 (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                                 (rule "hideAuxiliaryEq" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "qeq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or" (formula "18") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "1,1,0"))
                                 (branch "right <= 2147483647 + left TRUE"
                                    (rule "replace_known_left" (formula "3") (term "0,0,2,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                    (rule "replace_known_left" (formula "7") (term "0,1,1,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                    (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0") (ifseqformula "31"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_or_2" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "commute_or_2" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "commute_or_2" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                    (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                                    (rule "commute_or" (formula "44") (term "0,0,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or" (formula "18") (term "0,0,0"))
                                    (rule "cnf_rightDist" (formula "44") (term "0"))
                                    (rule "distr_forallAnd" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "commute_or" (formula "45") (term "0"))
                                    (rule "cnf_rightDist" (formula "8") (term "0"))
                                    (rule "distr_forallAnd" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "commute_or" (formula "9") (term "0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                    (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                                    (rule "all_pull_out3" (formula "44") (term "0"))
                                    (rule "shift_paren_or" (formula "44") (term "0,0"))
                                    (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "20") (term "0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "7") (term "0"))
                                    (branch "right <= 2147483642 + left TRUE"
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (term "0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "all_pull_out3" (formula "42") (term "0"))
                                       (rule "shift_paren_or" (formula "42") (term "0,0"))
                                       (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                       (rule "all_pull_out3" (formula "20") (term "0"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "44") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "replaceKnownSelect_taclet00_10" (formula "44") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet02000000_16" (formula "44") (term "0,1"))
                                       (rule "allLeft" (formula "45") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "replaceKnownSelect_taclet00_11" (formula "45") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet002000000_17" (formula "45") (term "0,1"))
                                       (rule "allLeft" (formula "9") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "allLeft" (formula "49") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "replaceKnownSelect_taclet00_10" (formula "49") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet02000000_16" (formula "49") (term "0,1"))
                                       (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "allLeft" (formula "50") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "replaceKnownSelect_taclet00_12" (formula "50") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0002000000_18" (formula "50") (term "0,1"))
                                       (rule "allLeft" (formula "51") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "replaceKnownSelect_taclet00_13" (formula "51") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00002000000_19" (formula "51") (term "0,1"))
                                       (rule "allLeft" (formula "52") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "replaceKnownSelect_taclet00_14" (formula "52") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2000000_15" (formula "52") (term "0,1"))
                                       (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "allLeft" (formula "60") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "replaceKnownSelect_taclet00_11" (formula "60") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet002000000_17" (formula "60") (term "0,1"))
                                       (rule "allLeft" (formula "61") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "replaceKnownSelect_taclet00_12" (formula "61") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0002000000_18" (formula "61") (term "0,1"))
                                       (rule "allLeft" (formula "62") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "replaceKnownSelect_taclet00_13" (formula "62") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00002000000_19" (formula "62") (term "0,1"))
                                       (rule "allLeft" (formula "19") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "replaceKnownSelect_taclet00_14" (formula "64") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2000000_15" (formula "64") (term "0,1"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "replace_known_left" (formula "58") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "49"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "67")))
                                          (rule "true_left" (formula "15"))
                                          (rule "replace_known_right" (formula "9") (term "1,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_right" (formula "58") (term "1,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "58"))
                                          (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "52"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "59") (term "1,0") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "59") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "54") (term "1,0") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "54") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "54") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "38"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch "right <= 2147483642 + left FALSE"
                                       (rule "inEqSimp_leqRight" (formula "48"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                                 (branch "right <= 2147483647 + left FALSE"
                                    (rule "replace_known_right" (formula "6") (term "0,0,1,0,0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                    (rule "inEqSimp_leqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "qeq_literals" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "closeFalse" (formula "14"))
                                 )
                              )
                              (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                                 (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "21"))
                                 (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                 (rule "hideAuxiliaryEq" (formula "21"))
                                 (rule "inEqSimp_geqRight" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0"))
                                 (rule "add_zero_right" (formula "33") (term "0"))
                                 (rule "leq_literals" (formula "33"))
                                 (rule "closeFalse" (formula "33"))
                              )
                           )
                           (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                              (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "24"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                              (rule "polySimp_elimOne" (formula "35") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                              (rule "hideAuxiliaryEq" (formula "22"))
                              (rule "inEqSimp_commuteLeq" (formula "22"))
                              (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                              (rule "mul_literals" (formula "32") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                              (rule "andLeft" (formula "32"))
                              (rule "inEqSimp_homoInEq1" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                              (rule "add_literals" (formula "32") (term "1,1,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0"))
                              (rule "add_zero_right" (formula "32") (term "0"))
                              (rule "leq_literals" (formula "32"))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                        (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "inEqSimp_geqRight" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                           (rule "mul_literals" (formula "37") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                           (rule "polySimp_elimOne" (formula "37") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                           (rule "mul_literals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                           (rule "mul_literals" (formula "31") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "31"))
                           (rule "andLeft" (formula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "leq_literals" (formula "29"))
                           (rule "closeFalse" (formula "29"))
                        )
                     )
                     (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                        (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "inEqSimp_geqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                        (rule "mul_literals" (formula "39") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                        (rule "polySimp_elimOne" (formula "39") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "39"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "26") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "36"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "33"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                        (rule "mul_literals" (formula "30") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                        (rule "andLeft" (formula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                        (rule "add_literals" (formula "28") (term "1,1,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0"))
                        (rule "add_zero_right" (formula "28") (term "0"))
                        (rule "leq_literals" (formula "28"))
                        (rule "closeFalse" (formula "28"))
                     )
                  )
               )
               (branch "Null Reference (x_arr_3 = null)"
                  (rule "false_right" (formula "39"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Case 3"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "false_right" (formula "39"))
                  (rule "expand_inInt" (formula "2") (term "0,0"))
                  (rule "expand_inInt" (formula "34") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "36") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "34") (term "0,0,0,0,1,0"))
                  (rule "expand_inInt" (formula "7") (term "0,1,0,0,0"))
                  (rule "expand_inInt" (formula "7") (term "0,1,1,0"))
                  (rule "expand_inInt" (formula "36") (term "1,0"))
                  (rule "expand_inInt" (formula "2") (term "0,1,1,0"))
                  (rule "expand_inInt" (formula "35") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "35") (term "0,0,0,0,1,0"))
                  (rule "expand_inInt" (formula "7") (term "0,0,2,0"))
                  (rule "expand_inInt" (formula "2") (term "0,0,2,0"))
                  (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "16") (term "0,0,0,0,1,0"))
                  (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "15") (term "0,0,0,0,1,0"))
                  (rule "expand_inShort" (formula "13"))
                  (rule "expand_inInt" (formula "10"))
                  (rule "expand_inInt" (formula "9"))
                  (rule "expand_inInt" (formula "8") (term "0,0,0,0"))
                  (rule "expand_inInt" (formula "8") (term "1,0"))
                  (rule "expand_inInt" (formula "6"))
                  (rule "expand_inInt" (formula "5"))
                  (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
                  (rule "expand_inInt" (formula "2") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "2") (term "1,0,0,0"))
                  (rule "expand_inInt" (formula "2") (term "0,1,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0,1,0"))
                  (rule "expand_inInt" (formula "7") (term "0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,0"))
                  (rule "replace_int_MAX" (formula "36") (term "1,0,1,0"))
                  (rule "replace_int_MIN" (formula "36") (term "0,1,1,0"))
                  (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,0"))
                  (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,2,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,2,0"))
                  (rule "replace_int_MAX" (formula "2") (term "1,0,0,0,2,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,2,0"))
                  (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0,1,0"))
                  (rule "replace_short_MIN" (formula "13") (term "0,1"))
                  (rule "replace_short_MAX" (formula "13") (term "1,0"))
                  (rule "replace_int_MAX" (formula "10") (term "1,0"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1"))
                  (rule "replace_int_MAX" (formula "9") (term "1,0"))
                  (rule "replace_int_MIN" (formula "9") (term "0,1"))
                  (rule "replace_int_MAX" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
                  (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
                  (rule "replace_int_MAX" (formula "6") (term "1,0"))
                  (rule "replace_int_MIN" (formula "6") (term "0,1"))
                  (rule "replace_int_MIN" (formula "5") (term "0,1"))
                  (rule "replace_int_MAX" (formula "5") (term "1,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,1,0,0"))
                  (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,1,0,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,0,0,0,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,0,0,0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0,0,0"))
                  (rule "replace_int_MIN" (formula "7") (term "0,1,0,0"))
                  (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,1,0,0"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "inEqSimp_commuteLeq" (formula "14"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,2,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,2,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,1,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,2,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,2,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,2,1,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,2,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,2,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,2,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,2,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
                  (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1"))
                  (rule "polySimp_rightDist" (formula "38") (term "1"))
                  (rule "mul_literals" (formula "38") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,2,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,2,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,2,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,2,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,2,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "1,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "31"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                  (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_subsumption0" (formula "29") (term "1,0,0") (ifseqformula "36"))
                  (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "29") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                  (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                  (rule "mul_literals" (formula "35") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "35"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                  (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                  (rule "mul_literals" (formula "34") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "34"))
                  (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                  (rule "mul_literals" (formula "33") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "33"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "32"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "23") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                  (rule "mul_literals" (formula "30") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                  (rule "mul_literals" (formula "30") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,2,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,2,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,2,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,2,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,2,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,2,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,2,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,2,0"))
                  (rule "qeq_literals" (formula "2") (term "0,1,0,0,2,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,1,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,1,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,1,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "7") (term "0,1,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,1,1,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1,1,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,1,1,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "2") (term "0,1,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,2,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,2,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,2,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,2,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,2,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,2,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,2,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,2,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,2,0"))
                  (rule "qeq_literals" (formula "7") (term "0,1,0,0,2,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,0,0"))
                  (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0"))
                  (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0,0"))
                  (rule "qeq_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "30"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,0,0"))
                  (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                  (rule "mul_literals" (formula "30") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                  (rule "add_literals" (formula "30") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
                  (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
                  (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "43") (term "0"))
                  (rule "commute_or" (formula "1"))
                  (rule "nnf_imp2or" (formula "42") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                  (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                  (rule "ifthenelse_split" (formula "27") (term "0"))
                  (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "40"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1"))
                     (rule "mul_literals" (formula "27") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0"))
                     (rule "qeq_literals" (formula "27") (term "0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "ifthenelse_split" (formula "25") (term "0"))
                     (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                        (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "qeq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "commute_and" (formula "7") (term "1,0"))
                        (rule "commute_and" (formula "43") (term "1,0"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "24"))
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                           (rule "hideAuxiliaryEq" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "36"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "qeq_literals" (formula "23") (term "0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "ifthenelse_split" (formula "21") (term "0"))
                           (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                              (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "22"))
                              (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                              (rule "hideAuxiliaryEq" (formula "22"))
                              (rule "inEqSimp_commuteLeq" (formula "22"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "commute_or" (formula "42") (term "0,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,0"))
                              (rule "ifthenelse_split" (formula "6") (term "1,1,0"))
                              (branch "right <= 2147483647 + left TRUE"
                                 (rule "replace_known_left" (formula "2") (term "0,1,1,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                 (rule "replace_known_left" (formula "7") (term "0,0,1,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (term "0,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "commute_or_2" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "commute_or_2" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                 (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                                 (rule "commute_or" (formula "18") (term "0,0,0"))
                                 (rule "commute_or" (formula "8") (term "0,0,0"))
                                 (rule "commute_or" (formula "42") (term "0,0,0"))
                                 (rule "commute_or" (formula "44") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "8") (term "0"))
                                 (rule "distr_forallAnd" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "commute_or" (formula "9") (term "0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "45") (term "0"))
                                 (rule "distr_forallAnd" (formula "45"))
                                 (rule "andLeft" (formula "45"))
                                 (rule "commute_or" (formula "46") (term "0"))
                                 (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                                 (rule "all_pull_out3" (formula "44") (term "0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "20") (term "0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "right <= 2147483646 + left TRUE"
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "all_pull_out3" (formula "20") (term "0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "42") (term "0"))
                                    (rule "shift_paren_or" (formula "42") (term "0,0"))
                                    (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "8") (term "0"))
                                    (branch "right <= 2147483642 + left TRUE"
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "allLeft" (formula "9") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "allLeft" (formula "45") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "replaceKnownSelect_taclet00_10" (formula "45") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0200000_16" (formula "45") (term "0,1"))
                                       (rule "allLeft" (formula "46") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "replaceKnownSelect_taclet00_11" (formula "46") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00200000_17" (formula "46") (term "0,1"))
                                       (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "replaceKnownSelect_taclet00_12" (formula "47") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000200000_18" (formula "47") (term "0,1"))
                                       (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "allLeft" (formula "18") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "allLeft" (formula "56") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "replaceKnownSelect_taclet00_13" (formula "56") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000200000_19" (formula "56") (term "0,1"))
                                       (rule "allLeft" (formula "57") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "replaceKnownSelect_taclet00_14" (formula "57") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet200000_15" (formula "57") (term "0,1"))
                                       (rule "allLeft" (formula "19") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "allLeft" (formula "60") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                       (rule "replaceKnownSelect_taclet00_10" (formula "60") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0200000_16" (formula "60") (term "0,1"))
                                       (rule "allLeft" (formula "61") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                       (rule "replaceKnownSelect_taclet00_11" (formula "61") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00200000_17" (formula "61") (term "0,1"))
                                       (rule "allLeft" (formula "62") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                       (rule "replaceKnownSelect_taclet00_12" (formula "62") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000200000_18" (formula "62") (term "0,1"))
                                       (rule "allLeft" (formula "63") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                       (rule "replaceKnownSelect_taclet00_13" (formula "63") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000200000_19" (formula "63") (term "0,1"))
                                       (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                       (rule "replaceKnownSelect_taclet00_14" (formula "64") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet200000_15" (formula "64") (term "0,1"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "replace_known_left" (formula "59") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "10"))
                                          (rule "replace_known_right" (formula "60") (term "1,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "60"))
                                          (rule "replace_known_right" (formula "54") (term "1,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "54"))
                                          (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "37"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "36") (term "0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "closeFalse" (formula "36"))
                                       )
                                    )
                                    (branch "right <= 2147483642 + left FALSE"
                                       (rule "inEqSimp_leqRight" (formula "47"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                                 (branch "right <= 2147483646 + left FALSE"
                                    (rule "inEqSimp_leqRight" (formula "48"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0"))
                                    (rule "qeq_literals" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "1"))
                                    (rule "add_literals" (formula "43") (term "0,1"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                    (rule "add_literals" (formula "20") (term "0,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0"))
                                    (rule "qeq_literals" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                    (rule "add_literals" (formula "40") (term "0,1"))
                                    (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                    (rule "add_literals" (formula "34") (term "0,1"))
                                    (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                    (rule "add_literals" (formula "38") (term "0,1"))
                                    (rule "applyEq" (formula "23") (term "2,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                    (rule "add_literals" (formula "35") (term "0,1"))
                                    (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "17"))
                                    (rule "leq_literals" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "17"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "closeFalse" (formula "14"))
                                 )
                              )
                              (branch "right <= 2147483647 + left FALSE"
                                 (rule "replace_known_right" (formula "2") (term "0,1,1,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                 (rule "replace_known_right" (formula "6") (term "0,0,2,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                 (rule "inEqSimp_leqRight" (formula "45"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                           )
                           (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "21"))
                              (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                              (rule "hideAuxiliaryEq" (formula "21"))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                              (rule "mul_literals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                              (rule "andLeft" (formula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                              (rule "add_literals" (formula "33") (term "1,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0"))
                              (rule "add_zero_right" (formula "33") (term "0"))
                              (rule "leq_literals" (formula "33"))
                              (rule "closeFalse" (formula "33"))
                           )
                        )
                        (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                           (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "23"))
                           (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "inEqSimp_geqRight" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                           (rule "mul_literals" (formula "35") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "35"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                           (rule "mul_literals" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                           (rule "andLeft" (formula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                           (rule "add_literals" (formula "32") (term "1,1,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0"))
                           (rule "add_zero_right" (formula "32") (term "0"))
                           (rule "leq_literals" (formula "32"))
                           (rule "closeFalse" (formula "32"))
                        )
                     )
                     (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                        (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25"))
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "inEqSimp_geqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                        (rule "polySimp_elimOne" (formula "37") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "37"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "29"))
                        (rule "andLeft" (formula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                        (rule "add_literals" (formula "31") (term "1,1,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0"))
                        (rule "add_zero_right" (formula "31") (term "0"))
                        (rule "leq_literals" (formula "31"))
                        (rule "closeFalse" (formula "31"))
                     )
                  )
                  (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
                     (rule "hideAuxiliaryEq" (formula "27"))
                     (rule "inEqSimp_geqRight" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "39"))
                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "26") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "inEqSimp_commuteLeq" (formula "26"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "33"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                     (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                     (rule "mul_literals" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                     (rule "andLeft" (formula "28"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,1,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0"))
                     (rule "add_zero_right" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
               )
            )
            (branch "Null Reference (x_arr_2 = null)"
               (rule "false_right" (formula "39"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 3"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                (builtin "One Step Simplification" (formula "39"))
               (rule "false_right" (formula "39"))
               (rule "expand_inInt" (formula "2") (term "0,0"))
               (rule "expand_inInt" (formula "34") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "34") (term "0,0,0,0,1,0"))
               (rule "expand_inInt" (formula "7") (term "0,1,0,0,0"))
               (rule "expand_inInt" (formula "36") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "7") (term "0,1,1,0"))
               (rule "expand_inInt" (formula "7") (term "0,0,2,0"))
               (rule "expand_inInt" (formula "2") (term "0,1,1,0"))
               (rule "expand_inInt" (formula "2") (term "0,0,2,0"))
               (rule "expand_inInt" (formula "36") (term "1,0"))
               (rule "expand_inInt" (formula "35") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "35") (term "0,0,0,0,1,0"))
               (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "16") (term "0,0,0,0,1,0"))
               (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "15") (term "0,0,0,0,1,0"))
               (rule "expand_inShort" (formula "13"))
               (rule "expand_inInt" (formula "10"))
               (rule "expand_inInt" (formula "9"))
               (rule "expand_inInt" (formula "8") (term "0,0,0,0"))
               (rule "expand_inInt" (formula "8") (term "1,0"))
               (rule "expand_inInt" (formula "6"))
               (rule "expand_inInt" (formula "5"))
               (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
               (rule "expand_inInt" (formula "2") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "2") (term "1,0,0,0"))
               (rule "expand_inInt" (formula "2") (term "0,1,1,1,0,0"))
               (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0,1,0"))
               (rule "expand_inInt" (formula "7") (term "0,0"))
               (rule "replace_int_MAX" (formula "36") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,0"))
               (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,0"))
               (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,2,0"))
               (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,2,0"))
               (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,0"))
               (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,0"))
               (rule "replace_int_MAX" (formula "2") (term "1,0,0,0,2,0"))
               (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,2,0"))
               (rule "replace_int_MIN" (formula "36") (term "0,1,1,0"))
               (rule "replace_int_MAX" (formula "36") (term "1,0,1,0"))
               (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0,1,0"))
               (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0,1,0"))
               (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0,1,0"))
               (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0,1,0"))
               (rule "replace_short_MIN" (formula "13") (term "0,1"))
               (rule "replace_short_MAX" (formula "13") (term "1,0"))
               (rule "replace_int_MAX" (formula "10") (term "1,0"))
               (rule "replace_int_MIN" (formula "10") (term "0,1"))
               (rule "replace_int_MAX" (formula "9") (term "1,0"))
               (rule "replace_int_MIN" (formula "9") (term "0,1"))
               (rule "replace_int_MAX" (formula "8") (term "1,0,0,0,0,0"))
               (rule "replace_int_MIN" (formula "8") (term "0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
               (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
               (rule "replace_int_MAX" (formula "6") (term "1,0"))
               (rule "replace_int_MIN" (formula "6") (term "0,1"))
               (rule "replace_int_MAX" (formula "5") (term "1,0"))
               (rule "replace_int_MIN" (formula "5") (term "0,1"))
               (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,1,0,0"))
               (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,1,0,0"))
               (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,1,0,0"))
               (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,0,0,0,0"))
               (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,0,0,0,0"))
               (rule "replace_int_MAX" (formula "7") (term "1,0,0,0"))
               (rule "replace_int_MIN" (formula "7") (term "0,1,0,0"))
               (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,1,0,0"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "5"))
               (rule "inEqSimp_ltToLeq" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,0"))
               (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,2,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,2,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,2,0"))
               (rule "mul_literals" (formula "9") (term "1,0,1,0,0,2,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,2,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,2,0"))
               (rule "inEqSimp_commuteLeq" (formula "18"))
               (rule "inEqSimp_commuteLeq" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "8"))
               (rule "inEqSimp_commuteLeq" (formula "6"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,2,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,1,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,1,0,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,2,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,2,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,2,1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,2,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,2,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,2,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,2,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,2,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,0,0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38"))
               (rule "polySimp_mulComm0" (formula "38") (term "1"))
               (rule "polySimp_rightDist" (formula "38") (term "1"))
               (rule "mul_literals" (formula "38") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "polySimp_elimOne" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,2,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,2,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,2,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,2,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,2,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,2,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,2,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,2,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,2,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,1,0,0,2,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,2,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,2,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
               (rule "leq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_subsumption0" (formula "30") (term "1,0,0") (ifseqformula "37"))
               (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
               (rule "qeq_literals" (formula "30") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,0") (ifseqformula "32"))
               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
               (rule "qeq_literals" (formula "24") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
               (rule "leq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
               (rule "leq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
               (rule "polySimp_rightDist" (formula "35") (term "0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
               (rule "polySimp_rightDist" (formula "34") (term "0,0"))
               (rule "mul_literals" (formula "34") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "34"))
               (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
               (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "33"))
               (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
               (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
               (rule "polySimp_rightDist" (formula "32") (term "0,0"))
               (rule "mul_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
               (rule "polySimp_elimOne" (formula "32") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "32"))
               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "23") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1"))
               (rule "polySimp_rightDist" (formula "30") (term "1"))
               (rule "mul_literals" (formula "30") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,2,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,2,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,2,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,2,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,2,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,2,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,2,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,2,0"))
               (rule "qeq_literals" (formula "2") (term "0,1,0,0,2,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0,0"))
               (rule "qeq_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,1,1,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1,1,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,1,1,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,1,0"))
               (rule "qeq_literals" (formula "2") (term "0,1,0,1,1,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,2,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,2,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,2,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,2,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,2,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,2,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,2,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,2,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,2,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,2,0"))
               (rule "qeq_literals" (formula "7") (term "0,1,0,0,2,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,0,0"))
               (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,0,0"))
               (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,1,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,1,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,1,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,1,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0,1,1,0"))
               (rule "qeq_literals" (formula "7") (term "0,1,0,1,1,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0"))
               (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "16"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "polySimp_elimOne" (formula "30") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
               (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
               (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "nnf_imp2or" (formula "7") (term "0"))
               (rule "nnf_imp2or" (formula "41") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "43") (term "0"))
               (rule "commute_or" (formula "1"))
               (rule "nnf_imp2or" (formula "42") (term "0"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
               (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "43") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
               (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
               (rule "mul_literals" (formula "43") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
               (rule "ifthenelse_split" (formula "27") (term "0"))
               (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                  (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                  (rule "hideAuxiliaryEq" (formula "28"))
                  (rule "inEqSimp_commuteLeq" (formula "28"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "40"))
                  (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                  (rule "mul_literals" (formula "27") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
                  (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0"))
                  (rule "qeq_literals" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "ifthenelse_split" (formula "25") (term "0"))
                  (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "inEqSimp_commuteLeq" (formula "26"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1"))
                     (rule "mul_literals" (formula "25") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "qeq_literals" (formula "25") (term "0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "commute_and" (formula "7") (term "1,0"))
                     (rule "commute_and" (formula "43") (term "1,0"))
                     (rule "ifthenelse_split" (formula "23") (term "0"))
                     (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "36"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "ifthenelse_split" (formula "21") (term "0"))
                        (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "qeq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "commute_or" (formula "42") (term "0,0,0"))
                           (rule "commute_or" (formula "18") (term "0,0,0"))
                           (rule "ifthenelse_split" (formula "6") (term "0,2,0"))
                           (branch "right <= 2147483647 + left TRUE"
                              (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                              (rule "replace_known_left" (formula "2") (term "0,1,1,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "2") (term "0,0,0") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                              (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "commute_or_2" (formula "8") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
                              (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "commute_or_2" (formula "42") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                              (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "commute_or_2" (formula "18") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0"))
                              (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "commute_or_2" (formula "44") (term "0,0"))
                              (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                              (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                              (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                              (rule "commute_or" (formula "8") (term "0,0,0"))
                              (rule "commute_or" (formula "42") (term "0,0,0"))
                              (rule "commute_or" (formula "18") (term "0,0,0"))
                              (rule "commute_or" (formula "44") (term "0,0,0"))
                              (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                              (rule "cnf_rightDist" (formula "8") (term "0"))
                              (rule "distr_forallAnd" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "commute_or" (formula "9") (term "0"))
                              (rule "cnf_rightDist" (formula "45") (term "0"))
                              (rule "distr_forallAnd" (formula "45"))
                              (rule "andLeft" (formula "45"))
                              (rule "commute_or" (formula "46") (term "0"))
                              (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                              (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                              (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                              (rule "all_pull_out3" (formula "44") (term "0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "20") (term "0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "right <= 2147483646 + left TRUE"
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0"))
                                 (rule "qeq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "all_pull_out3" (formula "42") (term "0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "20") (term "0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "8") (term "0"))
                                 (branch "right <= 2147483642 + left TRUE"
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "16"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                    (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                    (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                    (rule "allLeft" (formula "48") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                    (rule "replaceKnownSelect_taclet00_10" (formula "48") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet020000_16" (formula "48") (term "0,1"))
                                    (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                    (rule "replaceKnownSelect_taclet00_10" (formula "47") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet020000_16" (formula "47") (term "0,1"))
                                    (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                    (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                    (rule "allLeft" (formula "9") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                    (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                    (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                    (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                    (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                    (rule "allLeft" (formula "55") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                    (rule "replaceKnownSelect_taclet00_11" (formula "55") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0020000_17" (formula "55") (term "0,1"))
                                    (rule "allLeft" (formula "56") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                    (rule "replaceKnownSelect_taclet00_12" (formula "56") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020000_18" (formula "56") (term "0,1"))
                                    (rule "allLeft" (formula "57") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                    (rule "replaceKnownSelect_taclet00_13" (formula "57") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000020000_19" (formula "57") (term "0,1"))
                                    (rule "allLeft" (formula "58") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                    (rule "replaceKnownSelect_taclet00_14" (formula "58") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20000_15" (formula "58") (term "0,1"))
                                    (rule "allLeft" (formula "61") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                    (rule "replaceKnownSelect_taclet00_11" (formula "61") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0020000_17" (formula "61") (term "0,1"))
                                    (rule "allLeft" (formula "62") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                    (rule "replaceKnownSelect_taclet00_12" (formula "62") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00020000_18" (formula "62") (term "0,1"))
                                    (rule "allLeft" (formula "63") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                    (rule "replaceKnownSelect_taclet00_13" (formula "63") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000020000_19" (formula "63") (term "0,1"))
                                    (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                    (rule "replaceKnownSelect_taclet00_14" (formula "64") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20000_15" (formula "64") (term "0,1"))
                                    (rule "cut_direct" (formula "1") (term "1"))
                                    (branch "CUT: DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "replace_known_left" (formula "59") (term "1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "true_left" (formula "59"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "45"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0"))
                                       (rule "add_zero_right" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "closeFalse" (formula "28"))
                                    )
                                    (branch "CUT: DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "67")))
                                       (rule "true_left" (formula "11"))
                                       (rule "replace_known_right" (formula "61") (term "1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "61"))
                                       (rule "replace_known_right" (formula "55") (term "1,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "55"))
                                       (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "64")))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_geqRight" (formula "63"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "57") (term "1,0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "57") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "57") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "inEqSimp_contradInEq0" (formula "12") (term "1,0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "12") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "inEqSimp_contradInEq0" (formula "62") (term "1,0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "62") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "62") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "62") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                       (rule "mul_literals" (formula "47") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                       (rule "add_literals" (formula "47") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                       (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                       (rule "polySimp_elimOne" (formula "47") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "63") (term "1,0") (ifseqformula "47"))
                                       (rule "qeq_literals" (formula "63") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "inEqSimp_subsumption0" (formula "12") (term "0,0") (ifseqformula "47"))
                                       (rule "leq_literals" (formula "12") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "46"))
                                       (rule "leq_literals" (formula "16") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_subsumption0" (formula "56") (term "0,0") (ifseqformula "45"))
                                       (rule "leq_literals" (formula "56") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "inEqSimp_subsumption0" (formula "60") (term "0") (ifseqformula "45"))
                                       (rule "leq_literals" (formula "60") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "60"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "22"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeFalse" (formula "34"))
                                    )
                                 )
                                 (branch "right <= 2147483642 + left FALSE"
                                    (rule "inEqSimp_leqRight" (formula "47"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                              )
                              (branch "right <= 2147483646 + left FALSE"
                                 (rule "inEqSimp_leqRight" (formula "48"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "8") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0"))
                                 (rule "qeq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                 (rule "add_literals" (formula "20") (term "0,1"))
                                 (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "1"))
                                 (rule "add_literals" (formula "37") (term "0,1"))
                                 (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                 (rule "add_literals" (formula "35") (term "0,1"))
                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,0"))
                                 (rule "times_zero_1" (formula "8") (term "0"))
                                 (rule "qeq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,1,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "1"))
                                 (rule "add_literals" (formula "37") (term "0,1"))
                                 (rule "applyEq" (formula "22") (term "2,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                 (rule "add_literals" (formula "41") (term "0,1"))
                                 (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                 (rule "add_literals" (formula "39") (term "0,1"))
                                 (rule "applyEq" (formula "43") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "17"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeFalse" (formula "14"))
                              )
                           )
                           (branch "right <= 2147483647 + left FALSE"
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                              (rule "replace_known_right" (formula "6") (term "0,0,0,0,0") (ifseqformula "45"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                              (rule "inEqSimp_leqRight" (formula "45"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0"))
                              (rule "qeq_literals" (formula "31") (term "0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "closeFalse" (formula "14"))
                           )
                        )
                        (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                           (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "21"))
                           (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                           (rule "hideAuxiliaryEq" (formula "21"))
                           (rule "inEqSimp_geqRight" (formula "44"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                           (rule "mul_literals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                           (rule "andLeft" (formula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                           (rule "add_literals" (formula "33") (term "1,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0"))
                           (rule "add_zero_right" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                     )
                     (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "inEqSimp_geqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                        (rule "mul_literals" (formula "35") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "35"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                        (rule "andLeft" (formula "32"))
                        (rule "inEqSimp_homoInEq1" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                        (rule "add_literals" (formula "32") (term "1,1,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0"))
                        (rule "add_zero_right" (formula "32") (term "0"))
                        (rule "leq_literals" (formula "32"))
                        (rule "closeFalse" (formula "32"))
                     )
                  )
                  (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "inEqSimp_geqRight" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "37"))
                     (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "24") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                     (rule "mul_literals" (formula "31") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "29"))
                     (rule "andLeft" (formula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "1,1,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0"))
                     (rule "add_zero_right" (formula "31") (term "0"))
                     (rule "leq_literals" (formula "31"))
                     (rule "closeFalse" (formula "31"))
                  )
               )
               (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                  (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
                  (rule "hideAuxiliaryEq" (formula "27"))
                  (rule "inEqSimp_geqRight" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                  (rule "mul_literals" (formula "39") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "39") (term "0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                  (rule "polySimp_elimOne" (formula "39") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "39"))
                  (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "26") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "26"))
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                  (rule "hideAuxiliaryEq" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                  (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                  (rule "mul_literals" (formula "36") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "36"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                  (rule "mul_literals" (formula "33") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "33"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                  (rule "mul_literals" (formula "30") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                  (rule "andLeft" (formula "28"))
                  (rule "inEqSimp_homoInEq1" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0"))
                  (rule "add_zero_right" (formula "28") (term "0"))
                  (rule "leq_literals" (formula "28"))
                  (rule "closeFalse" (formula "28"))
               )
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
            (rule "false_right" (formula "39"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Case 3"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
             (builtin "One Step Simplification" (formula "39"))
            (rule "false_right" (formula "39"))
            (rule "expand_inInt" (formula "36") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "34") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "34") (term "0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "36") (term "1,0"))
            (rule "expand_inInt" (formula "2") (term "0,1,0,0,0"))
            (rule "expand_inInt" (formula "35") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "35") (term "0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "16") (term "0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "7") (term "0,0,2,0"))
            (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "15") (term "0,0,0,0,1,0"))
            (rule "expand_inInt" (formula "2") (term "0,1,1,0"))
            (rule "expand_inInt" (formula "2") (term "0,0,2,0"))
            (rule "expand_inShort" (formula "13"))
            (rule "expand_inInt" (formula "10"))
            (rule "expand_inInt" (formula "9"))
            (rule "expand_inInt" (formula "8") (term "0,0,0,0"))
            (rule "expand_inInt" (formula "8") (term "1,0"))
            (rule "expand_inInt" (formula "7") (term "0,0"))
            (rule "expand_inInt" (formula "7") (term "0,1,1,0"))
            (rule "expand_inInt" (formula "6"))
            (rule "expand_inInt" (formula "5"))
            (rule "replace_int_MAX" (formula "36") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0,1,0"))
            (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0,1,0"))
            (rule "replace_int_MAX" (formula "36") (term "1,0,1,0"))
            (rule "replace_int_MIN" (formula "36") (term "0,1,1,0"))
            (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,0,0"))
            (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,0,0,0"))
            (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0,1,0"))
            (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0,1,0"))
            (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0,1,0"))
            (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,2,0"))
            (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,2,0"))
            (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0,1,0"))
            (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0,1,0"))
            (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,0"))
            (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,0"))
            (rule "replace_int_MAX" (formula "2") (term "1,0,0,0,2,0"))
            (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,2,0"))
            (rule "replace_short_MIN" (formula "13") (term "0,1"))
            (rule "replace_short_MAX" (formula "13") (term "1,0"))
            (rule "replace_int_MAX" (formula "10") (term "1,0"))
            (rule "replace_int_MIN" (formula "10") (term "0,1"))
            (rule "replace_int_MAX" (formula "9") (term "1,0"))
            (rule "replace_int_MIN" (formula "9") (term "0,1"))
            (rule "replace_int_MAX" (formula "8") (term "1,0,0,0,0,0"))
            (rule "replace_int_MIN" (formula "8") (term "0,1,0,0,0,0"))
            (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
            (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
            (rule "replace_int_MIN" (formula "7") (term "0,1,0,0"))
            (rule "expand_inInt" (formula "7") (term "0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "7") (term "1,0,0,0"))
            (rule "expand_inInt" (formula "7") (term "0,1,1,1,0,0"))
            (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,0"))
            (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,0"))
            (rule "replace_int_MIN" (formula "6") (term "0,1"))
            (rule "replace_int_MAX" (formula "6") (term "1,0"))
            (rule "replace_int_MAX" (formula "5") (term "1,0"))
            (rule "replace_int_MIN" (formula "5") (term "0,1"))
            (rule "expand_inInt" (formula "2") (term "0,0"))
            (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,0,0,0,0"))
            (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,0,0,0,0"))
            (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,1,0,0"))
            (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,1,0,0"))
            (rule "replace_int_MAX" (formula "2") (term "1,0,0,0"))
            (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "5"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "37"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "34"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "38"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "35"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "37") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "polySimp_addComm1" (formula "33") (term "0"))
            (rule "polySimp_addComm1" (formula "36") (term "0"))
            (rule "polySimp_addComm1" (formula "35") (term "0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,2,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,2,0"))
            (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,2,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,2,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0,0,2,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,2,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,2,0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,2,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,1,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,2,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,2,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,2,1,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,2,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,2,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,2,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,2,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,2,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,0,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38"))
            (rule "polySimp_mulComm0" (formula "38") (term "1"))
            (rule "polySimp_rightDist" (formula "38") (term "1"))
            (rule "mul_literals" (formula "38") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "37"))
            (rule "polySimp_mulLiterals" (formula "37") (term "0"))
            (rule "polySimp_elimOne" (formula "37") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0"))
            (rule "polySimp_elimOne" (formula "36") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,2,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,2,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,2,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,2,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,2,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,2,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,2,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,2,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,2,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,2,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,0,2,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,2,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,2,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,1,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "33"))
            (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
            (rule "qeq_literals" (formula "25") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_subsumption0" (formula "30") (term "1,0,0") (ifseqformula "37"))
            (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
            (rule "qeq_literals" (formula "30") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
            (rule "leq_literals" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
            (rule "polySimp_rightDist" (formula "35") (term "0,0"))
            (rule "mul_literals" (formula "35") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "35") (term "0"))
            (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "35"))
            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
            (rule "polySimp_elimOne" (formula "35") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "35"))
            (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
            (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "34") (term "0,0"))
            (rule "mul_literals" (formula "34") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "34"))
            (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
            (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
            (rule "polySimp_rightDist" (formula "33") (term "0,0"))
            (rule "mul_literals" (formula "33") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "33"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
            (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
            (rule "polySimp_rightDist" (formula "32") (term "0,0"))
            (rule "mul_literals" (formula "32") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "32") (term "0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
            (rule "polySimp_elimOne" (formula "32") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "32"))
            (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "23") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1"))
            (rule "polySimp_rightDist" (formula "30") (term "1"))
            (rule "mul_literals" (formula "30") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,1,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,0,1,1,0"))
            (rule "qeq_literals" (formula "7") (term "0,1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "7") (term "0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,0,0"))
            (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,2,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,2,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,2,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,2,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,2,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,2,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,2,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,2,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,2,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,2,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,2,0"))
            (rule "qeq_literals" (formula "7") (term "0,1,0,0,2,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,1,1,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1,1,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,1,0"))
            (rule "qeq_literals" (formula "2") (term "0,1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,2,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,2,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,2,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,2,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,2,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,2,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,2,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,2,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,2,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,2,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,2,0"))
            (rule "qeq_literals" (formula "2") (term "0,1,0,0,2,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,0,0"))
            (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "16"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
            (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
            (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "nnf_imp2or" (formula "43") (term "0"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_imp2or" (formula "41") (term "0"))
            (rule "commute_or" (formula "1"))
            (rule "nnf_imp2or" (formula "42") (term "0"))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
            (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "mul_literals" (formula "7") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
            (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
            (rule "mul_literals" (formula "41") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
            (rule "ifthenelse_split" (formula "27") (term "0"))
            (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
               (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "28"))
               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "40"))
               (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0"))
               (rule "polySimp_addComm0" (formula "27") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1"))
               (rule "polySimp_rightDist" (formula "27") (term "1"))
               (rule "mul_literals" (formula "27") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
               (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0"))
               (rule "qeq_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
               (rule "commute_and" (formula "2") (term "0,0"))
               (rule "ifthenelse_split" (formula "25") (term "0"))
               (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
                  (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "26"))
                  (rule "hideAuxiliaryEq" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                  (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0"))
                  (rule "qeq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_and" (formula "43") (term "1,0"))
                  (rule "commute_and" (formula "7") (term "1,0"))
                  (rule "ifthenelse_split" (formula "23") (term "0"))
                  (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "36"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1"))
                     (rule "polySimp_rightDist" (formula "23") (term "1"))
                     (rule "mul_literals" (formula "23") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0"))
                     (rule "qeq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "ifthenelse_split" (formula "21") (term "0"))
                     (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "qeq_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "commute_or" (formula "42") (term "0,0,0"))
                        (rule "commute_or" (formula "18") (term "0,0,0"))
                        (rule "ifthenelse_split" (formula "2") (term "0,2,0"))
                        (branch "right <= 2147483647 + left TRUE"
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                           (rule "replace_known_left" (formula "7") (term "0,1,1,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                           (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                           (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                           (rule "mul_literals" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "commute_or_2" (formula "44") (term "0,0"))
                           (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "commute_or_2" (formula "18") (term "0,0"))
                           (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0"))
                           (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "commute_or_2" (formula "8") (term "0,0"))
                           (rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
                           (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "commute_or_2" (formula "42") (term "0,0"))
                           (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                           (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                           (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                           (rule "commute_or" (formula "44") (term "0,0,0"))
                           (rule "commute_or" (formula "18") (term "0,0,0"))
                           (rule "commute_or" (formula "8") (term "0,0,0"))
                           (rule "commute_or" (formula "42") (term "0,0,0"))
                           (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                           (rule "cnf_rightDist" (formula "44") (term "0"))
                           (rule "distr_forallAnd" (formula "44"))
                           (rule "andLeft" (formula "44"))
                           (rule "commute_or" (formula "45") (term "0"))
                           (rule "cnf_rightDist" (formula "8") (term "0"))
                           (rule "distr_forallAnd" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "commute_or" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                           (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                           (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                           (rule "all_pull_out3" (formula "44") (term "0"))
                           (rule "shift_paren_or" (formula "44") (term "0,0"))
                           (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "20") (term "0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "right <= 2147483646 + left TRUE"
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                              (rule "mul_literals" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "3"))
                              (rule "leq_literals" (formula "32") (term "0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "all_pull_out3" (formula "20") (term "0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "42") (term "0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                              (rule "ifthenelse_split" (formula "8") (term "0"))
                              (branch "right <= 2147483642 + left TRUE"
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "allLeft" (formula "44") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                 (rule "replaceKnownSelect_taclet00_10" (formula "44") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet02000_16" (formula "44") (term "0,1"))
                                 (rule "allLeft" (formula "46") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                 (rule "replaceKnownSelect_taclet00_10" (formula "46") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet02000_16" (formula "46") (term "0,1"))
                                 (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                 (rule "replaceKnownSelect_taclet00_11" (formula "47") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet002000_17" (formula "47") (term "0,1"))
                                 (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                 (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                 (rule "allLeft" (formula "50") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                 (rule "replaceKnownSelect_taclet00_12" (formula "50") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0002000_18" (formula "50") (term "0,1"))
                                 (rule "allLeft" (formula "51") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                 (rule "replaceKnownSelect_taclet00_13" (formula "51") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00002000_19" (formula "51") (term "0,1"))
                                 (rule "allLeft" (formula "52") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                 (rule "replaceKnownSelect_taclet00_14" (formula "52") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "52") (term "0,1"))
                                 (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                 (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                 (rule "allLeft" (formula "49") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                 (rule "replaceKnownSelect_taclet00_12" (formula "49") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0002000_18" (formula "49") (term "0,1"))
                                 (rule "allLeft" (formula "50") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                 (rule "replaceKnownSelect_taclet00_11" (formula "50") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet002000_17" (formula "50") (term "0,1"))
                                 (rule "allLeft" (formula "51") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                 (rule "replaceKnownSelect_taclet00_13" (formula "51") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00002000_19" (formula "51") (term "0,1"))
                                 (rule "allLeft" (formula "52") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                 (rule "replaceKnownSelect_taclet00_14" (formula "52") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2000_15" (formula "52") (term "0,1"))
                                 (rule "allLeft" (formula "9") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                                 (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                 (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                                 (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                                 (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                                 (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                                 (rule "cut_direct" (formula "1") (term "1"))
                                 (branch "CUT: DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "true_left" (formula "62"))
                                    (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "43"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0"))
                                    (rule "add_zero_right" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "closeFalse" (formula "28"))
                                 )
                                 (branch "CUT: DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "57") (term "1,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "57"))
                                    (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "66")))
                                    (rule "true_left" (formula "12"))
                                    (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "65"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "17"))
                                    (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")))
                                    (rule "true_left" (formula "60"))
                                    (rule "inEqSimp_geqRight" (formula "63"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "add_literals" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "62") (term "0,0,0") (ifseqformula "43"))
                                    (rule "leq_literals" (formula "62") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "true_left" (formula "62"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0,0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "57") (term "1,0,0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "57") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0,0") (ifseqformula "43"))
                                    (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (term "0,0") (ifseqformula "43"))
                                    (rule "leq_literals" (formula "18") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_subsumption0" (formula "13") (term "0,0") (ifseqformula "42"))
                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_subsumption0" (formula "55") (term "0,0") (ifseqformula "41"))
                                    (rule "leq_literals" (formula "55") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "true_left" (formula "55"))
                                    (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "31"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "closeFalse" (formula "30"))
                                 )
                              )
                              (branch "right <= 2147483642 + left FALSE"
                                 (rule "inEqSimp_leqRight" (formula "47"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "right <= 2147483646 + left FALSE"
                              (rule "inEqSimp_leqRight" (formula "48"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0"))
                              (rule "qeq_literals" (formula "33") (term "0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "8") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "43") (term "1"))
                              (rule "add_literals" (formula "43") (term "0,1"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "20") (term "1"))
                              (rule "add_literals" (formula "20") (term "0,1"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "35") (term "1"))
                              (rule "add_literals" (formula "35") (term "0,1"))
                              (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "41") (term "1"))
                              (rule "add_literals" (formula "41") (term "0,1"))
                              (rule "applyEq" (formula "45") (term "1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "39") (term "1"))
                              (rule "add_literals" (formula "39") (term "0,1"))
                              (rule "applyEq" (formula "24") (term "2,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "applyEq" (formula "21") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "qeq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                              (rule "polySimp_addAssoc" (formula "35") (term "1"))
                              (rule "add_literals" (formula "35") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "17"))
                              (rule "leq_literals" (formula "31") (term "0"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "closeFalse" (formula "14"))
                           )
                        )
                        (branch "right <= 2147483647 + left FALSE"
                           (rule "replace_known_right" (formula "6") (term "0,0,2,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                           (rule "replace_known_right" (formula "2") (term "0,1,1,0") (ifseqformula "45"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                           (rule "inEqSimp_leqRight" (formula "45"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "qeq_literals" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
                           (rule "leq_literals" (formula "31") (term "0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "inEqSimp_geqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "33"))
                        (rule "andLeft" (formula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                        (rule "add_literals" (formula "31") (term "1,1,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0"))
                        (rule "add_zero_right" (formula "31") (term "0"))
                        (rule "leq_literals" (formula "31"))
                        (rule "closeFalse" (formula "31"))
                     )
                  )
                  (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                     (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "35"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "32"))
                     (rule "andLeft" (formula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                     (rule "add_literals" (formula "30") (term "1,1,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0"))
                     (rule "add_zero_right" (formula "30") (term "0"))
                     (rule "leq_literals" (formula "30"))
                     (rule "closeFalse" (formula "30"))
                  )
               )
               (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "inEqSimp_geqRight" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                  (rule "mul_literals" (formula "37") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "37"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                  (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                  (rule "mul_literals" (formula "34") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "34"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                  (rule "mul_literals" (formula "31") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "31"))
                  (rule "andLeft" (formula "29"))
                  (rule "inEqSimp_homoInEq1" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0"))
                  (rule "add_zero_right" (formula "29") (term "0"))
                  (rule "leq_literals" (formula "29"))
                  (rule "closeFalse" (formula "29"))
               )
            )
            (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "inEqSimp_geqRight" (formula "44"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "39") (term "0,0"))
               (rule "mul_literals" (formula "39") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0"))
               (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
               (rule "add_literals" (formula "39") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "39"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0"))
               (rule "polySimp_elimOne" (formula "39") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "39"))
               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "26"))
               (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
               (rule "hideAuxiliaryEq" (formula "26"))
               (rule "inEqSimp_commuteLeq" (formula "26"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "36"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
               (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "inEqSimp_commuteLeq" (formula "24"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "33"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
               (rule "hideAuxiliaryEq" (formula "22"))
               (rule "inEqSimp_commuteLeq" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "polySimp_elimOne" (formula "30") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
               (rule "andLeft" (formula "28"))
               (rule "inEqSimp_homoInEq1" (formula "28"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "1,1,0"))
               (rule "times_zero_1" (formula "28") (term "1,0"))
               (rule "add_zero_right" (formula "28") (term "0"))
               (rule "leq_literals" (formula "28"))
               (rule "closeFalse" (formula "28"))
            )
         )
      )
      (branch "Null Reference (x_arr = null)"
         (rule "false_right" (formula "39"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Case 3"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
         (rule "false_right" (formula "39"))
         (rule "expand_inInt" (formula "36") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "36") (term "1,0"))
         (rule "expand_inInt" (formula "35") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "35") (term "0,0,0,0,1,0"))
         (rule "expand_inInt" (formula "7") (term "0,1,1,0"))
         (rule "expand_inInt" (formula "34") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "34") (term "0,0,0,0,1,0"))
         (rule "expand_inInt" (formula "7") (term "0,0,2,0"))
         (rule "expand_inInt" (formula "16") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "16") (term "0,0,0,0,1,0"))
         (rule "expand_inInt" (formula "15") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "15") (term "0,0,0,0,1,0"))
         (rule "expand_inInt" (formula "2") (term "0,0"))
         (rule "expand_inShort" (formula "13"))
         (rule "expand_inInt" (formula "10"))
         (rule "expand_inInt" (formula "9"))
         (rule "expand_inInt" (formula "2") (term "0,1,1,0"))
         (rule "expand_inInt" (formula "2") (term "0,0,2,0"))
         (rule "expand_inInt" (formula "8") (term "0,0,0,0"))
         (rule "expand_inInt" (formula "8") (term "1,0"))
         (rule "expand_inInt" (formula "7") (term "0,0"))
         (rule "expand_inInt" (formula "6"))
         (rule "expand_inInt" (formula "5"))
         (rule "replace_int_MAX" (formula "36") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "36") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "36") (term "1,0,1,0"))
         (rule "replace_int_MIN" (formula "36") (term "0,1,1,0"))
         (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "35") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_int_MIN" (formula "35") (term "0,1,0,0,0,0,1,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,0"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,0"))
         (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "34") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_int_MIN" (formula "34") (term "0,1,0,0,0,0,1,0"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,0,2,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,0,2,0"))
         (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "16") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_int_MIN" (formula "16") (term "0,1,0,0,0,0,1,0"))
         (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "15") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_int_MIN" (formula "15") (term "0,1,0,0,0,0,1,0"))
         (rule "expand_inInt" (formula "2") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "2") (term "1,0,0,0"))
         (rule "expand_inInt" (formula "2") (term "0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "2") (term "0,1,0,0"))
         (rule "replace_short_MAX" (formula "13") (term "1,0"))
         (rule "replace_short_MIN" (formula "13") (term "0,1"))
         (rule "replace_int_MAX" (formula "10") (term "1,0"))
         (rule "replace_int_MIN" (formula "10") (term "0,1"))
         (rule "replace_int_MAX" (formula "9") (term "1,0"))
         (rule "replace_int_MIN" (formula "9") (term "0,1"))
         (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,0"))
         (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,0"))
         (rule "replace_int_MAX" (formula "2") (term "1,0,0,0,2,0"))
         (rule "replace_int_MIN" (formula "2") (term "0,1,0,0,2,0"))
         (rule "replace_int_MAX" (formula "8") (term "1,0,0,0,0,0"))
         (rule "replace_int_MIN" (formula "8") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "8") (term "1,0,1,0"))
         (rule "replace_int_MIN" (formula "8") (term "0,1,1,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,0"))
         (rule "expand_inInt" (formula "7") (term "0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,0"))
         (rule "expand_inInt" (formula "7") (term "0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "6") (term "0,1"))
         (rule "replace_int_MAX" (formula "6") (term "1,0"))
         (rule "replace_int_MIN" (formula "5") (term "0,1"))
         (rule "replace_int_MAX" (formula "5") (term "1,0"))
         (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,0,0,0,0"))
         (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "2") (term "1,0,0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "2") (term "0,1,0,1,1,1,0,0"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,0,0,0,0"))
         (rule "replace_int_MAX" (formula "7") (term "1,0,0,1,1,1,0,0"))
         (rule "replace_int_MIN" (formula "7") (term "0,1,0,1,1,1,0,0"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "5"))
         (rule "inEqSimp_ltToLeq" (formula "34"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "35"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "33"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "38"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "36"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "34") (term "0"))
         (rule "polySimp_addComm1" (formula "35") (term "0"))
         (rule "polySimp_addComm1" (formula "33") (term "0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "polySimp_addComm1" (formula "37") (term "0"))
         (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "36") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "41") (term "1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1,0,0"))
         (rule "add_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,2,0"))
         (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,2,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,2,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0,0,2,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,2,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,2,0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "inEqSimp_commuteLeq" (formula "8"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,2,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,1,0,0"))
         (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,1,1,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0,1,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,2,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0,0,2,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,2,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,0,2,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,2,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,2,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,2,1,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,2,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,2,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,2,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,1,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,1,1,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,1,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0,1,0,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,0"))
         (rule "add_literals" (formula "2") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "38"))
         (rule "polySimp_mulComm0" (formula "38") (term "1"))
         (rule "polySimp_rightDist" (formula "38") (term "1"))
         (rule "mul_literals" (formula "38") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
         (rule "polySimp_elimOne" (formula "38") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "34"))
         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
         (rule "polySimp_elimOne" (formula "34") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "35"))
         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
         (rule "polySimp_elimOne" (formula "35") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "33"))
         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
         (rule "polySimp_elimOne" (formula "33") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0"))
         (rule "polySimp_elimOne" (formula "37") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "36"))
         (rule "polySimp_mulLiterals" (formula "36") (term "0"))
         (rule "polySimp_elimOne" (formula "36") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,2,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,2,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,2,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,2,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,2,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,2,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,0,2,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,2,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,2,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,2,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,2,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,2,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,0,1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,1,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,0"))
         (rule "mul_literals" (formula "2") (term "1,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "33"))
         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "25") (term "0,0,0,0"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_subsumption0" (formula "31") (term "1,0,0") (ifseqformula "38"))
         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
         (rule "leq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "17") (term "0,0"))
         (rule "mul_literals" (formula "17") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "polySimp_elimOne" (formula "17") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
         (rule "polySimp_rightDist" (formula "35") (term "0,0"))
         (rule "mul_literals" (formula "35") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "35") (term "0"))
         (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
         (rule "add_literals" (formula "35") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "35"))
         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
         (rule "polySimp_elimOne" (formula "35") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "27") (term "1,0,0") (ifseqformula "35"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
         (rule "polySimp_rightDist" (formula "34") (term "0,0"))
         (rule "mul_literals" (formula "34") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "34") (term "0"))
         (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
         (rule "add_literals" (formula "34") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "34"))
         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
         (rule "polySimp_elimOne" (formula "34") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "25") (term "1,0,0") (ifseqformula "34"))
         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
         (rule "polySimp_rightDist" (formula "33") (term "0,0"))
         (rule "mul_literals" (formula "33") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "33") (term "0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
         (rule "add_literals" (formula "33") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "33"))
         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
         (rule "polySimp_elimOne" (formula "33") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "22") (term "1,0,0") (ifseqformula "33"))
         (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "22") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
         (rule "polySimp_rightDist" (formula "32") (term "0,0"))
         (rule "mul_literals" (formula "32") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "32") (term "0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
         (rule "add_literals" (formula "32") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
         (rule "polySimp_elimOne" (formula "32") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "23") (term "0,0") (ifseqformula "32"))
         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
         (rule "qeq_literals" (formula "23") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
         (rule "polySimp_rightDist" (formula "30") (term "0,0"))
         (rule "mul_literals" (formula "30") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1"))
         (rule "polySimp_rightDist" (formula "30") (term "1"))
         (rule "mul_literals" (formula "30") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,0,0,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,0,0"))
         (rule "qeq_literals" (formula "7") (term "0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,2,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,2,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,2,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,2,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,2,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,2,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,2,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,2,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,2,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,2,0"))
         (rule "qeq_literals" (formula "2") (term "0,1,0,0,2,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,0,0"))
         (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,1,1,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,1,1,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,1,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,1,1,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,0,1,1,0"))
         (rule "qeq_literals" (formula "2") (term "0,1,0,1,1,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,0,2,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,2,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,2,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,2,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,2,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,0,2,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0,2,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,2,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,2,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,2,0"))
         (rule "qeq_literals" (formula "7") (term "0,1,0,0,2,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,0,0"))
         (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0"))
         (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,1,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,1,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,1,0,1,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,1,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,1,1,0"))
         (rule "qeq_literals" (formula "7") (term "0,1,0,1,1,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "30") (term "0,0"))
         (rule "mul_literals" (formula "30") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0"))
         (rule "add_literals" (formula "30") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
         (rule "polySimp_elimOne" (formula "30") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "30"))
         (rule "leq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_and_subsumption3" (formula "42") (term "0,0,0"))
         (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "42"))
         (rule "inEqSimp_and_subsumption3" (formula "18") (term "0,0,0"))
         (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "nnf_imp2or" (formula "43") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_imp2or" (formula "41") (term "0"))
         (rule "commute_or" (formula "1"))
         (rule "nnf_imp2or" (formula "42") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_notAnd" (formula "43") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
         (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
         (rule "mul_literals" (formula "43") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
         (rule "mul_literals" (formula "41") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
         (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0"))
         (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0"))
         (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
         (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "43") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "43") (term "1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "43") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "1,1,0,0,0,0,1,0"))
         (rule "ifthenelse_split" (formula "27") (term "0"))
         (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
            (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "inEqSimp_commuteLeq" (formula "28"))
            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "40"))
            (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0"))
            (rule "polySimp_addComm0" (formula "27") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
            (rule "polySimp_mulComm0" (formula "27") (term "1"))
            (rule "polySimp_rightDist" (formula "27") (term "1"))
            (rule "mul_literals" (formula "27") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "31"))
            (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
            (rule "add_literals" (formula "27") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0"))
            (rule "qeq_literals" (formula "27") (term "0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "6") (term "0,0"))
            (rule "ifthenelse_split" (formula "25") (term "0"))
            (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
               (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "26"))
               (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
               (rule "hideAuxiliaryEq" (formula "26"))
               (rule "inEqSimp_commuteLeq" (formula "26"))
               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
               (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1"))
               (rule "polySimp_rightDist" (formula "25") (term "1"))
               (rule "mul_literals" (formula "25") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
               (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0"))
               (rule "qeq_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "commute_and" (formula "43") (term "1,0"))
               (rule "commute_and" (formula "7") (term "1,0"))
               (rule "ifthenelse_split" (formula "23") (term "0"))
               (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                  (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "36"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "mul_literals" (formula "23") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "qeq_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "ifthenelse_split" (formula "21") (term "0"))
                  (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left TRUE"
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "22"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "34"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "1,1,0"))
                     (branch "right <= 2147483647 + left TRUE"
                        (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                        (rule "replace_known_left" (formula "7") (term "0,0,2,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                        (rule "polySimp_addAssoc" (formula "3") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                        (rule "mul_literals" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "commute_or_2" (formula "44") (term "0,0"))
                        (rule "inEqSimp_or_subsumption1" (formula "44") (term "0,0,0"))
                        (rule "qeq_literals" (formula "44") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "commute_or_2" (formula "18") (term "0,0"))
                        (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0"))
                        (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "commute_or_2" (formula "8") (term "0,0"))
                        (rule "inEqSimp_or_subsumption1" (formula "8") (term "0,0,0"))
                        (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "commute_or_2" (formula "42") (term "0,0"))
                        (rule "inEqSimp_or_subsumption1" (formula "42") (term "0,0,0"))
                        (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                        (rule "commute_or" (formula "44") (term "0,0,0"))
                        (rule "commute_or" (formula "18") (term "0,0,0"))
                        (rule "commute_or" (formula "8") (term "0,0,0"))
                        (rule "commute_or" (formula "42") (term "0,0,0"))
                        (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                        (rule "cnf_rightDist" (formula "44") (term "0"))
                        (rule "distr_forallAnd" (formula "44"))
                        (rule "andLeft" (formula "44"))
                        (rule "commute_or" (formula "45") (term "0"))
                        (rule "cnf_rightDist" (formula "8") (term "0"))
                        (rule "distr_forallAnd" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "commute_or" (formula "9") (term "0"))
                        (rule "commute_or_2" (formula "43") (term "0,0,1,0"))
                        (rule "commute_or" (formula "19") (term "0,0,0,0,1,0"))
                        (rule "commute_or" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "all_pull_out3" (formula "44") (term "0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "20") (term "0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "right <= 2147483646 + left TRUE"
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                           (rule "mul_literals" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "3"))
                           (rule "leq_literals" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "all_pull_out3" (formula "20") (term "0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "42") (term "0"))
                           (rule "shift_paren_or" (formula "42") (term "0,0"))
                           (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "8") (term "0"))
                           (branch "right <= 2147483642 + left TRUE"
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "mul_literals" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "16"))
                              (rule "leq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "allLeft" (formula "44") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                              (rule "replaceKnownSelect_taclet00_10" (formula "44") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0200_16" (formula "44") (term "0,1"))
                              (rule "allLeft" (formula "45") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                              (rule "replaceKnownSelect_taclet00_12" (formula "45") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000200_18" (formula "45") (term "0,1"))
                              (rule "allLeft" (formula "46") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                              (rule "replaceKnownSelect_taclet00_11" (formula "46") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00200_17" (formula "46") (term "0,1"))
                              (rule "allLeft" (formula "47") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                              (rule "replaceKnownSelect_taclet00_13" (formula "47") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000200_19" (formula "47") (term "0,1"))
                              (rule "allLeft" (formula "48") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                              (rule "replaceKnownSelect_taclet00_14" (formula "48") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet200_15" (formula "48") (term "0,1"))
                              (rule "allLeft" (formula "9") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                              (rule "allLeft" (formula "10") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                              (rule "allLeft" (formula "11") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                              (rule "allLeft" (formula "53") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                              (rule "replaceKnownSelect_taclet00_10" (formula "53") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0200_16" (formula "53") (term "0,1"))
                              (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e5)"))
                              (rule "allLeft" (formula "14") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                              (rule "allLeft" (formula "15") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                              (rule "allLeft" (formula "16") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                              (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                              (rule "allLeft" (formula "59") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e4)"))
                              (rule "replaceKnownSelect_taclet00_11" (formula "59") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00200_17" (formula "59") (term "0,1"))
                              (rule "allLeft" (formula "60") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e3)"))
                              (rule "replaceKnownSelect_taclet00_12" (formula "60") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000200_18" (formula "60") (term "0,1"))
                              (rule "allLeft" (formula "61") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                              (rule "replaceKnownSelect_taclet00_13" (formula "61") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000200_19" (formula "61") (term "0,1"))
                              (rule "allLeft" (formula "12") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e2)"))
                              (rule "allLeft" (formula "13") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                              (rule "allLeft" (formula "64") (inst "t=int::select(anon_heap_prepare_indices<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$e1)"))
                              (rule "replaceKnownSelect_taclet00_14" (formula "64") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet200_15" (formula "64") (term "0,1"))
                              (rule "cut_direct" (formula "1") (term "1"))
                              (branch "CUT: DualPivotQuicksort.e1@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length TRUE"
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "58") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "true_left" (formula "58"))
                                 (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "true_left" (formula "63"))
                                 (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "41"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: DualPivotQuicksort.e1@anon_heap_prepare_indices<<anonHeapFunction>> >= a.length FALSE"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "67")))
                                 (rule "true_left" (formula "58"))
                                 (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "66"))
                                  (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "63"))
                                 (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "65"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "13"))
                                 (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "64"))
                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_geqRight" (formula "63"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1"))
                                 (rule "mul_literals" (formula "41") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "24"))
                                 (rule "qeq_literals" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "closeFalse" (formula "42"))
                              )
                           )
                           (branch "right <= 2147483642 + left FALSE"
                              (rule "inEqSimp_leqRight" (formula "47"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                        (branch "right <= 2147483646 + left FALSE"
                           (rule "inEqSimp_leqRight" (formula "48"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0,0,0,0"))
                           (rule "applyEq" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (rule "qeq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "38") (term "1"))
                           (rule "add_literals" (formula "38") (term "0,1"))
                           (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "applyEq" (formula "23") (term "2,1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "1"))
                           (rule "add_literals" (formula "41") (term "0,1"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1"))
                           (rule "add_literals" (formula "18") (term "0,1"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,1,1,0,0,0,0,0,0,0"))
                           (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "33") (term "1"))
                           (rule "add_literals" (formula "33") (term "0,1"))
                           (rule "applyEq" (formula "43") (term "1,1,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "1"))
                           (rule "add_literals" (formula "39") (term "0,1"))
                           (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "35") (term "1"))
                           (rule "add_literals" (formula "35") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                     (branch "right <= 2147483647 + left FALSE"
                        (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                        (rule "replace_known_right" (formula "6") (term "0,1,1,0") (ifseqformula "45"))
                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                        (rule "inEqSimp_leqRight" (formula "45"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "qeq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                  )
                  (branch " DualPivotQuicksort.e2@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "21"))
                     (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "inEqSimp_geqRight" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "31"))
                     (rule "andLeft" (formula "33"))
                     (rule "inEqSimp_homoInEq1" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "1,1,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0"))
                     (rule "add_zero_right" (formula "33") (term "0"))
                     (rule "leq_literals" (formula "33"))
                     (rule "closeFalse" (formula "33"))
                  )
               )
               (branch " DualPivotQuicksort.e3@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
                  (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "23"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "inEqSimp_geqRight" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                  (rule "mul_literals" (formula "35") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "35"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "30"))
                  (rule "andLeft" (formula "32"))
                  (rule "inEqSimp_homoInEq1" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0"))
                  (rule "add_zero_right" (formula "32") (term "0"))
                  (rule "leq_literals" (formula "32"))
                  (rule "closeFalse" (formula "32"))
               )
            )
            (branch " DualPivotQuicksort.e4@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25"))
               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "inEqSimp_geqRight" (formula "44"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "26"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "37") (term "0,0"))
               (rule "mul_literals" (formula "37") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "37") (term "0"))
               (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
               (rule "add_literals" (formula "37") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "37"))
               (rule "polySimp_mulLiterals" (formula "37") (term "0"))
               (rule "polySimp_elimOne" (formula "37") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "37"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
               (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "inEqSimp_commuteLeq" (formula "24"))
               (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
               (rule "polySimp_rightDist" (formula "34") (term "0,0"))
               (rule "mul_literals" (formula "34") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "34"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
               (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
               (rule "hideAuxiliaryEq" (formula "22"))
               (rule "inEqSimp_commuteLeq" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
               (rule "polySimp_rightDist" (formula "31") (term "0,0"))
               (rule "mul_literals" (formula "31") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "31") (term "0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "31"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
               (rule "polySimp_elimOne" (formula "31") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "29"))
               (rule "andLeft" (formula "31"))
               (rule "inEqSimp_homoInEq1" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0"))
               (rule "polySimp_addComm1" (formula "31") (term "0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "1,1,0"))
               (rule "times_zero_1" (formula "31") (term "1,0"))
               (rule "add_zero_right" (formula "31") (term "0"))
               (rule "leq_literals" (formula "31"))
               (rule "closeFalse" (formula "31"))
            )
         )
         (branch " DualPivotQuicksort.e5@anon_heap_prepare_indices<<anonHeapFunction>> >= left FALSE"
            (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
            (rule "hideAuxiliaryEq" (formula "27"))
            (rule "inEqSimp_geqRight" (formula "44"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "39") (term "0,0"))
            (rule "mul_literals" (formula "39") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "39") (term "0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
            (rule "add_literals" (formula "39") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "39"))
            (rule "polySimp_mulLiterals" (formula "39") (term "0"))
            (rule "polySimp_elimOne" (formula "39") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "39"))
            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
            (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
            (rule "leq_literals" (formula "26") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "inEqSimp_commuteLeq" (formula "26"))
            (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
            (rule "polySimp_rightDist" (formula "36") (term "0,0"))
            (rule "mul_literals" (formula "36") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "36") (term "0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
            (rule "add_literals" (formula "36") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "36"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0"))
            (rule "polySimp_elimOne" (formula "36") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "36"))
            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
            (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
            (rule "leq_literals" (formula "24") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
            (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "24"))
            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "33") (term "0,0"))
            (rule "mul_literals" (formula "33") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "33"))
            (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
            (rule "leq_literals" (formula "22") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
            (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "22"))
            (rule "hideAuxiliaryEq" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "28"))
            (rule "andLeft" (formula "30"))
            (rule "inEqSimp_homoInEq1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
            (rule "add_literals" (formula "30") (term "1,1,0"))
            (rule "times_zero_1" (formula "30") (term "1,0"))
            (rule "add_zero_right" (formula "30") (term "0"))
            (rule "leq_literals" (formula "30"))
            (rule "closeFalse" (formula "30"))
         )
      )
   )
   (branch "Exceptional Post (prepare_indices)"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "17"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,0") (ifseqformula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "18"))
      (rule "close" (formula "20") (ifseqformula "19"))
   )
   (branch "Pre (prepare_indices)"
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")) (ifInst ""  (formula "2")) (ifInst ""  (formula "16")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
      (rule "closeTrue" (formula "17"))
   )
)
(branch "if x_1 false"
    (builtin "One Step Simplification" (formula "17"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
   (rule "greater_than_comparison_simple" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "ifSplit" (formula "17"))
   (branch "if x_2 true"
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "18"))
       (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_insertionSort,exc_0,heapAfter_insertionSort,anon_heap_insertionSort") (contract "DualPivotQuicksort[DualPivotQuicksort::insertionSort([I,int,int,boolean)].JML normal_behavior operation contract.0"))
      (branch "Post (insertionSort)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
         (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=DualPivotQuicksort_great_0"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "elementOfArrayRange" (formula "23") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=DualPivotQuicksort_less_0"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "commute_and_2" (formula "18") (term "0,0"))
         (rule "commute_and_2" (formula "19") (term "0,0"))
         (rule "commute_and_2" (formula "20") (term "0,0"))
         (rule "commute_and_2" (formula "21") (term "0,0"))
         (rule "commute_and_2" (formula "20") (term "0,0,1,0"))
         (rule "commute_and_2" (formula "18") (term "0,0,1,0"))
         (rule "commute_and" (formula "18") (term "0,0,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,1,0"))
         (rule "commute_and" (formula "19") (term "0,0,0"))
         (rule "commute_and_2" (formula "19") (term "0,0"))
         (rule "commute_and" (formula "20") (term "0,0,0"))
         (rule "commute_and" (formula "21") (term "0,0,0"))
         (rule "commute_and_2" (formula "21") (term "0,0"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (rule "commute_and" (formula "20") (term "0,0,0,1,0"))
         (rule "commute_and" (formula "18") (term "0,0,0,1,0"))
         (rule "commute_and" (formula "19") (term "0,0,0,1,0"))
         (rule "commute_and_2" (formula "19") (term "0,0,1,0"))
         (rule "tryEmpty" (formula "25") (term "1"))
         (rule "emptyModality" (formula "25") (term "1"))
         (rule "andRight" (formula "25"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "25"))
            (rule "closeTrue" (formula "25"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "25"))
            (rule "allRight" (formula "25") (inst "sk=f_5"))
            (rule "allRight" (formula "25") (inst "sk=o_5"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "eqSymm" (formula "34"))
            (rule "eqSymm" (formula "32") (term "0,0,0,1"))
            (rule "inEqSimp_gtRight" (formula "23"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_5_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
            (rule "eqSymm" (formula "35"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (insertionSort)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,0") (ifseqformula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "18"))
         (rule "close" (formula "20") (ifseqformula "19"))
      )
      (branch "Pre (insertionSort)"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "2")) (ifInst ""  (formula "17")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
         (rule "closeTrue" (formula "18"))
      )
   )
   (branch "if x_2 false"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (rule "tryEmpty" (formula "18") (term "1"))
      (rule "emptyModality" (formula "18") (term "1"))
      (rule "andRight" (formula "18"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "18"))
         (rule "closeTrue" (formula "18"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "18"))
         (rule "closeTrue" (formula "18"))
      )
   )
)
)
}
