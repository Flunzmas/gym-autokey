\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu May 04 11:30:45 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=6000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Thu May 04 11:30:45 CEST 2017
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:prepare_indices([I,int,int)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:prepare_indices([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))

(autoModeTime "20121")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0") (newnames "a,left,right,exc,heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,1,0"))
(rule "expand_inInt" (formula "1") (term "0,0,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,1,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,1,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,0,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,0,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,1,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,1,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,1,1,1,1,1,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "eqSymm" (formula "21") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "15") (term "0"))
(rule "expand_inInt" (formula "15") (term "0,0"))
(rule "replace_int_MAX" (formula "15") (term "1,0,0,0"))
(rule "replace_int_MIN" (formula "15") (term "0,1,0,0"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "20"))
(builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "15") (term "1,0"))
(rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
(rule "polySimp_elimSub" (formula "15") (term "0,0,0,0"))
(rule "polySimp_addComm0" (formula "15") (term "1,0"))
(rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "assignment" (formula "21") (term "1"))
(builtin "One Step Simplification" (formula "21"))
(rule "elementOfUnion" (formula "21") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "21") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "21") (term "0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "8") (term "1,0"))
(rule "commute_and_2" (formula "19") (term "0,0"))
(rule "commute_and" (formula "8") (term "1,0,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "18") (term "1,0,0"))
(rule "commute_and" (formula "18") (term "0,0,0"))
(rule "commute_and" (formula "19") (term "1,0,0,1,0"))
(rule "commute_and" (formula "18") (term "0,0,0,1,0"))
(rule "commute_and" (formula "19") (term "1,0,0,0"))
(rule "commute_and" (formula "18") (term "1,0,0,1,0"))
(rule "commute_and_2" (formula "18") (term "0,0,1,0"))
(rule "shift_paren_and" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "8") (term "0,0,0"))
(rule "shift_paren_and" (formula "18") (term "0,0"))
(rule "commute_and_2" (formula "18") (term "0,0,0"))
(rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_prepare_indices,savedHeapBefore_prepare_indices"))
(builtin "One Step Simplification" (formula "21"))
(rule "shift_paren_and" (formula "19") (term "0,0,0"))
(rule "commute_and" (formula "19") (term "0,0,0,0"))
(rule "shift_paren_and" (formula "19") (term "0,0,1,0"))
(rule "shift_paren_and" (formula "18") (term "0,0,0,1,0"))
(builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_calcE,exc_0,heapAfter_calcE,anon_heap_calcE") (contract "DualPivotQuicksort[DualPivotQuicksort::calcE(int,int)].JML normal_behavior operation contract.0"))
(branch "Post (calcE)"
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "expand_inInt" (formula "21") (term "1,1,1,0,1"))
   (rule "expand_inInt" (formula "21") (term "0,1,1,0,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,1,1,1,0,1"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,1,1,1,0,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,0,1,1,0,1"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,0,1,1,0,1"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "inEqSimp_commuteLeq" (formula "29"))
   (rule "inEqSimp_commuteLeq" (formula "31"))
   (rule "blockEmpty" (formula "34") (term "1"))
   (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=DualPivotQuicksort_e5_0"))
   (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
   (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "elementOfUnion" (formula "27") (term "0,0"))
   (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
   (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
   (rule "hideAuxiliaryEq" (formula "27"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=DualPivotQuicksort_less_0"))
   (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
   (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfSingleton" (formula "28") (term "0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
   (rule "hideAuxiliaryEq" (formula "28"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=DualPivotQuicksort_great_0"))
   (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
   (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfUnion" (formula "28") (term "0,0"))
   (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "elementOfSingleton" (formula "28") (term "0,0"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "28"))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
   (rule "hideAuxiliaryEq" (formula "28"))
   (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=DualPivotQuicksort_e4_0"))
   (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
   (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "elementOfUnion" (formula "26") (term "0,0"))
   (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "elementOfUnion" (formula "26") (term "0,0"))
   (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
   (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "26"))
   (rule "hideAuxiliaryEq" (formula "26"))
   (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=DualPivotQuicksort_e3_0"))
   (rule "applyEq" (formula "24") (term "1") (ifseqformula "25"))
   (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "elementOfUnion" (formula "25") (term "0,0"))
   (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "elementOfUnion" (formula "25") (term "0,0"))
   (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "elementOfUnion" (formula "25") (term "0,0"))
   (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
   (rule "hideAuxiliaryEq" (formula "25"))
   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DualPivotQuicksort_e2_0"))
   (rule "applyEq" (formula "23") (term "1") (ifseqformula "24"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfUnion" (formula "24") (term "0,0"))
   (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfUnion" (formula "24") (term "0,0"))
   (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfUnion" (formula "24") (term "0,0"))
   (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfUnion" (formula "24") (term "0,0"))
   (rule "elementOfSingleton" (formula "24") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "elementOfSingleton" (formula "24") (term "0,0"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
   (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
   (rule "hideAuxiliaryEq" (formula "24"))
   (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=DualPivotQuicksort_e1_0"))
   (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
   (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfUnion" (formula "22") (term "0,0"))
   (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfUnion" (formula "22") (term "0,0"))
   (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfUnion" (formula "22") (term "0,0"))
   (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "elementOfUnion" (formula "22") (term "0,0"))
   (rule "elementOfSingleton" (formula "22") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "22"))
   (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
   (rule "hideAuxiliaryEq" (formula "22"))
   (rule "methodCallUnfoldArguments" (formula "30") (term "1"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var"))
   (rule "assignment" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_1"))
   (rule "assignment" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_2"))
   (rule "assignment" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_3"))
   (rule "activeUseStaticFieldReadAccess" (formula "30") (term "1"))
   (rule "assignment_read_static_attribute" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "replaceKnownSelect_taclet0_12" (formula "30") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_13" (formula "30") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_4"))
   (rule "activeUseStaticFieldReadAccess" (formula "30") (term "1"))
   (rule "assignment_read_static_attribute" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "replaceKnownSelect_taclet0_10" (formula "30") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_11" (formula "30") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_5"))
   (rule "activeUseStaticFieldReadAccess" (formula "30") (term "1"))
   (rule "assignment_read_static_attribute" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "replaceKnownSelect_taclet0_8" (formula "30") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_9" (formula "30") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_6"))
   (rule "activeUseStaticFieldReadAccess" (formula "30") (term "1"))
   (rule "assignment_read_static_attribute" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "replaceKnownSelect_taclet0_6" (formula "30") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "30") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_7"))
   (rule "activeUseStaticFieldReadAccess" (formula "30") (term "1"))
   (rule "assignment_read_static_attribute" (formula "30") (term "1"))
   (builtin "One Step Simplification" (formula "30"))
   (rule "replaceKnownSelect_taclet0_0" (formula "30") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "30") (term "0,1,0"))
   (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
   (rule "expand_inInt" (formula "17"))
   (rule "replace_int_MAX" (formula "17") (term "1,0"))
   (rule "replace_int_MIN" (formula "17") (term "0,1"))
   (rule "andLeft" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "arrayLengthNotNegative" (formula "19") (term "0"))
   (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_eInsertionSort,exc_1,heapAfter_eInsertionSort,anon_heap_eInsertionSort") (contract "DualPivotQuicksort[DualPivotQuicksort::eInsertionSort([I,int,int,int,int,int,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (eInsertionSort)"
      (builtin "One Step Simplification" (formula "33"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,0,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,0,1,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "0,1,1,1,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,1,1,1,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,0,1,1,1,1,0,1"))
      (rule "expand_inInt" (formula "33") (term "1,0,0,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,0,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,0,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,0,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,0,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,0,1,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,0,1,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,1,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,1,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,0,1,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,0,1,1,1,1,0,1"))
      (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,1,1,1,0,1"))
      (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,1,1,1,0,1"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "39"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "43"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "37"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "36"))
      (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35"))
      (rule "inEqSimp_commuteLeq" (formula "34"))
      (rule "inEqSimp_commuteLeq" (formula "42"))
      (rule "inEqSimp_commuteLeq" (formula "44"))
      (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=DualPivotQuicksort_less_1"))
      (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "replaceKnownSelect_taclet0_2" (formula "41") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "41") (term "2,0"))
      (rule "elementOfArrayRange" (formula "41") (term "0,0") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
      (rule "hideAuxiliaryEq" (formula "41"))
      (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=DualPivotQuicksort_great_1"))
      (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "replaceKnownSelect_taclet0_4" (formula "41") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "41") (term "2,0"))
      (rule "elementOfArrayRange" (formula "41") (term "0,0") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "41"))
      (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "41"))
      (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
      (rule "hideAuxiliaryEq" (formula "41"))
      (rule "pullOutSelect" (formula "37") (term "1") (inst "selectSK=arr_0"))
      (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "43")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "37"))
      (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
      (builtin "One Step Simplification" (formula "37"))
      (rule "inEqSimp_commuteGeq" (formula "36"))
      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
      (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "44")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "38") (term "0,0,1,0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0"))
      (builtin "One Step Simplification" (formula "38"))
      (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
      (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_2"))
      (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
      (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "45")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "35") (term "0,0,1,0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "elementOfArrayRangeConcrete" (formula "35") (term "0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_commuteGeq" (formula "36"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
      (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_3"))
      (rule "applyEq" (formula "37") (term "0") (ifseqformula "34"))
      (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "46")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "34") (term "0,0,1,0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "34"))
      (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0"))
      (builtin "One Step Simplification" (formula "34"))
      (rule "inEqSimp_commuteGeq" (formula "35"))
      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
      (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_4"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "39") (term "0,0"))
      (rule "elementOfSingleton" (formula "39") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
      (rule "elementOfSingleton" (formula "39") (term "0,0"))
      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
      (rule "applyEqReverse" (formula "40") (term "2,0") (ifseqformula "39"))
      (rule "hideAuxiliaryEq" (formula "39"))
      (rule "pullOutSelect" (formula "40") (term "2,0") (inst "selectSK=arr_5"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "40") (term "0,0"))
      (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
      (rule "elementOfSingleton" (formula "40") (term "0,0"))
      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
      (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "40"))
      (rule "hideAuxiliaryEq" (formula "40"))
      (rule "pullOutSelect" (formula "36") (term "2,0") (inst "selectSK=arr_6"))
      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "36") (term "0,0"))
      (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "36") (term "0,0"))
      (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "36") (term "0,0"))
      (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "36") (term "0,0"))
      (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
      (rule "elementOfSingleton" (formula "36") (term "0,0"))
      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
      (rule "applyEqReverse" (formula "37") (term "2,0") (ifseqformula "36"))
      (rule "hideAuxiliaryEq" (formula "36"))
      (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_7"))
      (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "34") (term "0,0"))
      (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "34") (term "0,0"))
      (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "34") (term "0,0"))
      (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
      (rule "elementOfUnion" (formula "34") (term "0,0"))
      (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
      (rule "elementOfSingleton" (formula "34") (term "0,0"))
      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
      (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
      (rule "hideAuxiliaryEq" (formula "34"))
      (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_8"))
      (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "47")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "24"))
      (rule "replace_known_left" (formula "35") (term "0,0,1,0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "elementOfArrayRangeConcrete" (formula "35") (term "0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
      (rule "pullOutSelect" (formula "35") (term "2,0") (inst "selectSK=arr_9"))
      (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "35") (term "0,0"))
      (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
      (rule "elementOfUnion" (formula "35") (term "0,0"))
      (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
      (rule "elementOfUnion" (formula "35") (term "0,0"))
      (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
      (rule "elementOfUnion" (formula "35") (term "0,0"))
      (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
      (rule "elementOfSingleton" (formula "35") (term "0,0"))
      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
      (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "35"))
      (rule "hideAuxiliaryEq" (formula "35"))
      (rule "commute_and_2" (formula "44") (term "0,0"))
      (rule "commute_and" (formula "45") (term "1,0"))
      (rule "commute_and" (formula "43") (term "1,0,0"))
      (rule "commute_and" (formula "43") (term "0,0,0"))
      (rule "commute_and" (formula "45") (term "0,0,0"))
      (rule "methodCallEmpty" (formula "48") (term "1"))
      (rule "commute_and" (formula "45") (term "1,0,0"))
      (rule "commute_and" (formula "43") (term "1,0,0,1,0"))
      (rule "commute_and" (formula "43") (term "0,0,0,1,0"))
      (rule "commute_and" (formula "44") (term "1,0,0,1,0"))
      (rule "commute_and" (formula "44") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "43") (term "0,0,1,0"))
      (rule "shift_paren_and" (formula "43") (term "0,0"))
      (rule "commute_and_2" (formula "43") (term "0,0,0"))
      (rule "shift_paren_and" (formula "45") (term "0,0"))
      (rule "commute_and_2" (formula "45") (term "0,0,0"))
      (rule "tryEmpty" (formula "48") (term "1"))
      (rule "shift_paren_and" (formula "44") (term "0,0,0"))
      (rule "commute_and" (formula "44") (term "0,0,0,0"))
      (rule "emptyModality" (formula "48") (term "1"))
      (rule "andRight" (formula "48"))
      (branch "Case 1"
         (builtin "One Step Simplification" (formula "48"))
         (rule "closeTrue" (formula "48"))
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "48"))
         (rule "allRight" (formula "48") (inst "sk=f_0"))
         (rule "allRight" (formula "48") (inst "sk=o_0"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "orRight" (formula "48"))
         (rule "eqSymm" (formula "55"))
         (rule "eqSymm" (formula "53") (term "0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
         (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1"))
         (rule "polySimp_rightDist" (formula "30") (term "1"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
         (rule "mul_literals" (formula "30") (term "0,1"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
         (rule "polySimp_elimOne" (formula "29") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
         (rule "polySimp_elimOne" (formula "28") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "44") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
         (rule "leq_literals" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_subsumption0" (formula "40") (term "1,0,0") (ifseqformula "29"))
         (rule "inEqSimp_homoInEq0" (formula "40") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "40") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "40"))
         (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
         (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_subsumption1" (formula "34") (term "0,0,0") (ifseqformula "24"))
         (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "34") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
         (rule "leq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
         (rule "leq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "22"))
         (rule "eqSymm" (formula "53"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
         (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
         (rule "mul_literals" (formula "16") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "16"))
         (rule "leq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "51"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "50"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
         (rule "polySimp_rightDist" (formula "27") (term "0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "39") (term "1,0,0") (ifseqformula "27"))
         (rule "inEqSimp_homoInEq0" (formula "39") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "39") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "13"))
         (rule "leq_literals" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "polySimp_rightDist" (formula "26") (term "0,0"))
         (rule "mul_literals" (formula "26") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "37") (term "1,0,0") (ifseqformula "26"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "37") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "35") (term "1,0,0") (ifseqformula "25"))
         (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
         (rule "qeq_literals" (formula "35") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "mul_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "37") (term "0,0") (ifseqformula "24"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
         (rule "qeq_literals" (formula "37") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
         (rule "polySimp_rightDist" (formula "23") (term "0,0"))
         (rule "mul_literals" (formula "23") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
         (rule "polySimp_mulComm0" (formula "23") (term "1"))
         (rule "polySimp_rightDist" (formula "23") (term "1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
         (rule "mul_literals" (formula "23") (term "0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
         (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "qeq_literals" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "14"))
         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
         (rule "mul_literals" (formula "22") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "add_literals" (formula "22") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
         (rule "polySimp_elimOne" (formula "22") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "22"))
         (rule "leq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_and_subsumption2" (formula "45") (term "0,0,0,0"))
         (rule "leq_literals" (formula "45") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "45"))
         (rule "inEqSimp_and_subsumption2" (formula "18") (term "0,0,0,0"))
         (rule "leq_literals" (formula "18") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_and_subsumption3" (formula "6") (term "0,0,0"))
         (rule "leq_literals" (formula "6") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "inEqSimp_and_subsumption3" (formula "44") (term "0,0,0"))
         (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "44"))
         (rule "inEqSimp_and_subsumption3" (formula "17") (term "0,0,0"))
         (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_and_subsumption3" (formula "46") (term "0,0,0"))
         (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "46"))
         (rule "commute_and" (formula "53"))
         (rule "commute_and" (formula "52"))
         (rule "commute_and" (formula "51"))
         (rule "commute_and" (formula "50"))
         (rule "commute_and" (formula "49"))
         (rule "nnf_imp2or" (formula "45") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_imp2or" (formula "6") (term "0"))
         (rule "nnf_imp2or" (formula "44") (term "0"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "46") (term "0"))
         (rule "nnf_notAnd" (formula "45") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
         (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "6") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
         (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
         (rule "mul_literals" (formula "6") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "44") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
         (rule "mul_literals" (formula "44") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
         (rule "mul_literals" (formula "44") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "46") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
         (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
         (rule "mul_literals" (formula "46") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0"))
         (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0"))
         (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
         (rule "mul_literals" (formula "45") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
         (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
         (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
         (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "cut_direct" (formula "55") (term "0,0"))
         (branch "CUT: o_0 = null TRUE"
            (builtin "One Step Simplification" (formula "56"))
            (rule "false_right" (formula "56"))
            (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: o_0 = null FALSE"
            (builtin "One Step Simplification" (formula "56"))
            (rule "notRight" (formula "56"))
            (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
   (branch "Exceptional Post (eInsertionSort)"
      (builtin "One Step Simplification" (formula "35"))
      (builtin "One Step Simplification" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "33"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0") (ifseqformula "24"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "notLeft" (formula "34"))
      (rule "close" (formula "36") (ifseqformula "35"))
   )
   (branch "Case 3"
      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
      (rule "andRight" (formula "33"))
      (branch "Case 1"
         (rule "andRight" (formula "33"))
         (branch "Case 1"
            (rule "andRight" (formula "33"))
            (branch "Case 1"
               (rule "andRight" (formula "33"))
               (branch "Case 1"
                  (rule "andRight" (formula "33"))
                  (branch "Case 1"
                     (rule "andRight" (formula "33"))
                     (branch "Case 1"
                        (rule "andRight" (formula "33"))
                        (branch "Case 1"
                           (rule "andRight" (formula "33"))
                           (branch "Case 1"
                              (rule "wellFormedAnonEQ" (formula "33") (ifseqformula "24"))
                              (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "23")))
                              (rule "closeTrue" (formula "33"))
                           )
                           (branch "Case 2"
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "24"))
                              (rule "orRight" (formula "33"))
                              (rule "close" (formula "33") (ifseqformula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "expand_inInt" (formula "33"))
                           (rule "replace_int_MIN" (formula "33") (term "0,1"))
                           (rule "replace_int_MAX" (formula "33") (term "1,0"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1"))
                           (rule "mul_literals" (formula "31") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                           (rule "leq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                     )
                     (branch "Case 2"
                        (rule "expand_inInt" (formula "33"))
                        (rule "replace_int_MIN" (formula "33") (term "0,1"))
                        (rule "replace_int_MAX" (formula "33") (term "1,0"))
                        (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1"))
                        (rule "mul_literals" (formula "31") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                        (rule "leq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                        (rule "leq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "closeFalse" (formula "6"))
                     )
                  )
                  (branch "Case 2"
                     (rule "expand_inInt" (formula "33"))
                     (rule "replace_int_MAX" (formula "33") (term "1,0"))
                     (rule "replace_int_MIN" (formula "33") (term "0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "33") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1"))
                     (rule "mul_literals" (formula "30") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "mul_literals" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "polySimp_rightDist" (formula "22") (term "1"))
                     (rule "mul_literals" (formula "22") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "add_literals" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_and_subsumption2" (formula "17") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                     (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                     (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "5") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "5") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                     (rule "commute_and" (formula "34"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                     (rule "commute_or" (formula "5") (term "0,0,0"))
                     (rule "commute_or" (formula "16") (term "0,0,0"))
                     (rule "ifthenelse_split" (formula "11") (term "0"))
                     (branch "right <= 2147483647 + left TRUE"
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "12"))
                        (rule "leq_literals" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "commute_or_2" (formula "5") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0,0"))
                        (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                        (rule "commute_or" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "cnf_rightDist" (formula "5") (term "0"))
                        (rule "distr_forallAnd" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "commute_or" (formula "6") (term "0"))
                        (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                        (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                        (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "commute_or_2" (formula "20") (term "0,0,0,1,0"))
                        (rule "all_pull_out3" (formula "19") (term "0"))
                        (rule "shift_paren_or" (formula "19") (term "0,0"))
                        (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "20") (term "0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                        (rule "cut_direct" (formula "35") (term "1"))
                        (branch "CUT: DualPivotQuicksort.e1@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 TRUE"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_geqRight" (formula "36"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "24"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                        (branch "CUT: DualPivotQuicksort.e1@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 FALSE"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "false_right" (formula "36"))
                           (rule "inEqSimp_leqRight" (formula "35"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "25"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                           (rule "leq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                     )
                     (branch "right <= 2147483647 + left FALSE"
                        (rule "inEqSimp_leqRight" (formula "33"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
                        (rule "leq_literals" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "expand_inInt" (formula "33"))
                  (rule "replace_int_MAX" (formula "33") (term "1,0"))
                  (rule "replace_int_MIN" (formula "33") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "1"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                  (rule "mul_literals" (formula "30") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                  (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_and_subsumption2" (formula "17") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
                  (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
                  (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "5") (term "0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "commute_and" (formula "34"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
                  (rule "commute_or" (formula "5") (term "0,0,0"))
                  (rule "commute_or" (formula "16") (term "0,0,0"))
                  (rule "ifthenelse_split" (formula "11") (term "0"))
                  (branch "right <= 2147483647 + left TRUE"
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "12"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                     (rule "mul_literals" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "commute_or_2" (formula "5") (term "0,0"))
                     (rule "commute_or_2" (formula "18") (term "0,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                     (rule "commute_or" (formula "18") (term "0,0,0,0,1,0"))
                     (rule "cnf_rightDist" (formula "5") (term "0"))
                     (rule "distr_forallAnd" (formula "5"))
                     (rule "andLeft" (formula "5"))
                     (rule "commute_or" (formula "6") (term "0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                     (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                     (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "commute_or_2" (formula "20") (term "0,0,0,1,0"))
                     (rule "all_pull_out3" (formula "19") (term "0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                     (rule "all_pull_out3" (formula "20") (term "0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                     (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                     (rule "cut_direct" (formula "35") (term "1"))
                     (branch "CUT: DualPivotQuicksort.e2@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 TRUE"
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                     (branch "CUT: DualPivotQuicksort.e2@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 FALSE"
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "false_right" (formula "36"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "27"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeFalse" (formula "16"))
                     )
                  )
                  (branch "right <= 2147483647 + left FALSE"
                     (rule "inEqSimp_leqRight" (formula "33"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
               )
            )
            (branch "Case 2"
               (rule "expand_inInt" (formula "33"))
               (rule "replace_int_MAX" (formula "33") (term "1,0"))
               (rule "replace_int_MIN" (formula "33") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "28"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "16") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
               (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polySimp_elimOne" (formula "14") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
               (rule "polySimp_elimOne" (formula "28") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1"))
               (rule "polySimp_rightDist" (formula "30") (term "1"))
               (rule "mul_literals" (formula "30") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
               (rule "polySimp_elimOne" (formula "29") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
               (rule "polySimp_elimOne" (formula "16") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
               (rule "leq_literals" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
               (rule "leq_literals" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
               (rule "leq_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
               (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0"))
               (rule "add_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
               (rule "polySimp_elimOne" (formula "15") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
               (rule "polySimp_rightDist" (formula "25") (term "0,0"))
               (rule "mul_literals" (formula "25") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
               (rule "leq_literals" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
               (rule "polySimp_rightDist" (formula "24") (term "0,0"))
               (rule "mul_literals" (formula "24") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
               (rule "polySimp_elimOne" (formula "24") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
               (rule "polySimp_rightDist" (formula "23") (term "0,0"))
               (rule "mul_literals" (formula "23") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
               (rule "polySimp_rightDist" (formula "22") (term "0,0"))
               (rule "mul_literals" (formula "22") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1"))
               (rule "polySimp_rightDist" (formula "22") (term "1"))
               (rule "mul_literals" (formula "22") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
               (rule "polySimp_rightDist" (formula "21") (term "0,0"))
               (rule "mul_literals" (formula "21") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
               (rule "leq_literals" (formula "11") (term "0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "inEqSimp_and_subsumption2" (formula "17") (term "0,0,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
               (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
               (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "5") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "5") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
               (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
               (rule "mul_literals" (formula "5") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
               (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "commute_and" (formula "34"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
               (rule "commute_or" (formula "5") (term "0,0,0"))
               (rule "commute_or" (formula "16") (term "0,0,0"))
               (rule "ifthenelse_split" (formula "11") (term "0"))
               (branch "right <= 2147483647 + left TRUE"
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "qeq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "12"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                  (rule "mul_literals" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "commute_or_2" (formula "5") (term "0,0"))
                  (rule "commute_or_2" (formula "18") (term "0,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                  (rule "commute_or" (formula "18") (term "0,0,0,0,1,0"))
                  (rule "cnf_rightDist" (formula "5") (term "0"))
                  (rule "distr_forallAnd" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "commute_or" (formula "6") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
                  (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                  (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "commute_or_2" (formula "20") (term "0,0,0,1,0"))
                  (rule "all_pull_out3" (formula "19") (term "0"))
                  (rule "shift_paren_or" (formula "19") (term "0,0"))
                  (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                  (rule "all_pull_out3" (formula "20") (term "0"))
                  (rule "shift_paren_or" (formula "20") (term "0,0"))
                  (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                  (rule "cut_direct" (formula "35") (term "1"))
                  (branch "CUT: DualPivotQuicksort.e3@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 TRUE"
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "inEqSimp_geqRight" (formula "36"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                     (rule "mul_literals" (formula "28") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "add_literals" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "24"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
                  (branch "CUT: DualPivotQuicksort.e3@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 FALSE"
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "inEqSimp_leqRight" (formula "35"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "29"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                     (rule "leq_literals" (formula "5") (term "0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "closeFalse" (formula "16"))
                  )
               )
               (branch "right <= 2147483647 + left FALSE"
                  (rule "inEqSimp_leqRight" (formula "33"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "qeq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
            )
         )
         (branch "Case 2"
            (rule "expand_inInt" (formula "33"))
            (rule "replace_int_MAX" (formula "33") (term "1,0"))
            (rule "replace_int_MIN" (formula "33") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "27"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "20"))
            (rule "mul_literals" (formula "20") (term "1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "1"))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "27"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0"))
            (rule "polySimp_elimOne" (formula "27") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "polySimp_elimOne" (formula "26") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
            (rule "polySimp_elimOne" (formula "28") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1"))
            (rule "polySimp_rightDist" (formula "30") (term "1"))
            (rule "mul_literals" (formula "30") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
            (rule "polySimp_elimOne" (formula "29") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20"))
            (rule "mul_literals" (formula "20") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
            (rule "leq_literals" (formula "18") (term "0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
            (rule "leq_literals" (formula "18") (term "0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
            (rule "leq_literals" (formula "4") (term "0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
            (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
            (rule "mul_literals" (formula "13") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
            (rule "polySimp_rightDist" (formula "26") (term "0,0"))
            (rule "mul_literals" (formula "26") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "polySimp_elimOne" (formula "26") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
            (rule "polySimp_rightDist" (formula "15") (term "0,0"))
            (rule "mul_literals" (formula "15") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
            (rule "mul_literals" (formula "25") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
            (rule "leq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
            (rule "polySimp_elimOne" (formula "24") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
            (rule "polySimp_rightDist" (formula "23") (term "0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "23"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
            (rule "polySimp_elimOne" (formula "23") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1"))
            (rule "polySimp_rightDist" (formula "22") (term "1"))
            (rule "mul_literals" (formula "22") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
            (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
            (rule "mul_literals" (formula "21") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "polySimp_elimOne" (formula "21") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
            (rule "leq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_and_subsumption2" (formula "17") (term "0,0,0,0"))
            (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
            (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_imp2or" (formula "5") (term "0"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "5") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
            (rule "mul_literals" (formula "5") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
            (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "commute_and" (formula "34"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
            (rule "commute_or" (formula "5") (term "0,0,0"))
            (rule "commute_or" (formula "16") (term "0,0,0"))
            (rule "ifthenelse_split" (formula "11") (term "0"))
            (branch "right <= 2147483647 + left TRUE"
               (rule "inEqSimp_homoInEq1" (formula "12"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0"))
               (rule "qeq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "12"))
               (rule "leq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
               (rule "mul_literals" (formula "3") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "commute_or_2" (formula "5") (term "0,0"))
               (rule "commute_or_2" (formula "18") (term "0,0"))
               (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
               (rule "commute_or" (formula "18") (term "0,0,0,0,1,0"))
               (rule "cnf_rightDist" (formula "5") (term "0"))
               (rule "distr_forallAnd" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "commute_or" (formula "6") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
               (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
               (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
               (rule "commute_or_2" (formula "20") (term "0,0,0,1,0"))
               (rule "all_pull_out3" (formula "19") (term "0"))
               (rule "shift_paren_or" (formula "19") (term "0,0"))
               (rule "shift_paren_or" (formula "19") (term "0,0,0"))
               (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
               (rule "all_pull_out3" (formula "20") (term "0"))
               (rule "shift_paren_or" (formula "20") (term "0,0"))
               (rule "shift_paren_or" (formula "20") (term "0,0,0"))
               (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
               (rule "cut_direct" (formula "35") (term "1"))
               (branch "CUT: DualPivotQuicksort.e4@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 TRUE"
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_geqRight" (formula "36"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                  (rule "mul_literals" (formula "30") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                  (rule "add_literals" (formula "30") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "add_literals" (formula "26") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
               (branch "CUT: DualPivotQuicksort.e4@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 FALSE"
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "false_right" (formula "36"))
                  (rule "inEqSimp_leqRight" (formula "35"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "closeFalse" (formula "16"))
               )
            )
            (branch "right <= 2147483647 + left FALSE"
               (rule "inEqSimp_leqRight" (formula "33"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0"))
               (rule "qeq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
               (rule "leq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeFalse" (formula "12"))
            )
         )
      )
      (branch "Case 2"
         (rule "expand_inInt" (formula "33"))
         (rule "replace_int_MAX" (formula "33") (term "1,0"))
         (rule "replace_int_MIN" (formula "33") (term "0,1"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "33") (term "1"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
         (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
         (rule "polySimp_elimOne" (formula "28") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1"))
         (rule "polySimp_rightDist" (formula "30") (term "1"))
         (rule "mul_literals" (formula "30") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
         (rule "polySimp_elimOne" (formula "29") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
         (rule "polySimp_elimOne" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
         (rule "leq_literals" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
         (rule "leq_literals" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
         (rule "leq_literals" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
         (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "4"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "mul_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
         (rule "leq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "polySimp_rightDist" (formula "26") (term "0,0"))
         (rule "mul_literals" (formula "26") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "15"))
         (rule "leq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
         (rule "mul_literals" (formula "12") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "12"))
         (rule "leq_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "mul_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
         (rule "polySimp_rightDist" (formula "23") (term "0,0"))
         (rule "mul_literals" (formula "23") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "23"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
         (rule "polySimp_elimOne" (formula "23") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
         (rule "mul_literals" (formula "22") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1"))
         (rule "polySimp_rightDist" (formula "22") (term "1"))
         (rule "mul_literals" (formula "22") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "22"))
         (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "21") (term "0,0"))
         (rule "mul_literals" (formula "21") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "add_literals" (formula "21") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "21"))
         (rule "leq_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "inEqSimp_and_subsumption2" (formula "17") (term "0,0,0,0"))
         (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
         (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "inEqSimp_and_subsumption3" (formula "16") (term "0,0,0"))
         (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "nnf_imp2or" (formula "17") (term "0"))
         (rule "nnf_imp2or" (formula "5") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "5") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
         (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
         (rule "mul_literals" (formula "5") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
         (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
         (rule "commute_and" (formula "34"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "16") (term "1,1,0,0,0,0,1,0"))
         (rule "commute_or" (formula "5") (term "0,0,0"))
         (rule "commute_or" (formula "16") (term "0,0,0"))
         (rule "ifthenelse_split" (formula "11") (term "0"))
         (branch "right <= 2147483647 + left TRUE"
            (rule "inEqSimp_homoInEq1" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "12"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0"))
            (rule "qeq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "12"))
            (rule "leq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
            (rule "mul_literals" (formula "3") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "commute_or_2" (formula "5") (term "0,0"))
            (rule "commute_or_2" (formula "18") (term "0,0"))
            (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
            (rule "commute_or" (formula "18") (term "0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "5") (term "0"))
            (rule "distr_forallAnd" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "commute_or" (formula "6") (term "0"))
            (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "19") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
            (rule "commute_or" (formula "20") (term "0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "20") (term "0,0,0,1,0"))
            (rule "all_pull_out3" (formula "19") (term "0"))
            (rule "shift_paren_or" (formula "19") (term "0,0"))
            (rule "shift_paren_or" (formula "19") (term "0,0,0"))
            (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
            (rule "all_pull_out3" (formula "20") (term "0"))
            (rule "shift_paren_or" (formula "20") (term "0,0"))
            (rule "shift_paren_or" (formula "20") (term "0,0,0"))
            (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
            (rule "cut_direct" (formula "35") (term "1"))
            (branch "CUT: DualPivotQuicksort.e5@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 TRUE"
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_geqRight" (formula "36"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
               (rule "leq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "32") (term "0,0"))
               (rule "mul_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "32") (term "0"))
               (rule "add_literals" (formula "32") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "32"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
               (rule "polySimp_elimOne" (formula "32") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "add_literals" (formula "30") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "polySimp_elimOne" (formula "30") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
               (rule "polySimp_rightDist" (formula "28") (term "0,0"))
               (rule "mul_literals" (formula "28") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
               (rule "polySimp_elimOne" (formula "28") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
               (rule "polySimp_rightDist" (formula "24") (term "0,0"))
               (rule "mul_literals" (formula "24") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0"))
               (rule "add_literals" (formula "24") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
               (rule "polySimp_elimOne" (formula "24") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "12"))
               (rule "qeq_literals" (formula "24") (term "0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "closeFalse" (formula "24"))
            )
            (branch "CUT: DualPivotQuicksort.e5@anon_heap_calcE<<anonHeapFunction>> <= 2147483647 FALSE"
               (builtin "One Step Simplification" (formula "36"))
               (rule "false_right" (formula "36"))
               (rule "inEqSimp_leqRight" (formula "35"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "33"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
               (rule "leq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
               (rule "qeq_literals" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "closeFalse" (formula "16"))
            )
         )
         (branch "right <= 2147483647 + left FALSE"
            (rule "inEqSimp_leqRight" (formula "33"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0"))
            (rule "qeq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
            (rule "leq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
            (rule "qeq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeFalse" (formula "12"))
         )
      )
   )
)
(branch "Exceptional Post (calcE)"
   (builtin "One Step Simplification" (formula "21"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "21"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "notLeft" (formula "22"))
   (rule "close" (formula "24") (ifseqformula "23"))
)
(branch "Pre (calcE)"
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
   (rule "expand_inInt" (formula "21") (term "1,1"))
   (rule "expand_inInt" (formula "21") (term "0,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,1,1"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,1,1"))
   (rule "replace_int_MIN" (formula "21") (term "0,1,0,1"))
   (rule "replace_int_MAX" (formula "21") (term "1,0,0,1"))
   (rule "replace_known_left" (formula "21") (term "0,0,1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "5")))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "17"))
   (rule "mul_literals" (formula "17") (term "1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
   (rule "mul_literals" (formula "21") (term "1,0,0,0"))
   (rule "add_literals" (formula "21") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1"))
   (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "1"))
   (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_leqRight" (formula "21"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0"))
   (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
   (rule "polySimp_elimOne" (formula "15") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
   (rule "polySimp_elimOne" (formula "17") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
   (rule "mul_literals" (formula "18") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
   (rule "leq_literals" (formula "5") (term "0"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
   (rule "leq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_subsumption1" (formula "14") (term "0,0,0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
   (rule "qeq_literals" (formula "14") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
   (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
   (rule "add_literals" (formula "16") (term "1"))
   (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,0"))
   (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "inEqSimp_homoInEq1" (formula "15"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0"))
   (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
   (rule "leq_literals" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq1" (formula "12"))
   (rule "mul_literals" (formula "12") (term "1,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0"))
   (rule "add_literals" (formula "12") (term "0,0"))
   (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "1"))
   (rule "mul_literals" (formula "13") (term "1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0"))
   (rule "add_literals" (formula "13") (term "0,0"))
   (rule "applyEq" (formula "17") (term "1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
   (rule "add_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12"))
   (rule "mul_literals" (formula "12") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13"))
   (rule "mul_literals" (formula "13") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
   (rule "leq_literals" (formula "15") (term "0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "13"))
   (rule "leq_literals" (formula "12") (term "0"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "12"))
   (rule "leq_literals" (formula "4") (term "0"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "inEqSimp_and_subsumption3" (formula "5") (term "0,0,0"))
   (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "inEqSimp_and_subsumption3" (formula "13") (term "0,0,0"))
   (rule "leq_literals" (formula "13") (term "0,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_and_subsumption2" (formula "14") (term "0,0,0"))
   (rule "leq_literals" (formula "14") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "nnf_imp2or" (formula "5") (term "0"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "5") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
   (rule "mul_literals" (formula "5") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
   (rule "mul_literals" (formula "5") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1,0"))
   (rule "commute_or" (formula "5") (term "0,0,0"))
   (rule "commute_or" (formula "13") (term "0,0,0"))
   (rule "commute_or_2" (formula "5") (term "0,0"))
   (rule "commute_or_2" (formula "13") (term "0,0"))
   (rule "cnf_rightDist" (formula "5") (term "0"))
   (rule "distr_forallAnd" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "commute_or" (formula "6") (term "0"))
   (rule "commute_or_2" (formula "15") (term "0,0,0,1,0"))
   (rule "commute_or_2" (formula "15") (term "0,0,1,0"))
   (rule "commute_or" (formula "14") (term "0,0,0,0,1,0"))
   (rule "commute_or_2" (formula "14") (term "0,0,0,1,0"))
   (rule "commute_or_2" (formula "14") (term "0,0,1,0"))
   (rule "commute_or" (formula "15") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_or_tautInEq1" (formula "15") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0"))
   (rule "qeq_literals" (formula "15") (term "1,0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
   (rule "leq_literals" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
   (rule "expand_inInt" (formula "13"))
   (rule "replace_int_MIN" (formula "13") (term "0,1"))
   (rule "replace_int_MAX" (formula "13") (term "1,0"))
   (rule "andLeft" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "15"))
   (rule "qeq_literals" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "closeFalse" (formula "13"))
)
)

}
