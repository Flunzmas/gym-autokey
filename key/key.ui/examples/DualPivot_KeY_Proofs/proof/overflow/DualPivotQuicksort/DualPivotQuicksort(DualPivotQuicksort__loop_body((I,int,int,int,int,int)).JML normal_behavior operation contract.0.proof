\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 25 02:44:51 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Apr 25 02:44:51 CEST 2017
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:loop_body([I,int,int,int,int,int)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:loop_body([I,int,int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))

(autoModeTime "55460")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,k,left,right,pivot1,pivot2,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "exLeft" (formula "27") (inst "sk=y_0"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "27"))
(rule "exLeft" (formula "26") (inst "sk=x_0"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "26"))
(rule "eqSymm" (formula "37") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "36"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "24") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "19"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "assignment" (formula "37") (term "1"))
(builtin "One Step Simplification" (formula "37"))
(rule "elementOfUnion" (formula "37") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "37") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "37") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "37") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "commute_and_2" (formula "25") (term "0,0"))
(rule "commute_and_2" (formula "23") (term "0,0"))
(rule "commute_and_2" (formula "9") (term "0,0"))
(rule "commute_and_2" (formula "35") (term "0,0"))
(rule "commute_and_2" (formula "34") (term "0,0"))
(rule "commute_and_2" (formula "24") (term "0,0"))
(rule "commute_and_2" (formula "35") (term "0,0,1,0"))
(rule "commute_and" (formula "25") (term "0,0,0"))
(rule "commute_and" (formula "23") (term "0,0,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and_2" (formula "9") (term "0,0"))
(rule "commute_and" (formula "35") (term "0,0,0"))
(rule "commute_and" (formula "34") (term "0,0,0"))
(rule "commute_and_2" (formula "34") (term "0,0"))
(rule "commute_and_2" (formula "34") (term "0,0,1,0"))
(rule "commute_and_2" (formula "24") (term "0,0,0"))
(rule "commute_and" (formula "24") (term "0,0,0,0"))
(rule "commute_and_2" (formula "24") (term "0,0,0"))
(rule "commute_and_2" (formula "24") (term "0,0"))
(rule "commute_and" (formula "35") (term "0,0,0,1,0"))
(rule "methodBodyExpand" (formula "37") (term "1") (newnames "heapBefore_loop_body,savedHeapBefore_loop_body"))
(builtin "One Step Simplification" (formula "37"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "ak"))
(rule "assignment_array2" (formula "37"))
(branch "Normal Execution (_a != null)"
   (builtin "One Step Simplification" (formula "37"))
   (rule "commute_and" (formula "34") (term "0,0,0,1,0"))
   (rule "commute_and_2" (formula "34") (term "0,0,1,0"))
   (rule "ifElseUnfold" (formula "37") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "37") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "37") (term "1"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "arrayLengthNotNegative" (formula "21") (term "1"))
   (rule "arrayLengthIsAShort" (formula "22") (term "1"))
   (rule "ifElseSplit" (formula "39"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eval_order_array_access3" (formula "40") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_arr_10"))
      (rule "assignment" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_31"))
      (rule "assignment" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_32"))
      (rule "eval_order_array_access5" (formula "40") (term "1") (inst "#v1=x_33") (inst "#ar1=x_arr_11"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_arr_11"))
      (rule "assignment" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "variableDeclarationAssign" (formula "40") (term "1"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_33"))
      (rule "activeUseStaticFieldReadAccess" (formula "40") (term "1"))
      (rule "assignment_read_static_attribute" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "assignment_array2" (formula "40"))
      (branch "Normal Execution (x_arr_11 != null)"
         (builtin "One Step Simplification" (formula "40"))
         (rule "assignment_to_primitive_array_component" (formula "40"))
         (branch "Normal Execution (x_arr_10 != null)"
            (builtin "One Step Simplification" (formula "40"))
            (rule "eval_order_array_access2" (formula "40") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
            (rule "variableDeclarationAssign" (formula "40") (term "1"))
            (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_arr_12"))
            (rule "assignment" (formula "40") (term "1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "variableDeclarationAssign" (formula "40") (term "1"))
            (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_34"))
            (rule "activeUseStaticFieldReadAccess" (formula "40") (term "1"))
            (rule "assignment_read_static_attribute" (formula "40") (term "1"))
            (builtin "One Step Simplification" (formula "40"))
            (rule "dismissNonSelectedField" (formula "40") (term "0,1,0"))
            (rule "assignment_to_primitive_array_component" (formula "40"))
            (branch "Normal Execution (x_arr_12 != null)"
               (builtin "One Step Simplification" (formula "40"))
               (rule "preincrement" (formula "40") (term "1"))
               (rule "activeUseStaticFieldWriteAccess" (formula "40") (term "1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_35"))
               (rule "compound_int_cast_expression" (formula "40") (term "1") (inst "#v=x_36"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_36"))
               (rule "remove_parentheses_right" (formula "40") (term "1"))
               (rule "compound_addition_1" (formula "40") (term "1") (inst "#v=x_37"))
               (rule "variableDeclarationAssign" (formula "40") (term "1"))
               (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_37"))
               (rule "activeUseStaticFieldReadAccess" (formula "40") (term "1"))
               (rule "assignment_read_static_attribute" (formula "40") (term "1"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "dismissNonSelectedField" (formula "40") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "40") (term "0,1,0"))
               (rule "assignmentAdditionInt" (formula "40") (term "1"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "translateJavaAddInt" (formula "40") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "40") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
               (rule "widening_identity_cast_5" (formula "40") (term "1"))
               (rule "assignment" (formula "40") (term "1"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "assignment_write_static_attribute" (formula "40") (term "1"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "methodCallEmpty" (formula "40") (term "1"))
               (rule "tryEmpty" (formula "40") (term "1"))
               (rule "emptyModality" (formula "40") (term "1"))
               (rule "andRight" (formula "40"))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "closeTrue" (formula "40"))
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "allRight" (formula "40") (inst "sk=f_0"))
                  (rule "allRight" (formula "40") (inst "sk=o_0"))
                  (rule "orRight" (formula "40"))
                  (rule "orRight" (formula "40"))
                  (rule "orRight" (formula "40"))
                  (rule "orRight" (formula "40"))
                  (rule "eqSymm" (formula "44"))
                  (rule "eqSymm" (formula "42") (term "0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                  (rule "mul_literals" (formula "30") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1"))
                  (rule "mul_literals" (formula "34") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "45"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                  (rule "mul_literals" (formula "33") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                  (rule "mul_literals" (formula "33") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "33"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "qeq_literals" (formula "23") (term "0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                  (rule "mul_literals" (formula "37") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1"))
                  (rule "polySimp_rightDist" (formula "37") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                  (rule "mul_literals" (formula "37") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "15"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "34"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "qeq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                  (rule "times_zero_1" (formula "20") (term "0,0"))
                  (rule "add_zero_left" (formula "20") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "nnf_imp2or" (formula "42") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_imp2or" (formula "43") (term "0"))
                  (rule "nnf_imp2or" (formula "30") (term "0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "commute_and" (formula "45"))
                  (rule "commute_and" (formula "46"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                  (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                  (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "cut_direct" (formula "48") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "false_right" (formula "49"))
                     (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "48") (term "0"))
                     (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "false_right" (formula "48"))
                     (rule "applyEqRigid" (formula "48") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3") (term "1,0,0"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "46"))
                     (rule "applyEqRigid" (formula "46") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "closeTrue" (formula "46"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "notRight" (formula "49"))
                     (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "false_right" (formula "47"))
                     (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "48"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "false_right" (formula "46"))
                     (rule "cut_direct" (formula "46") (term "0"))
                     (branch "CUT: o_0 = a TRUE"
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                        (rule "nnf_ex2all" (formula "46"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "44") (term "0,0"))
                        (rule "commute_or_2" (formula "34") (term "0,0"))
                        (rule "cnf_rightDist" (formula "33") (term "0"))
                        (rule "distr_forallAnd" (formula "33"))
                        (rule "andLeft" (formula "33"))
                        (rule "commute_or" (formula "34") (term "0"))
                        (rule "commute_or_2" (formula "45") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "all_pull_out3" (formula "46") (term "0"))
                        (rule "shift_paren_or" (formula "46") (term "0,0"))
                        (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "46") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "46") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "45") (term "0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "45") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "45") (term "0,0,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "f_0 = arr(k) TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4") (term "0,0"))
                           (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "3"))
                           (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "6") (ifseqformula "47"))
                           (rule "eqSymm" (formula "48"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                           (rule "andLeft" (formula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "f_0 = arr(k) FALSE"
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "allLeft" (formula "1") (inst "t=y_0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "42"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "41"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "allLeft" (formula "1") (inst "t=x_0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "38"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "allLeft" (formula "1") (inst "t=k"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allLeft" (formula "1") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "1") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch "CUT: o_0 = a FALSE"
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "false_right" (formula "47"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
            (branch "Null Reference (x_arr_12 = null)"
               (rule "false_right" (formula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr_12 != null, but x_34 Out of Bounds!)"
               (rule "false_right" (formula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "polySimp_elimOne" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35"))
               (rule "polySimp_mulComm0" (formula "35") (term "1"))
               (rule "polySimp_rightDist" (formula "35") (term "1"))
               (rule "mul_literals" (formula "35") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "37"))
               (rule "polySimp_mulComm0" (formula "37") (term "1"))
               (rule "polySimp_rightDist" (formula "37") (term "1"))
               (rule "mul_literals" (formula "37") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
               (rule "polySimp_elimOne" (formula "37") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31"))
               (rule "polySimp_mulComm0" (formula "31") (term "1"))
               (rule "polySimp_rightDist" (formula "31") (term "1"))
               (rule "mul_literals" (formula "31") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
               (rule "polySimp_elimOne" (formula "30") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1"))
               (rule "polySimp_rightDist" (formula "22") (term "1"))
               (rule "mul_literals" (formula "22") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1"))
               (rule "polySimp_rightDist" (formula "33") (term "1"))
               (rule "mul_literals" (formula "33") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
               (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0"))
               (rule "polySimp_addComm0" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "polySimp_mulComm0" (formula "15") (term "1"))
               (rule "polySimp_rightDist" (formula "15") (term "1"))
               (rule "mul_literals" (formula "15") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "mul_literals" (formula "20") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1"))
               (rule "polySimp_rightDist" (formula "20") (term "1"))
               (rule "mul_literals" (formula "20") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
               (rule "polySimp_mulComm0" (formula "36") (term "1"))
               (rule "polySimp_rightDist" (formula "36") (term "1"))
               (rule "mul_literals" (formula "36") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
               (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0"))
               (rule "qeq_literals" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "14"))
               (rule "polySimp_rightDist" (formula "20") (term "0,0"))
               (rule "mul_literals" (formula "20") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
               (rule "polySimp_elimOne" (formula "20") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
               (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1"))
               (rule "polySimp_rightDist" (formula "23") (term "1"))
               (rule "mul_literals" (formula "23") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "37"))
               (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0"))
               (rule "qeq_literals" (formula "23") (term "0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
               (rule "polySimp_rightDist" (formula "32") (term "0,0"))
               (rule "mul_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32"))
               (rule "polySimp_mulComm0" (formula "32") (term "1"))
               (rule "polySimp_rightDist" (formula "32") (term "1"))
               (rule "mul_literals" (formula "32") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
               (rule "times_zero_1" (formula "19") (term "0,0"))
               (rule "add_zero_left" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "30") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "29") (term "0"))
               (rule "nnf_imp2or" (formula "31") (term "0"))
               (rule "nnf_imp2or" (formula "42") (term "0"))
               (rule "nnf_imp2or" (formula "41") (term "0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
               (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
               (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
               (rule "mul_literals" (formula "41") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
               (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
               (rule "commute_or" (formula "1"))
               (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "31") (term "0,0"))
               (rule "commute_or_2" (formula "41") (term "0,0"))
               (rule "commute_or_2" (formula "11") (term "0,0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "cnf_rightDist" (formula "30") (term "0"))
               (rule "distr_forallAnd" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "commute_or" (formula "31") (term "0"))
               (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
               (rule "all_pull_out3" (formula "43") (term "0"))
               (rule "shift_paren_or" (formula "43") (term "0,0"))
               (rule "shift_paren_or" (formula "43") (term "0,0,0"))
               (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
               (rule "all_pull_out3" (formula "42") (term "0"))
               (rule "shift_paren_or" (formula "42") (term "0,0"))
               (rule "shift_paren_or" (formula "42") (term "0,0,0"))
               (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "42") (term "0,0,0,0,0,0"))
               (rule "allLeft" (formula "11") (inst "t=k"))
               (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "19"))
               (rule "qeq_literals" (formula "11") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
               (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "11") (term "0,0,1"))
               (rule "leq_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: DualPivotQuicksort.less >= a.length TRUE"
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "CUT: DualPivotQuicksort.less >= a.length FALSE"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "mul_literals" (formula "23") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "21"))
                  (rule "qeq_literals" (formula "24") (term "0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "closeFalse" (formula "24"))
               )
            )
         )
         (branch "Null Reference (x_arr_10 = null)"
            (rule "false_right" (formula "41"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_10 != null, but x_31 Out of Bounds!)"
            (rule "false_right" (formula "41"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "37"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "35"))
            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1"))
            (rule "polySimp_rightDist" (formula "22") (term "1"))
            (rule "mul_literals" (formula "22") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0"))
            (rule "polySimp_elimOne" (formula "19") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
            (rule "polySimp_elimOne" (formula "26") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "37"))
            (rule "polySimp_mulComm0" (formula "37") (term "1"))
            (rule "polySimp_rightDist" (formula "37") (term "1"))
            (rule "mul_literals" (formula "37") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
            (rule "polySimp_elimOne" (formula "37") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1"))
            (rule "polySimp_rightDist" (formula "33") (term "1"))
            (rule "mul_literals" (formula "33") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35"))
            (rule "polySimp_mulComm0" (formula "35") (term "1"))
            (rule "polySimp_rightDist" (formula "35") (term "1"))
            (rule "mul_literals" (formula "35") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
            (rule "polySimp_elimOne" (formula "35") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1"))
            (rule "polySimp_rightDist" (formula "31") (term "1"))
            (rule "mul_literals" (formula "31") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "17"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
            (rule "qeq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "closeFalse" (formula "16"))
         )
      )
      (branch "Null Reference (x_arr_11 = null)"
         (rule "false_right" (formula "41"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_11 != null, but x_33 Out of Bounds!)"
         (rule "false_right" (formula "41"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
         (rule "inEqSimp_ltToLeq" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "35"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "34"))
         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "34") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "33"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "37"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1"))
         (rule "polySimp_rightDist" (formula "22") (term "1"))
         (rule "mul_literals" (formula "22") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0"))
         (rule "polySimp_elimOne" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "35"))
         (rule "polySimp_mulComm0" (formula "35") (term "1"))
         (rule "polySimp_rightDist" (formula "35") (term "1"))
         (rule "mul_literals" (formula "35") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
         (rule "polySimp_elimOne" (formula "35") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1"))
         (rule "polySimp_rightDist" (formula "31") (term "1"))
         (rule "mul_literals" (formula "31") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "34"))
         (rule "polySimp_mulLiterals" (formula "34") (term "0"))
         (rule "polySimp_elimOne" (formula "34") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
         (rule "polySimp_elimOne" (formula "30") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33"))
         (rule "polySimp_mulComm0" (formula "33") (term "1"))
         (rule "polySimp_rightDist" (formula "33") (term "1"))
         (rule "mul_literals" (formula "33") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37"))
         (rule "polySimp_mulComm0" (formula "37") (term "1"))
         (rule "polySimp_rightDist" (formula "37") (term "1"))
         (rule "mul_literals" (formula "37") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
         (rule "polySimp_rightDist" (formula "19") (term "0,0"))
         (rule "mul_literals" (formula "19") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
         (rule "polySimp_rightDist" (formula "31") (term "0,0"))
         (rule "mul_literals" (formula "31") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0"))
         (rule "polySimp_addComm1" (formula "31") (term "0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1"))
         (rule "polySimp_rightDist" (formula "31") (term "1"))
         (rule "mul_literals" (formula "31") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "polySimp_mulComm0" (formula "15") (term "1"))
         (rule "polySimp_rightDist" (formula "15") (term "1"))
         (rule "mul_literals" (formula "15") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
         (rule "polySimp_rightDist" (formula "21") (term "0,0"))
         (rule "mul_literals" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1"))
         (rule "polySimp_rightDist" (formula "21") (term "1"))
         (rule "mul_literals" (formula "21") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "33"))
         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0"))
         (rule "qeq_literals" (formula "21") (term "0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
         (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0"))
         (rule "polySimp_addComm0" (formula "23") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
         (rule "polySimp_mulComm0" (formula "23") (term "1"))
         (rule "polySimp_rightDist" (formula "23") (term "1"))
         (rule "mul_literals" (formula "23") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "33"))
         (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0"))
         (rule "qeq_literals" (formula "23") (term "0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
         (rule "polySimp_rightDist" (formula "37") (term "0,0"))
         (rule "mul_literals" (formula "37") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37"))
         (rule "polySimp_mulComm0" (formula "37") (term "1"))
         (rule "polySimp_rightDist" (formula "37") (term "1"))
         (rule "mul_literals" (formula "37") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
         (rule "times_zero_1" (formula "19") (term "0,0"))
         (rule "add_zero_left" (formula "19") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
         (rule "mul_literals" (formula "19") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
         (rule "leq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "nnf_imp2or" (formula "30") (term "0"))
         (rule "nnf_imp2or" (formula "41") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "42") (term "0"))
         (rule "nnf_imp2or" (formula "31") (term "0"))
         (rule "nnf_imp2or" (formula "29") (term "0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
         (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
         (rule "mul_literals" (formula "41") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
         (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "29") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
         (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
         (rule "commute_or" (formula "1"))
         (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
         (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
         (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or_2" (formula "41") (term "0,0"))
         (rule "commute_or_2" (formula "31") (term "0,0"))
         (rule "commute_or_2" (formula "11") (term "0,0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "cnf_rightDist" (formula "30") (term "0"))
         (rule "distr_forallAnd" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "commute_or" (formula "31") (term "0"))
         (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
         (rule "all_pull_out3" (formula "43") (term "0"))
         (rule "shift_paren_or" (formula "43") (term "0,0"))
         (rule "shift_paren_or" (formula "43") (term "0,0,0"))
         (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
         (rule "all_pull_out3" (formula "42") (term "0"))
         (rule "shift_paren_or" (formula "42") (term "0,0"))
         (rule "shift_paren_or" (formula "42") (term "0,0,0"))
         (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "42") (term "0,0,0,0,0,0"))
         (rule "allLeft" (formula "11") (inst "t=k"))
         (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "19"))
         (rule "qeq_literals" (formula "11") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
         (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "11") (term "0,0,1"))
         (rule "leq_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "cut_direct" (formula "1") (term "1"))
         (branch "CUT: DualPivotQuicksort.less >= a.length TRUE"
            (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "29"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "CUT: DualPivotQuicksort.less >= a.length FALSE"
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "45"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "23") (term "0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1"))
            (rule "polySimp_rightDist" (formula "23") (term "1"))
            (rule "mul_literals" (formula "23") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0"))
            (rule "add_literals" (formula "24") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
            (rule "polySimp_elimOne" (formula "24") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "24"))
            (rule "qeq_literals" (formula "21") (term "0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "closeFalse" (formula "21"))
         )
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "ifUnfold" (formula "40") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_1"))
      (rule "greater_than_comparison_simple" (formula "40") (term "1"))
      (builtin "One Step Simplification" (formula "40"))
      (rule "ifSplit" (formula "40"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "41"))
         (builtin "Use Operation Contract" (formula "41") (newnames "heapBefore_move_great_left_in_loop,exc_0,heapAfter_move_great_left_in_loop,anon_heap_move_great_left_in_loop") (contract "DualPivotQuicksort[DualPivotQuicksort::move_great_left_in_loop([I,int,int,int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (move_great_left_in_loop)"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "andLeft" (formula "40"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "42"))
            (rule "andLeft" (formula "43"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "47"))
            (rule "inEqSimp_commuteLeq" (formula "41"))
            (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "44"))
            (rule "pullOutSelect" (formula "42") (term "0,0,0,0,0") (inst "selectSK=DualPivotQuicksort_great_0"))
            (rule "applyEq" (formula "44") (term "0,2,0,0") (ifseqformula "42"))
            (rule "applyEq" (formula "46") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "45") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "49") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "42"))
            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "eqSymm" (formula "44") (term "1"))
            (rule "elementOfSingleton" (formula "42") (term "0,0"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "44") (term "0,2,0,0") (ifseqformula "42"))
            (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "42"))
            (rule "hideAuxiliaryEq" (formula "42"))
            (rule "eqSymm" (formula "43") (term "1"))
            (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=DualPivotQuicksort_less_0"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "elementOfSingleton" (formula "47") (term "0,0"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "47"))
            (rule "hideAuxiliaryEq" (formula "47"))
            (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")) (ifInst ""  (formula "3")))
            (rule "elementOfSingleton" (formula "43") (term "0,0"))
            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
            (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "43"))
            (rule "hideAuxiliaryEq" (formula "43"))
            (rule "commute_or" (formula "43"))
            (rule "commute_and_2" (formula "46") (term "0,0"))
            (rule "commute_and_2" (formula "42") (term "0,0"))
            (rule "commute_and" (formula "46") (term "0,0,0"))
            (rule "commute_and_2" (formula "46") (term "0,0"))
            (rule "commute_and" (formula "42") (term "0,0,0"))
            (rule "ifUnfold" (formula "51") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_2"))
            (rule "compound_equality_comparison_1" (formula "51") (term "1") (inst "#v0=x_3"))
            (rule "variableDeclarationAssign" (formula "51") (term "1"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_3"))
            (rule "activeUseStaticFieldReadAccess" (formula "51") (term "1"))
            (rule "assignment_read_static_attribute" (formula "51") (term "1"))
            (builtin "One Step Simplification" (formula "51"))
            (rule "replaceKnownSelect_taclet0010_0" (formula "51") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "51") (term "0,1,0"))
            (rule "equality_comparison_simple" (formula "51") (term "1"))
            (builtin "One Step Simplification" (formula "51"))
            (rule "ifSplit" (formula "51"))
            (branch "if x_2 true"
               (builtin "One Step Simplification" (formula "52"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "true_left" (formula "44"))
               (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_commuteLeq" (formula "45"))
               (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "42") (term "0,1,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
               (rule "postdecrement" (formula "48") (term "1"))
               (rule "activeUseStaticFieldWriteAccess" (formula "48") (term "1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "48") (term "1"))
               (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_28"))
               (rule "compound_subtraction_1" (formula "48") (term "1") (inst "#v=x_29"))
               (rule "variableDeclarationAssign" (formula "48") (term "1"))
               (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_29"))
               (rule "compound_int_cast_expression" (formula "48") (term "1") (inst "#v=x_30"))
               (rule "variableDeclarationAssign" (formula "48") (term "1"))
               (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_30"))
               (rule "activeUseStaticFieldReadAccess" (formula "48") (term "1"))
               (rule "assignment_read_static_attribute" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "replaceKnownSelect_taclet0010_0" (formula "48") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "48") (term "0,1,0"))
               (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "1"))
               (rule "widening_identity_cast_5" (formula "48") (term "1"))
               (rule "assignment" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "assignmentSubtractionInt" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "translateJavaSubInt" (formula "48") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "48") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "48") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "48") (term "1,0,1,0"))
               (rule "mul_literals" (formula "48") (term "1,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "48") (term "1,0,1,0"))
               (rule "assignment_write_static_attribute" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "blockReturnNoValue" (formula "48") (term "1"))
               (rule "methodCallEmptyReturn" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "tryEmpty" (formula "48") (term "1"))
               (rule "emptyModality" (formula "48") (term "1"))
               (rule "andRight" (formula "48"))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "closeTrue" (formula "48"))
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "allRight" (formula "48") (inst "sk=f_1"))
                  (rule "allRight" (formula "48") (inst "sk=o_1"))
                  (rule "orRight" (formula "48"))
                  (rule "orRight" (formula "48"))
                  (rule "orRight" (formula "48"))
                  (rule "orRight" (formula "48"))
                  (rule "eqSymm" (formula "52"))
                  (rule "eqSymm" (formula "50") (term "0,0,0,1"))
                  (rule "inEqSimp_ltRight" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "44"))
                  (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                  (rule "add_literals" (formula "44") (term "1,0"))
                  (rule "times_zero_1" (formula "44") (term "0"))
                  (rule "leq_literals" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                  (rule "mul_literals" (formula "34") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                  (rule "mul_literals" (formula "23") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "mul_literals" (formula "32") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1"))
                  (rule "polySimp_rightDist" (formula "38") (term "1"))
                  (rule "mul_literals" (formula "38") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "52"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_2 false"
               (builtin "One Step Simplification" (formula "52"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_4"))
               (rule "compound_less_than_comparison_1" (formula "52") (term "1") (inst "#v0=x_5"))
               (rule "variableDeclarationAssign" (formula "52") (term "1"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_5"))
               (rule "eval_order_array_access5" (formula "52") (term "1") (inst "#v1=x_6") (inst "#ar1=x_arr"))
               (rule "variableDeclarationAssign" (formula "52") (term "1"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_arr"))
               (rule "assignment" (formula "52") (term "1"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "variableDeclarationAssign" (formula "52") (term "1"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_6"))
               (rule "activeUseStaticFieldReadAccess" (formula "52") (term "1"))
               (rule "assignment_read_static_attribute" (formula "52") (term "1"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "replaceKnownSelect_taclet0010_0" (formula "52") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "52") (term "0,1,0"))
               (rule "assignment_array2" (formula "52"))
               (branch "Normal Execution (x_arr != null)"
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "replaceKnownSelect_taclet0010_4" (formula "52") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0010_5" (formula "52") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "52") (term "1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "ifElseSplit" (formula "52"))
                  (branch "if x_4 true"
                     (builtin "One Step Simplification" (formula "53"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eval_order_array_access3" (formula "53") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_4"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_14"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_15"))
                     (rule "eval_order_array_access5" (formula "53") (term "1") (inst "#v1=x_16") (inst "#ar1=x_arr_5"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_5"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_16"))
                     (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                     (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "replaceKnownSelect_taclet0010_2" (formula "53") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_3" (formula "53") (term "0,1,0"))
                     (rule "assignment_array2" (formula "53"))
                     (branch "Normal Execution (x_arr_5 != null)"
                        (builtin "One Step Simplification" (formula "53"))
                        (rule "pullOutSelect" (formula "53") (term "0,1,0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "applyEqReverse" (formula "54") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "assignment_to_primitive_array_component" (formula "53"))
                        (branch "Normal Execution (x_arr_4 != null)"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eval_order_array_access2" (formula "53") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_6"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_17"))
                           (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                           (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet0010_2" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_3" (formula "53") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "53") (term "1") (inst "#v1=x_19") (inst "#v2=x_18") (inst "#v0=x_arr_7"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_7"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_18"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_19"))
                           (rule "eval_order_array_access5" (formula "53") (term "1") (inst "#v1=x_20") (inst "#ar1=x_arr_8"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_8"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_20"))
                           (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                           (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                           (rule "assignment_array2" (formula "53"))
                           (branch "Normal Execution (x_arr_8 != null)"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0,1,0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0010_4" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010_5" (formula "1") (term "2,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "assignment_to_primitive_array_component" (formula "53"))
                              (branch "Normal Execution (x_arr_7 != null)"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "preincrement" (formula "53") (term "1"))
                                 (rule "activeUseStaticFieldWriteAccess" (formula "53") (term "1") (inst "#v0=x"))
                                 (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                 (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_21"))
                                 (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x_22"))
                                 (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                 (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_22"))
                                 (rule "remove_parentheses_right" (formula "53") (term "1"))
                                 (rule "compound_addition_1" (formula "53") (term "1") (inst "#v=x_23"))
                                 (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                 (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_23"))
                                 (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                                 (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet0010_2" (formula "53") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010_3" (formula "53") (term "0,1,0"))
                                 (rule "assignmentAdditionInt" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "translateJavaAddInt" (formula "53") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "53") (term "1"))
                                 (rule "assignment" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "assignment_write_static_attribute" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "blockEmpty" (formula "53") (term "1"))
                                 (rule "eval_order_array_access2" (formula "53") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                 (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_9"))
                                 (rule "assignment" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                 (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_24"))
                                 (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                                 (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "53"))
                                 (branch "Normal Execution (x_arr_9 != null)"
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "predecrement" (formula "53") (term "1"))
                                    (rule "activeUseStaticFieldWriteAccess" (formula "53") (term "1") (inst "#v0=x"))
                                    (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                    (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_25"))
                                    (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x_26"))
                                    (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                    (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_26"))
                                    (rule "remove_parentheses_right" (formula "53") (term "1"))
                                    (rule "compound_subtraction_1" (formula "53") (term "1") (inst "#v=x_27"))
                                    (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                    (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_27"))
                                    (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                                    (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                                    (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                                    (rule "assignmentSubtractionInt" (formula "53") (term "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "translateJavaSubInt" (formula "53") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "53") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "53") (term "1,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "53") (term "1,0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "53") (term "1"))
                                    (rule "assignment" (formula "53") (term "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "assignment_write_static_attribute" (formula "53") (term "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "methodCallEmpty" (formula "53") (term "1"))
                                    (rule "tryEmpty" (formula "53") (term "1"))
                                    (rule "emptyModality" (formula "53") (term "1"))
                                    (rule "andRight" (formula "53"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "closeTrue" (formula "53"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "allRight" (formula "53") (inst "sk=f_5"))
                                       (rule "allRight" (formula "53") (inst "sk=o_5"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "eqSymm" (formula "55") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltRight" (formula "51"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "44") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1"))
                                       (rule "mul_literals" (formula "38") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1"))
                                       (rule "mul_literals" (formula "34") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "46") (ifseqformula "51"))
                                       (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "46"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                       (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0"))
                                       (rule "leq_literals" (formula "51") (term "0"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=f_5_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "49"))
                                       (rule "times_zero_1" (formula "45") (term "0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                       (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                       (rule "mul_literals" (formula "52") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1"))
                                       (rule "mul_literals" (formula "52") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "52"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                       (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1"))
                                       (rule "mul_literals" (formula "39") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "27"))
                                       (rule "times_zero_1" (formula "48") (term "0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                       (rule "mul_literals" (formula "48") (term "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "62"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1"))
                                       (rule "mul_literals" (formula "53") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "53"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "nnf_imp2or" (formula "32") (term "0"))
                                       (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0"))
                                       (rule "nnf_imp2or" (formula "50") (term "0"))
                                       (rule "nnf_imp2or" (formula "56") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "33") (term "0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0"))
                                       (rule "commute_and" (formula "60"))
                                       (rule "commute_and" (formula "61"))
                                       (rule "nnf_imp2or" (formula "43") (term "0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "56") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "50") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "63") (term "0,0"))
                                       (branch "CUT: o_5 = null TRUE"
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "false_right" (formula "64"))
                                          (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "closeTrue" (formula "61"))
                                       )
                                       (branch "CUT: o_5 = null FALSE"
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "notRight" (formula "64"))
                                          (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "false_right" (formula "61"))
                                          (rule "cut_direct" (formula "61") (term "0"))
                                          (branch "CUT: o_5 = a TRUE"
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "nnf_ex2all" (formula "61"))
                                             (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "commute_or_2" (formula "58") (term "0"))
                                             (rule "commute_or_2" (formula "52") (term "0,0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "34") (term "0"))
                                             (rule "distr_forallAnd" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "commute_or" (formula "35") (term "0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "59") (term "0,0"))
                                             (rule "commute_or_2" (formula "59") (term "0"))
                                             (rule "commute_or_2" (formula "17") (term "0,0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "all_pull_out3" (formula "47") (term "0"))
                                             (rule "shift_paren_or" (formula "47") (term "0,0"))
                                             (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "all_pull_out3" (formula "46") (term "0"))
                                             (rule "shift_paren_or" (formula "46") (term "0,0"))
                                             (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "46") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,0,0,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_5 = arr(k) TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "63") (term "0") (ifseqformula "9") (ifseqformula "62"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "eqSymm" (formula "5") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "57"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "54"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "f_5 = arr(k) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "allLeft" (formula "16") (inst "t=right"))
                                                (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                (rule "leq_literals" (formula "16") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "1") (inst "t=k"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "allLeft" (formula "17") (inst "t=k"))
                                                (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "17") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "allLeft" (formula "60") (inst "t=right"))
                                                (rule "replace_known_left" (formula "60") (term "0,0,0,0") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                (rule "leq_literals" (formula "60") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "51"))
                                                (rule "qeq_literals" (formula "60") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_22"))
                                                (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")) (ifInst ""  (formula "9")))
                                                (rule "elementOfSingleton" (formula "60") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")))
                                                (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                                                (rule "hideAuxiliaryEq" (formula "60"))
                                                (rule "allLeft" (formula "60") (inst "t=k"))
                                                (rule "replace_known_left" (formula "60") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1"))
                                                (rule "leq_literals" (formula "60") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "inEqSimp_contradInEq1" (formula "60") (term "1") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "60") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=arr_23"))
                                                (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")) (ifInst ""  (formula "9")))
                                                (rule "elementOfSingleton" (formula "60") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")))
                                                (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "60"))
                                                (rule "hideAuxiliaryEq" (formula "60"))
                                                (rule "allLeft" (formula "1") (inst "t=y_0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "44"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "45"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "allLeft" (formula "1") (inst "t=x_0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "40"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "allLeft" (formula "1") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "allLeft" (formula "1") (inst "t=right"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,1"))
                                                (rule "leq_literals" (formula "1") (term "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "38"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " f_5 = arr(DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>>) TRUE"
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "68") (term "0") (ifseqformula "7") (ifseqformula "67"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "66") (ifseqformula "57"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0"))
                                                   (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "66") (term "0,0"))
                                                   (rule "leq_literals" (formula "66") (term "0"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "false_right" (formula "66"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "33") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "43"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "33") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "allLeft" (formula "34") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                   (rule "allLeft" (formula "35") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                   (rule "allLeft" (formula "57") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "57") (term "0,0,0,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "57") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "pullOutSelect" (formula "57") (term "0,1") (inst "selectSK=arr_24"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "72")))
                                                   (rule "applyEqReverse" (formula "58") (term "0,1") (ifseqformula "57"))
                                                   (rule "hideAuxiliaryEq" (formula "57"))
                                                   (rule "commute_or" (formula "57"))
                                                   (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "66"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "57"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "allLeft" (formula "65") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_24" (formula "65") (term "0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_25" (formula "65") (term "0,1,0,0"))
                                                   (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "56"))
                                                   (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "allLeft" (formula "51") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0,0,0,0,0,0") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "58"))
                                                   (rule "qeq_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0,0"))
                                                   (rule "commute_or_2" (formula "51") (term "0"))
                                                   (rule "allLeft" (formula "18") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "58"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "67")))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "allLeft" (formula "41") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "allLeft" (formula "18") (inst "t=left"))
                                                   (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "allLeft" (formula "69") (inst "t=left"))
                                                   (rule "replace_known_left" (formula "69") (term "0,0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "69") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "pullOutSelect" (formula "69") (term "0,0") (inst "selectSK=arr_25"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "69") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "78")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "69") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "78")))
                                                   (rule "applyEqReverse" (formula "70") (term "0,0") (ifseqformula "69"))
                                                   (rule "hideAuxiliaryEq" (formula "69"))
                                                   (rule "allLeft" (formula "62") (inst "t=left"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_26" (formula "62") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_27" (formula "62") (term "0,1"))
                                                   (rule "replace_known_left" (formula "62") (term "0,0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "inEqSimp_commuteLeq" (formula "62") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "62") (term "0,0") (ifseqformula "29"))
                                                   (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "62") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "62") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "62") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "62") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "62") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "commute_or" (formula "62"))
                                                   (rule "allLeft" (formula "70") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                                   (rule "replaceKnownSelect_taclet0010_4" (formula "70") (term "0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0010_5" (formula "70") (term "0,1,0,0"))
                                                   (rule "replace_known_left" (formula "70") (term "0,0,0,0") (ifseqformula "72"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "60"))
                                                   (rule "qeq_literals" (formula "70") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "17")))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "allLeft" (formula "63") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replaceKnownSelect_taclet00010010_6" (formula "63") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00010010_7" (formula "63") (term "0,1"))
                                                   (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "inEqSimp_commuteLeq" (formula "63") (term "1,0"))
                                                   (rule "commute_or_2" (formula "63"))
                                                   (rule "allLeft" (formula "71") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "71") (term "0,0,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                                   (rule "pullOutSelect" (formula "71") (term "0,0,0") (inst "selectSK=arr_26"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "80")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "71") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "80")))
                                                   (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "71"))
                                                   (rule "hideAuxiliaryEq" (formula "71"))
                                                   (rule "allLeft" (formula "72") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "72") (term "0,0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "inEqSimp_commuteGeq" (formula "72") (term "1"))
                                                   (rule "pullOutSelect" (formula "72") (term "0,0,0") (inst "selectSK=arr_27"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "81")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "72") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "81")))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,0") (ifseqformula "72"))
                                                   (rule "hideAuxiliaryEq" (formula "72"))
                                                   (rule "allLeft" (formula "19") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "allLeft" (formula "43") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "allLeft" (formula "56") (inst "t=right"))
                                                   (rule "replace_known_left" (formula "56") (term "0,0,0,0,0,0,0,0") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "56") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0,0,0") (ifseqformula "60"))
                                                   (rule "qeq_literals" (formula "56") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "allLeft" (formula "57") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "57") (term "0,0,0,0,0,0,0,0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "inEqSimp_contradInEq0" (formula "57") (term "1,0,0,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "57") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0,0,0,0") (ifseqformula "62"))
                                                   (rule "qeq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "allLeft" (formula "58") (inst "t=left"))
                                                   (rule "replace_known_left" (formula "58") (term "0,0,0,0,0,0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0,0,0") (ifseqformula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "allLeft" (formula "44") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_commuteGeq" (formula "44") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0"))
                                                   (rule "allLeft" (formula "45") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "45") (term "0,0"))
                                                   (rule "allLeft" (formula "61") (inst "t=k"))
                                                   (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "qeq_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0,0,0,0") (ifseqformula "73"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "61") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "61") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "allLeft" (formula "19") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "allLeft" (formula "19") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "allLeft" (formula "81") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "81") (term "0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "81"))
                                                   (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                                                   (rule "pullOutSelect" (formula "81") (term "0,0,0") (inst "selectSK=arr_28"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "90")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "81") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "90")))
                                                   (rule "applyEqReverse" (formula "82") (term "0,0,0") (ifseqformula "81"))
                                                   (rule "hideAuxiliaryEq" (formula "81"))
                                                   (rule "allLeft" (formula "20") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "allLeft" (formula "73") (inst "t=x_0"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_30" (formula "73") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_31" (formula "73") (term "0,1"))
                                                   (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "73") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "42") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "42") (term "0,0,0,0,0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "54"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "allLeft" (formula "84") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replaceKnownSelect_taclet00010010_6" (formula "84") (term "0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00010010_7" (formula "84") (term "0,1,0,0"))
                                                   (rule "replace_known_left" (formula "84") (term "0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "84"))
                                                   (rule "allLeft" (formula "75") (inst "t=y_0"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_28" (formula "75") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_29" (formula "75") (term "0,1"))
                                                   (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "57")))
                                                   (rule "true_left" (formula "75"))
                                                   (rule "allLeft" (formula "43") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replace_known_left" (formula "43") (term "0,0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "43") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "allLeft" (formula "21") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "86")))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "allLeft" (formula "76") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "76") (term "0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "76"))
                                                   (rule "inEqSimp_commuteLeq" (formula "76") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "76") (term "0,1") (inst "selectSK=arr_29"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "95")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "76") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "95")))
                                                   (rule "applyEqReverse" (formula "77") (term "0,1") (ifseqformula "76"))
                                                   (rule "hideAuxiliaryEq" (formula "76"))
                                                   (rule "allLeft" (formula "61") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "allLeft" (formula "88") (inst "t=pivot2"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_34" (formula "88") (term "0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_35" (formula "88") (term "0,1,0,0"))
                                                   (rule "replace_known_left" (formula "88") (term "0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "88"))
                                                   (rule "inEqSimp_commuteGeq" (formula "88") (term "1"))
                                                   (rule "allLeft" (formula "62") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "62") (term "0,0,0,0,0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "allLeft" (formula "45") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "45") (term "0,0,0,0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "60"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "45") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "allLeft" (formula "80") (inst "t=pivot1"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_32" (formula "80") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_33" (formula "80") (term "0,1"))
                                                   (rule "replace_known_left" (formula "80") (term "0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "80"))
                                                   (rule "inEqSimp_commuteLeq" (formula "80") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "80") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "80") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "46") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replace_known_left" (formula "46") (term "0,0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,1,0"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "46") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "46") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "46") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "allLeft" (formula "70") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                                   (rule "replace_known_left" (formula "70") (term "0,0,0,0,0,0,0,0") (ifseqformula "94"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0,0,0,0,0") (ifseqformula "76"))
                                                   (rule "qeq_literals" (formula "70") (term "0,1,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "allLeft" (formula "47") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                                   (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "42"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "true_left" (formula "47"))
                                                   (rule "allLeft" (formula "71") (inst "t=x_0"))
                                                   (rule "replace_known_left" (formula "71") (term "0,0,0,0,0,0,0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "inEqSimp_contradInEq0" (formula "71") (term "1,0,0,0,0") (ifseqformula "55"))
                                                   (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "71") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "71") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "allLeft" (formula "44") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "44") (term "0,0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                                   (rule "allLeft" (formula "45") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "45") (term "0,0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                                   (rule "allLeft" (formula "74") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "74") (term "0,0,0,0,0,0,0,0") (ifseqformula "62"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "inEqSimp_contradInEq0" (formula "74") (term "1,0,0,0,0") (ifseqformula "61"))
                                                   (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "74") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "74") (term "0,0,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "74") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "74") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "allLeft" (formula "75") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                                   (rule "replace_known_left" (formula "75") (term "0,0,0,0,0,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "75"))
                                                   (rule "inEqSimp_contradInEq0" (formula "75") (term "1,0,0,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "75") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "75") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "75") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "75"))
                                                   (rule "allLeft" (formula "46") (inst "t=y_0"))
                                                   (rule "replace_known_left" (formula "46") (term "0,0,0,0,0") (ifseqformula "63"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                   (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "true_left" (formula "46"))
                                                   (rule "allLeft" (formula "49") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                   (rule "allLeft" (formula "50") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                   (rule "allLeft" (formula "78") (inst "t=pivot1"))
                                                   (rule "replace_known_left" (formula "78") (term "0,0,0,0,0,0,0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "78"))
                                                   (rule "inEqSimp_homoInEq1" (formula "78") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "78") (term "0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,0"))
                                                   (rule "allLeft" (formula "79") (inst "t=pivot2"))
                                                   (rule "replace_known_left" (formula "79") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "inEqSimp_homoInEq1" (formula "79") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "79") (term "0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,0"))
                                                   (rule "allLeft" (formula "56") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "allLeft" (formula "70") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "70") (term "0,0,0,0,0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "allLeft" (formula "104") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "104") (term "0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "104"))
                                                   (rule "pullOutSelect" (formula "104") (term "0,0,0") (inst "selectSK=arr_30"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "104") (ifseqformula "84"))
                                                   (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "113")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfSingleton" (formula "104") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "113")))
                                                   (rule "applyEqReverse" (formula "105") (term "0,0,0") (ifseqformula "104"))
                                                   (rule "hideAuxiliaryEq" (formula "104"))
                                                   (rule "allLeft" (formula "21") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "105")))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "allLeft" (formula "94") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replaceKnownSelect_taclet01011000000010010_36" (formula "94") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01011000000010010_37" (formula "94") (term "0,1"))
                                                   (rule "replace_known_left" (formula "94") (term "0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "94"))
                                                   (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0"))
                                                   (rule "allLeft" (formula "41") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "allLeft" (formula "52") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "52") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "allLeft" (formula "47") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "allLeft" (formula "85") (inst "t=int::select(heap, a, arr(right))"))
                                                   (rule "replace_known_left" (formula "85") (term "0,0,0,0,0,0,0,0") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "85"))
                                                   (rule "cut_direct" (formula "70") (term "1,0"))
                                                   (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left TRUE"
                                                      (builtin "One Step Simplification" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "replace_known_left" (formula "93") (term "1") (ifseqformula "70"))
                                                      (builtin "One Step Simplification" (formula "93"))
                                                      (rule "true_left" (formula "93"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "70"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replace_known_left" (formula "79") (term "1,0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "79"))
                                                      (rule "true_left" (formula "79"))
                                                      (rule "inEqSimp_contradEq7" (formula "111") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "111") (term "0,0"))
                                                      (rule "add_literals" (formula "111") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "111") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "111") (term "0,0"))
                                                      (rule "leq_literals" (formula "111") (term "0"))
                                                      (builtin "One Step Simplification" (formula "111"))
                                                      (rule "false_right" (formula "111"))
                                                      (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "102"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "70") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "102"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0"))
                                                      (rule "leq_literals" (formula "33"))
                                                      (rule "closeFalse" (formula "33"))
                                                   )
                                                   (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left FALSE"
                                                      (builtin "One Step Simplification" (formula "70"))
                                                      (rule "replace_known_right" (formula "93") (term "1") (ifseqformula "113"))
                                                      (builtin "One Step Simplification" (formula "93"))
                                                      (rule "inEqSimp_geqRight" (formula "113"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "103") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "103") (term "0,0"))
                                                      (rule "mul_literals" (formula "103") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "103") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                      (rule "add_literals" (formula "103") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "103"))
                                                      (rule "polySimp_mulComm0" (formula "103") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "103") (term "1"))
                                                      (rule "mul_literals" (formula "103") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "103") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "103") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "103") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "103"))
                                                      (rule "inEqSimp_homoInEq1" (formula "103"))
                                                      (rule "polySimp_mulComm0" (formula "103") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "103") (term "1,0"))
                                                      (rule "mul_literals" (formula "103") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "103") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                      (rule "add_literals" (formula "103") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "103") (term "0"))
                                                      (rule "add_literals" (formula "103") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "103") (term "1,0"))
                                                      (rule "add_literals" (formula "103") (term "0"))
                                                      (rule "leq_literals" (formula "103"))
                                                      (rule "closeFalse" (formula "103"))
                                                   )
                                                )
                                                (branch " f_5 = arr(DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>>) FALSE"
                                                   (rule "close" (formula "69") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: o_5 = a FALSE"
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "false_right" (formula "62"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_9 = null)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_9 != null, but x_24 Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "false_right" (formula "54"))
                                    (rule "inEqSimp_ltRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1"))
                                    (rule "mul_literals" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                                    (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "0,0"))
                                    (rule "leq_literals" (formula "52") (term "0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "44"))
                                    (rule "qeq_literals" (formula "2") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "48"))
                                    (rule "times_zero_1" (formula "44") (term "0,0"))
                                    (rule "add_zero_left" (formula "44") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1"))
                                    (rule "mul_literals" (formula "36") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "37"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "37"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "50"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1"))
                                    (rule "mul_literals" (formula "51") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "51"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                    (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1"))
                                    (rule "mul_literals" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "25"))
                                    (rule "times_zero_1" (formula "46") (term "0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "mul_literals" (formula "46") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "25"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1"))
                                    (rule "mul_literals" (formula "51") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                    (rule "times_zero_1" (formula "20") (term "0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "2"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "inEqSimp_homoInEq1" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0"))
                                    (rule "add_zero_right" (formula "29") (term "0"))
                                    (rule "leq_literals" (formula "29"))
                                    (rule "closeFalse" (formula "29"))
                                 )
                              )
                              (branch "Null Reference (x_arr_7 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_7 != null, but x_18 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "false_right" (formula "54"))
                                 (rule "inEqSimp_ltRight" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1"))
                                 (rule "mul_literals" (formula "37") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "mul_literals" (formula "33") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                                 (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0"))
                                 (rule "leq_literals" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "false_right" (formula "52"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1"))
                                 (rule "mul_literals" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "50"))
                                 (rule "times_zero_1" (formula "46") (term "0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0"))
                                 (rule "qeq_literals" (formula "24") (term "0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
                                 (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1"))
                                 (rule "mul_literals" (formula "50") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "50"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "mul_literals" (formula "33") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "25"))
                                 (rule "times_zero_1" (formula "46") (term "0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                 (rule "mul_literals" (formula "46") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1"))
                                 (rule "mul_literals" (formula "51") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "51"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_imp2or" (formula "48") (term "0"))
                                 (rule "nnf_imp2or" (formula "54") (term "0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "48") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                 (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "48") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                                 (rule "commute_or" (formula "2"))
                                 (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0"))
                                 (rule "commute_or_2" (formula "48") (term "0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "54") (term "0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or" (formula "31") (term "0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                 (rule "all_pull_out3" (formula "43") (term "0"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "42") (term "0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: DualPivotQuicksort.less >= a.length TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "2"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "CUT: DualPivotQuicksort.less >= a.length FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_geqRight" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                              )
                           )
                           (branch "Null Reference (x_arr_8 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_8 != null, but x_20 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "inEqSimp_ltRight" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1"))
                              (rule "polySimp_rightDist" (formula "37") (term "1"))
                              (rule "mul_literals" (formula "37") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1"))
                              (rule "polySimp_rightDist" (formula "39") (term "1"))
                              (rule "mul_literals" (formula "39") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                              (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0"))
                              (rule "add_zero_right" (formula "52") (term "0,0"))
                              (rule "leq_literals" (formula "52") (term "0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "44"))
                              (rule "qeq_literals" (formula "2") (term "0,1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "48"))
                              (rule "times_zero_1" (formula "44") (term "0,0"))
                              (rule "add_zero_left" (formula "44") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                              (rule "mul_literals" (formula "49") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1"))
                              (rule "polySimp_rightDist" (formula "49") (term "1"))
                              (rule "mul_literals" (formula "49") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "49"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "51"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                              (rule "mul_literals" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "mul_literals" (formula "23") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                              (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                              (rule "mul_literals" (formula "35") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "mul_literals" (formula "25") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                              (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                              (rule "mul_literals" (formula "39") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1"))
                              (rule "polySimp_rightDist" (formula "39") (term "1"))
                              (rule "mul_literals" (formula "39") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "30"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Null Reference (x_arr_4 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_4 != null, but x_14 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "false_right" (formula "54"))
                           (rule "inEqSimp_ltRight" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                           (rule "polySimp_elimOne" (formula "36") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1"))
                           (rule "mul_literals" (formula "39") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1"))
                           (rule "mul_literals" (formula "33") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1"))
                           (rule "mul_literals" (formula "37") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1"))
                           (rule "mul_literals" (formula "35") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                           (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "leq_literals" (formula "52") (term "0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "false_right" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Null Reference (x_arr_5 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_5 != null, but x_16 Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "false_right" (formula "54"))
                        (rule "inEqSimp_ltRight" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "mul_literals" (formula "35") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1"))
                        (rule "mul_literals" (formula "37") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1"))
                        (rule "mul_literals" (formula "39") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                        (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                        (rule "add_literals" (formula "52") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0"))
                        (rule "add_zero_right" (formula "52") (term "0,0"))
                        (rule "leq_literals" (formula "52") (term "0"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "false_right" (formula "52"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                        (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                        (rule "mul_literals" (formula "33") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                        (rule "mul_literals" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1"))
                        (rule "mul_literals" (formula "22") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "34"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1"))
                        (rule "mul_literals" (formula "17") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                        (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                        (rule "mul_literals" (formula "39") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1"))
                        (rule "mul_literals" (formula "39") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "51"))
                        (rule "times_zero_1" (formula "47") (term "0,0"))
                        (rule "add_zero_left" (formula "47") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                        (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                        (rule "mul_literals" (formula "51") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1"))
                        (rule "polySimp_rightDist" (formula "51") (term "1"))
                        (rule "mul_literals" (formula "51") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "51"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                        (rule "times_zero_1" (formula "20") (term "0,0"))
                        (rule "add_zero_left" (formula "20") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "25"))
                        (rule "times_zero_1" (formula "46") (term "0,0"))
                        (rule "add_zero_left" (formula "46") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                        (rule "mul_literals" (formula "46") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "25"))
                        (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                        (rule "mul_literals" (formula "51") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1"))
                        (rule "polySimp_rightDist" (formula "51") (term "1"))
                        (rule "mul_literals" (formula "51") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "51"))
                        (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "qeq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "nnf_imp2or" (formula "48") (term "0"))
                        (rule "nnf_imp2or" (formula "54") (term "0"))
                        (rule "nnf_imp2or" (formula "30") (term "0"))
                        (rule "nnf_imp2or" (formula "42") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_notAnd" (formula "48") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
                        (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                        (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                        (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "48") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "54") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                        (rule "commute_or" (formula "2"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,0"))
                        (rule "commute_or_2" (formula "54") (term "0"))
                        (rule "commute_or_2" (formula "48") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0,0"))
                        (rule "commute_or_2" (formula "31") (term "0,0"))
                        (rule "commute_or_2" (formula "54") (term "0,0"))
                        (rule "commute_or_2" (formula "54") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "cnf_rightDist" (formula "30") (term "0"))
                        (rule "distr_forallAnd" (formula "30"))
                        (rule "andLeft" (formula "30"))
                        (rule "commute_or" (formula "31") (term "0"))
                        (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                        (rule "all_pull_out3" (formula "43") (term "0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "42") (term "0"))
                        (rule "shift_paren_or" (formula "42") (term "0,0"))
                        (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "allLeft" (formula "55") (inst "t=right"))
                        (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "inEqSimp_commuteGeq" (formula "55") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "27"))
                        (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1"))
                        (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "55") (term "0,0,1"))
                        (rule "leq_literals" (formula "55") (term "0,1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "46"))
                        (rule "qeq_literals" (formula "55") (term "0,1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                        (rule "elementOfSingleton" (formula "55") (term "0,0"))
                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "60")))
                        (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "55"))
                        (rule "hideAuxiliaryEq" (formula "55"))
                        (rule "allLeft" (formula "56") (inst "t=k"))
                        (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "56"))
                        (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                        (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "56") (term "0,0,1"))
                        (rule "leq_literals" (formula "56") (term "0,1"))
                        (builtin "One Step Simplification" (formula "56"))
                        (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "18"))
                        (rule "qeq_literals" (formula "56") (term "0,1"))
                        (builtin "One Step Simplification" (formula "56"))
                        (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
                        (rule "elementOfSingleton" (formula "56") (term "0,0"))
                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "61")))
                        (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "56"))
                        (rule "hideAuxiliaryEq" (formula "56"))
                        (rule "cut_direct" (formula "2") (term "1"))
                        (branch "CUT: DualPivotQuicksort.less >= a.length TRUE"
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "2"))
                           (rule "andLeft" (formula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "18"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0"))
                           (rule "add_zero_right" (formula "18") (term "0"))
                           (rule "leq_literals" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "CUT: DualPivotQuicksort.less >= a.length FALSE"
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_geqRight" (formula "60"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                  )
                  (branch "if x_4 false"
                     (builtin "One Step Simplification" (formula "53"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "eval_order_array_access3" (formula "53") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_1"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_7"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_8"))
                     (rule "eval_order_array_access5" (formula "53") (term "1") (inst "#v1=x_9") (inst "#ar1=x_arr_2"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_2"))
                     (rule "assignment" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "variableDeclarationAssign" (formula "53") (term "1"))
                     (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_9"))
                     (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                     (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                     (rule "assignment_array2" (formula "53"))
                     (branch "Normal Execution (x_arr_2 != null)"
                        (builtin "One Step Simplification" (formula "53"))
                        (rule "replaceKnownSelect_taclet0010_4" (formula "53") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010_5" (formula "53") (term "0,1,0"))
                        (rule "assignment_to_primitive_array_component" (formula "53"))
                        (branch "Normal Execution (x_arr_1 != null)"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "blockEmpty" (formula "53") (term "1"))
                           (rule "eval_order_array_access2" (formula "53") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr_3"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "variableDeclarationAssign" (formula "53") (term "1"))
                           (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_10"))
                           (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                           (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                           (rule "assignment_to_primitive_array_component" (formula "53"))
                           (branch "Normal Execution (x_arr_3 != null)"
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "predecrement" (formula "53") (term "1"))
                              (rule "activeUseStaticFieldWriteAccess" (formula "53") (term "1") (inst "#v0=x"))
                              (rule "variableDeclarationAssign" (formula "53") (term "1"))
                              (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_11"))
                              (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x_12"))
                              (rule "variableDeclarationAssign" (formula "53") (term "1"))
                              (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_12"))
                              (rule "remove_parentheses_right" (formula "53") (term "1"))
                              (rule "compound_subtraction_1" (formula "53") (term "1") (inst "#v=x_13"))
                              (rule "variableDeclarationAssign" (formula "53") (term "1"))
                              (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_13"))
                              (rule "activeUseStaticFieldReadAccess" (formula "53") (term "1"))
                              (rule "assignment_read_static_attribute" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                              (rule "dismissNonSelectedField" (formula "53") (term "0,1,0"))
                              (rule "replaceKnownSelect_taclet0010_0" (formula "53") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "53") (term "0,1,0"))
                              (rule "assignmentSubtractionInt" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "translateJavaSubInt" (formula "53") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "53") (term "1,1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "53") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "53") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "53") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1,0"))
                              (rule "widening_identity_cast_5" (formula "53") (term "1"))
                              (rule "assignment" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "assignment_write_static_attribute" (formula "53") (term "1"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "methodCallEmpty" (formula "53") (term "1"))
                              (rule "tryEmpty" (formula "53") (term "1"))
                              (rule "emptyModality" (formula "53") (term "1"))
                              (rule "andRight" (formula "53"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "closeTrue" (formula "53"))
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "allRight" (formula "53") (inst "sk=f_4"))
                                 (rule "allRight" (formula "53") (inst "sk=o_4"))
                                 (rule "orRight" (formula "53"))
                                 (rule "orRight" (formula "53"))
                                 (rule "orRight" (formula "53"))
                                 (rule "orRight" (formula "53"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "eqSymm" (formula "55") (term "0,0,0,1"))
                                 (rule "inEqSimp_ltRight" (formula "51"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltRight" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                 (rule "mul_literals" (formula "36") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_strengthen1" (formula "46") (ifseqformula "51"))
                                 (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "46"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0"))
                                 (rule "leq_literals" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "false_right" (formula "51"))
                                 (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=f_4_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1"))
                                 (rule "mul_literals" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "50"))
                                 (rule "times_zero_1" (formula "46") (term "0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "50"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                 (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1"))
                                 (rule "mul_literals" (formula "52") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "47") (term "0,0"))
                                 (rule "add_zero_left" (formula "47") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                 (rule "mul_literals" (formula "47") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "26"))
                                 (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1"))
                                 (rule "mul_literals" (formula "52") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "nnf_imp2or" (formula "55") (term "0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "49") (term "0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "commute_and" (formula "60"))
                                 (rule "commute_and" (formula "59"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "43") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "49") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "49") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "43") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "cut_direct" (formula "62") (term "0,0"))
                                 (branch "CUT: o_4 = null TRUE"
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "false_right" (formula "63"))
                                    (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_4 = null FALSE"
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "notRight" (formula "63"))
                                    (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "false_right" (formula "60"))
                                    (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "false_right" (formula "60"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "60") (term "0"))
                                    (branch "CUT: o_4 = a TRUE"
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "nnf_ex2all" (formula "60"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "commute_or_2" (formula "57") (term "0"))
                                       (rule "commute_or_2" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "commute_or_2" (formula "51") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "33") (term "0"))
                                       (rule "distr_forallAnd" (formula "33"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "commute_or" (formula "34") (term "0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0"))
                                       (rule "commute_or_2" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "45") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "46") (term "0"))
                                       (rule "shift_paren_or" (formula "46") (term "0,0"))
                                       (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "46") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "46") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "46") (term "0,0,0,0,0,0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "f_4 = arr(k) TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectArrayType" (formula "62") (term "0") (ifseqformula "8") (ifseqformula "61"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "eqSymm" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "56"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "f_4 = arr(k) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "all_pull_out3" (formula "44") (term "0"))
                                          (rule "shift_paren_or" (formula "44") (term "0,0"))
                                          (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0"))
                                          (rule "allLeft" (formula "15") (inst "t=right"))
                                          (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "49"))
                                          (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                          (rule "leq_literals" (formula "15") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "allLeft" (formula "1") (inst "t=k"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "allLeft" (formula "1") (inst "t=y_0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "43"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "allLeft" (formula "1") (inst "t=x_0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "allLeft" (formula "16") (inst "t=k"))
                                          (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "16") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "allLeft" (formula "59") (inst "t=right"))
                                          (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "50"))
                                          (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "31"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                          (rule "leq_literals" (formula "59") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_12"))
                                          (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                          (rule "elementOfSingleton" (formula "59") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")))
                                          (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "allLeft" (formula "59") (inst "t=k"))
                                          (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "59") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                          (rule "leq_literals" (formula "59") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=arr_13"))
                                          (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                          (rule "elementOfSingleton" (formula "59") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "67")))
                                          (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " f_4 = arr(DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>>) TRUE"
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "66") (term "0") (ifseqformula "7") (ifseqformula "65"))
                                             (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "57"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                             (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "64") (term "0,0"))
                                             (rule "leq_literals" (formula "64") (term "0"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "false_right" (formula "64"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "33") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "allLeft" (formula "34") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "44"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "34") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "allLeft" (formula "35") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                             (rule "allLeft" (formula "36") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                             (rule "allLeft" (formula "37") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                             (rule "allLeft" (formula "64") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "56"))
                                             (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "pullOutSelect" (formula "64") (term "0,0") (inst "selectSK=arr_14"))
                                             (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "71")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "64") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "71")))
                                             (rule "applyEqReverse" (formula "65") (term "0,0") (ifseqformula "64"))
                                             (rule "hideAuxiliaryEq" (formula "64"))
                                             (rule "allLeft" (formula "65") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                             (rule "replaceKnownSelect_taclet0010_4" (formula "65") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0010_5" (formula "65") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0") (ifseqformula "57"))
                                             (rule "qeq_literals" (formula "65") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "allLeft" (formula "41") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "44"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "41") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "67") (inst "t=left"))
                                             (rule "replace_known_left" (formula "67") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "23"))
                                             (rule "qeq_literals" (formula "67") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "pullOutSelect" (formula "67") (term "0,0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "74")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "67") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "74")))
                                             (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "67"))
                                             (rule "hideAuxiliaryEq" (formula "67"))
                                             (rule "allLeft" (formula "17") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "70"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "59"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "67")))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "17") (inst "t=left"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "24"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "68")))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "59") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                             (rule "replaceKnownSelect_taclet010110001010010_17" (formula "59") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_18" (formula "59") (term "0,1"))
                                             (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "59"))
                                             (rule "inEqSimp_commuteLeq" (formula "59") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0,0"))
                                             (rule "leq_literals" (formula "59") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "59"))
                                             (rule "commute_or" (formula "59"))
                                             (rule "allLeft" (formula "17") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "58"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "67")))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "60") (inst "t=left"))
                                             (rule "replaceKnownSelect_taclet010110001010010_19" (formula "60") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_20" (formula "60") (term "0,1"))
                                             (rule "replace_known_left" (formula "60") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "60") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "60") (term "0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "60") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "60") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "60") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "commute_or" (formula "60"))
                                             (rule "allLeft" (formula "52") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "52") (term "0,0,0,0,0,0,0,0") (ifseqformula "72"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "59"))
                                             (rule "qeq_literals" (formula "52") (term "0,1,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "52") (term "0,0"))
                                             (rule "commute_or_2" (formula "52") (term "0"))
                                             (rule "allLeft" (formula "62") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "62") (term "0,0,0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_commuteLeq" (formula "62") (term "1,0"))
                                             (rule "pullOutSelect" (formula "62") (term "0,1") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "78")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "62") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "78")))
                                             (rule "applyEqReverse" (formula "63") (term "0,1") (ifseqformula "62"))
                                             (rule "hideAuxiliaryEq" (formula "62"))
                                             (rule "commute_or_2" (formula "62"))
                                             (rule "allLeft" (formula "42") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "allLeft" (formula "73") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replaceKnownSelect_taclet010110001010010_21" (formula "73") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_22" (formula "73") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "allLeft" (formula "43") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_commuteGeq" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0"))
                                             (rule "allLeft" (formula "44") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "44") (term "0,0"))
                                             (rule "allLeft" (formula "57") (inst "t=right"))
                                             (rule "replace_known_left" (formula "57") (term "0,0,0,0,0,0,0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "57") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0,0,0,0") (ifseqformula "61"))
                                             (rule "qeq_literals" (formula "57") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "allLeft" (formula "58") (inst "t=k"))
                                             (rule "replace_known_left" (formula "58") (term "0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0,0,0") (ifseqformula "70"))
                                             (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "58") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "allLeft" (formula "68") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "inEqSimp_commuteLeq" (formula "68") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "68") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "68") (term "0,1") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "85")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "68") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "85")))
                                             (rule "applyEqReverse" (formula "69") (term "0,1") (ifseqformula "68"))
                                             (rule "hideAuxiliaryEq" (formula "68"))
                                             (rule "commute_or_2" (formula "68"))
                                             (rule "allLeft" (formula "17") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "79")))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "17") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                             (rule "allLeft" (formula "80") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "80") (term "0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "80"))
                                             (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                                             (rule "pullOutSelect" (formula "80") (term "0,0,0") (inst "selectSK=arr_18"))
                                             (rule "simplifySelectOfAnonEQ" (formula "80") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "87")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "80") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "87")))
                                             (rule "applyEqReverse" (formula "81") (term "0,0,0") (ifseqformula "80"))
                                             (rule "hideAuxiliaryEq" (formula "80"))
                                             (rule "allLeft" (formula "41") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0,0,0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "56"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "42") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "42") (term "0,0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "42") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "42") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "allLeft" (formula "72") (inst "t=pivot2"))
                                             (rule "replaceKnownSelect_taclet010110001010010_25" (formula "72") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_26" (formula "72") (term "0,1"))
                                             (rule "replace_known_left" (formula "72") (term "0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "72"))
                                             (rule "inEqSimp_commuteLeq" (formula "72") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "72") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0"))
                                             (rule "allLeft" (formula "18") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "allLeft" (formula "73") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "73") (term "0,0,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "inEqSimp_commuteLeq" (formula "73") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "73") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "73") (term "0,1") (inst "selectSK=arr_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "91")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "73") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "91")))
                                             (rule "applyEqReverse" (formula "74") (term "0,1") (ifseqformula "73"))
                                             (rule "hideAuxiliaryEq" (formula "73"))
                                             (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "true_left" (formula "73"))
                                             (rule "allLeft" (formula "18") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "allLeft" (formula "85") (inst "t=y_0"))
                                             (rule "replaceKnownSelect_taclet010110001010010_27" (formula "85") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_28" (formula "85") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "85"))
                                             (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                                             (rule "allLeft" (formula "63") (inst "t=int::select(heap, null, DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "63") (term "0,0,0,0,0,0,0,0") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_contradInEq0" (formula "63") (term "1,0,0,0,0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0,0,0,0") (ifseqformula "68"))
                                             (rule "qeq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "allLeft" (formula "19") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "allLeft" (formula "75") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "75"))
                                             (rule "inEqSimp_commuteLeq" (formula "75") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "75") (term "0,1") (inst "selectSK=arr_20"))
                                             (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "66"))
                                             (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "94")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "75") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "94")))
                                             (rule "applyEqReverse" (formula "76") (term "0,1") (ifseqformula "75"))
                                             (rule "hideAuxiliaryEq" (formula "75"))
                                             (rule "allLeft" (formula "64") (inst "t=left"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0,0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0,0,0,0") (ifseqformula "54"))
                                             (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "64") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "64") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0,0,0,0") (ifseqformula "25"))
                                             (rule "qeq_literals" (formula "64") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "allLeft" (formula "60") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "60") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "allLeft" (formula "61") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "allLeft" (formula "91") (inst "t=x_0"))
                                             (rule "replaceKnownSelect_taclet010110001010010_29" (formula "91") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_30" (formula "91") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "91") (term "0,0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "91"))
                                             (rule "inEqSimp_commuteGeq" (formula "91") (term "1"))
                                             (rule "allLeft" (formula "91") (inst "t=pivot1"))
                                             (rule "replaceKnownSelect_taclet010110001010010_23" (formula "91") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_24" (formula "91") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "91") (term "0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "91"))
                                             (rule "inEqSimp_commuteGeq" (formula "91") (term "1"))
                                             (rule "allLeft" (formula "41") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "41") (term "0,0,0,0,0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "54"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "42") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "42") (term "0,0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "42") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "42") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "allLeft" (formula "69") (inst "t=int::select(anon_heap_move_great_left_in_loop<<anonHeapFunction>>,
            null,
            DualPivotQuicksort::$great)"))
                                             (rule "replace_known_left" (formula "69") (term "0,0,0,0,0,0,0,0") (ifseqformula "95"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0,0,0,0,0") (ifseqformula "75"))
                                             (rule "qeq_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "allLeft" (formula "43") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0,0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                             (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "allLeft" (formula "46") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "46") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                             (rule "allLeft" (formula "47") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                             (rule "allLeft" (formula "72") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "72") (term "0,0,0,0,0,0,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "72"))
                                             (rule "inEqSimp_contradInEq0" (formula "72") (term "1,0,0,0,0") (ifseqformula "55"))
                                             (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "72") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "72"))
                                             (rule "allLeft" (formula "48") (inst "t=x_0"))
                                             (rule "replace_known_left" (formula "48") (term "0,0,0,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                             (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "allLeft" (formula "73") (inst "t=int::select(heap, null, DualPivotQuicksort::$less)"))
                                             (rule "replace_known_left" (formula "73") (term "0,0,0,0,0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "inEqSimp_contradInEq0" (formula "73") (term "1,0,0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "73") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "73") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "73") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "allLeft" (formula "43") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                             (rule "allLeft" (formula "44") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "44") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                             (rule "allLeft" (formula "76") (inst "t=y_0"))
                                             (rule "replace_known_left" (formula "76") (term "0,0,0,0,0,0,0,0") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "inEqSimp_contradInEq0" (formula "76") (term "1,0,0,0,0") (ifseqformula "62"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "76") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "76") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "allLeft" (formula "77") (inst "t=pivot2"))
                                             (rule "replace_known_left" (formula "77") (term "0,0,0,0,0,0,0,0") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "77"))
                                             (rule "inEqSimp_homoInEq1" (formula "77") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "77") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "78") (inst "t=pivot1"))
                                             (rule "replace_known_left" (formula "78") (term "0,0,0,0,0,0,0,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "inEqSimp_homoInEq1" (formula "78") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "78") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "55") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "55") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "allLeft" (formula "69") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "69") (term "0,0,0,0,0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "allLeft" (formula "40") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "allLeft" (formula "19") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "allLeft" (formula "95") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "95") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "95"))
                                             (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0"))
                                             (rule "pullOutSelect" (formula "95") (term "0,1") (inst "selectSK=arr_21"))
                                             (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "85"))
                                             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "114")) (ifInst ""  (formula "8")))
                                             (rule "elementOfSingleton" (formula "95") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "114")))
                                             (rule "applyEqReverse" (formula "96") (term "0,1") (ifseqformula "95"))
                                             (rule "hideAuxiliaryEq" (formula "95"))
                                             (rule "allLeft" (formula "108") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replaceKnownSelect_taclet010110001010010_31" (formula "108") (term "0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010110001010010_32" (formula "108") (term "0,1,0,0"))
                                             (rule "replace_known_left" (formula "108") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "19")))
                                             (rule "true_left" (formula "108"))
                                             (rule "allLeft" (formula "52") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "52") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "allLeft" (formula "47") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "allLeft" (formula "85") (inst "t=int::select(heap, a, arr(right))"))
                                             (rule "replace_known_left" (formula "85") (term "0,0,0,0,0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "85"))
                                             (rule "commute_or_2" (formula "96"))
                                             (rule "cut_direct" (formula "37") (term "0"))
                                             (branch "CUT: DualPivotQuicksort.less <= y_0 TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "inEqSimp_contradInEq0" (formula "49") (term "1") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "49") (term "0,0,1"))
                                                (rule "leq_literals" (formula "49") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "37"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                (rule "cut_direct" (formula "38") (term "0,0"))
                                                (branch "CUT: DualPivotQuicksort.great <= left TRUE"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "38"))
                                                   (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                   (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "98") (term "0,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "98") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "98") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "39"))
                                                   (rule "polySimp_pullOutFactor1" (formula "39") (term "0"))
                                                   (rule "add_literals" (formula "39") (term "1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "0"))
                                                   (rule "qeq_literals" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "applyEq" (formula "92") (term "1,1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "54") (term "1,1,1,0,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "32") (term "0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "applyEq" (formula "95") (term "0,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "95") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "95") (term "0,0,0"))
                                                   (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "102") (term "0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                   (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "90") (term "0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "47") (term "1,1,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "50") (term "1,1,1,0") (ifseqformula "30"))
                                                   (rule "replace_known_left" (formula "50") (term "1,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "true_left" (formula "50"))
                                                   (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "76") (term "0,2,1,1,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31"))
                                                   (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                   (rule "add_literals" (formula "31") (term "1,0"))
                                                   (rule "times_zero_1" (formula "31") (term "0"))
                                                   (rule "leq_literals" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "43") (term "1,1,1,0") (ifseqformula "30"))
                                                   (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "true_left" (formula "43"))
                                                   (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "91") (term "0,0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq0" (formula "91") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "91") (term "0,0,0"))
                                                   (rule "applyEq" (formula "50") (term "1,1,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "87") (term "0,2,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                                   (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "93") (term "1,1,1,0,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "52") (term "0"))
                                                   (rule "applyEq" (formula "98") (term "1") (ifseqformula "30"))
                                                   (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "30"))
                                                   (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "87"))
                                                   (rule "true_left" (formula "87"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "96") (term "0,1") (ifseqformula "29"))
                                                   (rule "inEqSimp_commuteGeq" (formula "96") (term "1"))
                                                   (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "29"))
                                                   (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "29"))
                                                   (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                   (rule "applyEq" (formula "55") (term "1,1,0,0") (ifseqformula "29"))
                                                   (rule "applyEq" (formula "96") (term "0,2,0,0") (ifseqformula "29"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "88") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "88") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "88") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "88"))
                                                   (rule "true_left" (formula "88"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                   (rule "mul_literals" (formula "30") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                                                   (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "86") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                   (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "90"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0"))
                                                   (rule "add_literals" (formula "26") (term "0"))
                                                   (rule "leq_literals" (formula "26"))
                                                   (rule "closeFalse" (formula "26"))
                                                )
                                                (branch "CUT: DualPivotQuicksort.great <= left FALSE"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_leqRight" (formula "114"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0"))
                                                   (rule "qeq_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "cut_direct" (formula "39") (term "0,0"))
                                                   (branch "CUT: pivot1 <= left TRUE"
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "cut_direct" (formula "40") (term "0,0"))
                                                      (branch "CUT: pivot2 <= left TRUE"
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "40"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "35"))
                                                         (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0"))
                                                         (rule "qeq_literals" (formula "40") (term "0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "inEqSimp_contradInEq0" (formula "72") (term "1,0,0,0,0") (ifseqformula "35"))
                                                         (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "72") (term "0,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "cut_direct" (formula "105") (term "1"))
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length TRUE"
                                                            (builtin "One Step Simplification" (formula "106"))
                                                            (rule "true_left" (formula "106"))
                                                            (rule "inEqSimp_exactShadow3" (formula "105") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "105") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "105") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "105"))
                                                            (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "105") (ifseqformula "34"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "inEqSimp_homoInEq1" (formula "105"))
                                                            (rule "polySimp_mulComm0" (formula "105") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "105") (term "1,0"))
                                                            (rule "mul_literals" (formula "105") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "105") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "105") (term "0,0"))
                                                            (rule "add_literals" (formula "105") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "105") (term "0"))
                                                            (rule "add_literals" (formula "105") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "105") (term "1,0"))
                                                            (rule "add_literals" (formula "105") (term "0"))
                                                            (rule "leq_literals" (formula "105"))
                                                            (rule "closeFalse" (formula "105"))
                                                         )
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length FALSE"
                                                            (builtin "One Step Simplification" (formula "105"))
                                                            (rule "inEqSimp_geqRight" (formula "114"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "109") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "109") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "109") (term "0,0,1"))
                                                            (rule "add_literals" (formula "109") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "109") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "109") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "109") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "109"))
                                                            (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                            (rule "mul_literals" (formula "104") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                            (rule "add_literals" (formula "104") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                            (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                            (rule "mul_literals" (formula "104") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "104"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "inEqSimp_exactShadow3" (formula "91") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "91") (term "0,0"))
                                                            (rule "add_zero_left" (formula "91") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                                                            (rule "mul_literals" (formula "91") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "91"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "commute_or_2" (formula "98"))
                                                            (rule "cut_direct" (formula "70") (term "1,0"))
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left TRUE"
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "true_left" (formula "71"))
                                                               (rule "replace_known_left" (formula "94") (term "1") (ifseqformula "70"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "true_left" (formula "94"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "70"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "4") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "replace_known_left" (formula "79") (term "1,0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "true_left" (formula "79"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "104"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "33"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_literals" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left FALSE"
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "replace_known_right" (formula "94") (term "1") (ifseqformula "116"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "inEqSimp_geqRight" (formula "116"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_subsumption0" (formula "37") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "37") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "91") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "91") (term "0,0"))
                                                               (rule "add_zero_left" (formula "91") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                                                               (rule "mul_literals" (formula "91") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "91"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                               (rule "mul_literals" (formula "104") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                               (rule "add_literals" (formula "104") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                               (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                               (rule "mul_literals" (formula "104") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "104"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0"))
                                                               (rule "add_literals" (formula "28") (term "0"))
                                                               (rule "leq_literals" (formula "28"))
                                                               (rule "closeFalse" (formula "28"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: pivot2 <= left FALSE"
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_leqRight" (formula "114"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "72") (term "1,0,0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "72") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "72") (term "0,1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "true_left" (formula "72"))
                                                         (rule "cut_direct" (formula "105") (term "1"))
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length TRUE"
                                                            (builtin "One Step Simplification" (formula "106"))
                                                            (rule "true_left" (formula "106"))
                                                            (rule "inEqSimp_exactShadow3" (formula "105") (ifseqformula "32"))
                                                            (rule "polySimp_mulComm0" (formula "105") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "105") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "105"))
                                                            (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "105") (ifseqformula "35"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "inEqSimp_homoInEq1" (formula "105"))
                                                            (rule "polySimp_mulComm0" (formula "105") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "105") (term "1,0"))
                                                            (rule "mul_literals" (formula "105") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "105") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "105") (term "0,0"))
                                                            (rule "add_literals" (formula "105") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "105") (term "0"))
                                                            (rule "add_literals" (formula "105") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "105") (term "1,0"))
                                                            (rule "add_literals" (formula "105") (term "0"))
                                                            (rule "leq_literals" (formula "105"))
                                                            (rule "closeFalse" (formula "105"))
                                                         )
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length FALSE"
                                                            (builtin "One Step Simplification" (formula "105"))
                                                            (rule "inEqSimp_geqRight" (formula "114"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "103") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "103") (term "0,0"))
                                                            (rule "mul_literals" (formula "103") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "103") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                            (rule "add_literals" (formula "103") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "103"))
                                                            (rule "polySimp_mulComm0" (formula "103") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "103") (term "1"))
                                                            (rule "mul_literals" (formula "103") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "103") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "103") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "103"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "inEqSimp_exactShadow3" (formula "90") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "90") (term "0,0"))
                                                            (rule "add_zero_left" (formula "90") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "90"))
                                                            (rule "mul_literals" (formula "90") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "90"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "109") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "109") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "109") (term "0,0,1"))
                                                            (rule "add_literals" (formula "109") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "109") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "109") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "109") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "109"))
                                                            (rule "commute_or_2" (formula "98"))
                                                            (rule "cut_direct" (formula "71") (term "1,0"))
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left TRUE"
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "true_left" (formula "72"))
                                                               (rule "replace_known_left" (formula "94") (term "1") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "true_left" (formula "94"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "71"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "5") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "79") (term "1,0,0,0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "true_left" (formula "79"))
                                                               (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "104"))
                                                               (rule "polySimp_mulComm0" (formula "71") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                               (rule "polySimp_mulLiterals" (formula "71") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "71") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "71") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                               (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                               (rule "add_literals" (formula "71") (term "0,0"))
                                                               (rule "qeq_literals" (formula "71") (term "0"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "true_left" (formula "71"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "104"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "5"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0"))
                                                               (rule "add_literals" (formula "34") (term "0"))
                                                               (rule "leq_literals" (formula "34"))
                                                               (rule "closeFalse" (formula "34"))
                                                            )
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left FALSE"
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "replace_known_right" (formula "94") (term "1") (ifseqformula "116"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "inEqSimp_geqRight" (formula "116"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "inEqSimp_subsumption0" (formula "37") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "37") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "91") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "91") (term "0,0"))
                                                               (rule "add_zero_left" (formula "91") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "91"))
                                                               (rule "mul_literals" (formula "91") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "91"))
                                                               (rule "leq_literals" (formula "29") (term "0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                               (rule "mul_literals" (formula "104") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                               (rule "add_literals" (formula "104") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                               (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                               (rule "mul_literals" (formula "104") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "104") (ifseqformula "29"))
                                                               (rule "andLeft" (formula "104"))
                                                               (rule "inEqSimp_homoInEq1" (formula "104"))
                                                               (rule "polySimp_mulComm0" (formula "104") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "1,0"))
                                                               (rule "mul_literals" (formula "104") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                               (rule "add_literals" (formula "104") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "104") (term "0"))
                                                               (rule "add_literals" (formula "104") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "104") (term "1,0"))
                                                               (rule "add_literals" (formula "104") (term "0"))
                                                               (rule "leq_literals" (formula "104"))
                                                               (rule "closeFalse" (formula "104"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: pivot1 <= left FALSE"
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_leqRight" (formula "114"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "73") (term "1,0,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "73") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "73") (term "0,0,1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "73") (term "0,1,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "cut_direct" (formula "41") (term "0,0"))
                                                      (branch "CUT: pivot2 <= left TRUE"
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "41"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0"))
                                                         (rule "add_literals" (formula "36") (term "0"))
                                                         (rule "leq_literals" (formula "36"))
                                                         (rule "closeFalse" (formula "36"))
                                                      )
                                                      (branch "CUT: pivot2 <= left FALSE"
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_leqRight" (formula "114"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "73") (term "1,0,0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "73") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "73") (term "1,1,0,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "73") (term "0,0,1,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "73") (term "0,1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "73"))
                                                         (rule "true_left" (formula "73"))
                                                         (rule "cut_direct" (formula "105") (term "1"))
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length TRUE"
                                                            (builtin "One Step Simplification" (formula "106"))
                                                            (rule "true_left" (formula "106"))
                                                            (rule "inEqSimp_exactShadow3" (formula "105") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "105") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "105") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "105"))
                                                            (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "105"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0"))
                                                            (rule "add_literals" (formula "36") (term "0"))
                                                            (rule "leq_literals" (formula "36"))
                                                            (rule "closeFalse" (formula "36"))
                                                         )
                                                         (branch "CUT: DualPivotQuicksort.great >= a.length FALSE"
                                                            (builtin "One Step Simplification" (formula "105"))
                                                            (rule "inEqSimp_geqRight" (formula "114"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "103") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "103") (term "0,0"))
                                                            (rule "mul_literals" (formula "103") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "103") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "103") (term "0,0"))
                                                            (rule "add_literals" (formula "103") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "103"))
                                                            (rule "polySimp_mulComm0" (formula "103") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "103") (term "1"))
                                                            (rule "mul_literals" (formula "103") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "103") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "103") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "103"))
                                                            (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "qeq_literals" (formula "28") (term "0"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "inEqSimp_exactShadow3" (formula "90") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "90") (term "0,0"))
                                                            (rule "add_zero_left" (formula "90") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "90"))
                                                            (rule "mul_literals" (formula "90") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "90"))
                                                            (rule "leq_literals" (formula "34") (term "0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "109") (term "1") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "109") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "109") (term "0,0,1"))
                                                            (rule "add_literals" (formula "109") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "109") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "109") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "109") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "109"))
                                                            (rule "commute_or_2" (formula "98"))
                                                            (rule "cut_direct" (formula "72") (term "1,0"))
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left TRUE"
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "true_left" (formula "73"))
                                                               (rule "replace_known_left" (formula "94") (term "1") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "true_left" (formula "94"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "72"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "6") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "79") (term "1,0,0,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "79"))
                                                               (rule "true_left" (formula "79"))
                                                               (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "104"))
                                                               (rule "polySimp_mulComm0" (formula "72") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                               (rule "polySimp_mulLiterals" (formula "72") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "72") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "72") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "72") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                               (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                               (rule "add_literals" (formula "72") (term "0,0"))
                                                               (rule "qeq_literals" (formula "72") (term "0"))
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "true_left" (formula "72"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "104"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "mul_literals" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "6"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0"))
                                                               (rule "add_literals" (formula "35") (term "0"))
                                                               (rule "leq_literals" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                            (branch "CUT: DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>> >= left FALSE"
                                                               (builtin "One Step Simplification" (formula "72"))
                                                               (rule "replace_known_right" (formula "94") (term "1") (ifseqformula "116"))
                                                               (builtin "One Step Simplification" (formula "94"))
                                                               (rule "inEqSimp_geqRight" (formula "116"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_subsumption0" (formula "38") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "38") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "true_left" (formula "38"))
                                                               (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "0,0"))
                                                               (rule "mul_literals" (formula "104") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                               (rule "add_literals" (formula "104") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "104"))
                                                               (rule "polySimp_mulComm0" (formula "104") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "104") (term "1"))
                                                               (rule "mul_literals" (formula "104") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "104") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "104") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "104"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0"))
                                                               (rule "add_literals" (formula "31") (term "0"))
                                                               (rule "leq_literals" (formula "31"))
                                                               (rule "closeFalse" (formula "31"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: DualPivotQuicksort.less <= y_0 FALSE"
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "inEqSimp_leqRight" (formula "114"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "true_left" (formula "50"))
                                                (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "38"))
                                                (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                (rule "add_literals" (formula "69") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "69"))
                                                (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                                                (rule "polySimp_elimOne" (formula "69") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "69") (ifseqformula "36"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "inEqSimp_homoInEq1" (formula "69"))
                                                (rule "polySimp_mulComm0" (formula "69") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "69") (term "1,0"))
                                                (rule "mul_literals" (formula "69") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "69") (term "0"))
                                                (rule "polySimp_addComm1" (formula "69") (term "0,0"))
                                                (rule "add_literals" (formula "69") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "69") (term "0"))
                                                (rule "add_literals" (formula "69") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "69") (term "1,0"))
                                                (rule "add_literals" (formula "69") (term "0"))
                                                (rule "leq_literals" (formula "69"))
                                                (rule "closeFalse" (formula "69"))
                                             )
                                          )
                                          (branch " f_4 = arr(DualPivotQuicksort.great@anon_heap_move_great_left_in_loop<<anonHeapFunction>>) FALSE"
                                             (rule "close" (formula "67") (ifseqformula "3"))
                                          )
                                       )
                                    )
                                    (branch "CUT: o_4 = a FALSE"
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "false_right" (formula "61"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "60"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (x_arr_3 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_3 != null, but x_10 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "false_right" (formula "54"))
                              (rule "inEqSimp_ltRight" (formula "50"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltRight" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1"))
                              (rule "mul_literals" (formula "35") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1"))
                              (rule "polySimp_rightDist" (formula "37") (term "1"))
                              (rule "mul_literals" (formula "37") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1"))
                              (rule "polySimp_rightDist" (formula "39") (term "1"))
                              (rule "mul_literals" (formula "39") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                              (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0"))
                              (rule "add_zero_right" (formula "52") (term "0,0"))
                              (rule "leq_literals" (formula "52") (term "0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "false_right" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "44"))
                              (rule "qeq_literals" (formula "3") (term "0,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                              (rule "mul_literals" (formula "36") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1"))
                              (rule "mul_literals" (formula "36") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "37"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                              (rule "mul_literals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "48"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "50"))
                              (rule "times_zero_1" (formula "46") (term "0,0"))
                              (rule "add_zero_left" (formula "46") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                              (rule "mul_literals" (formula "25") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "39"))
                              (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "52"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                              (rule "mul_literals" (formula "52") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1"))
                              (rule "polySimp_rightDist" (formula "52") (term "1"))
                              (rule "mul_literals" (formula "52") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "52"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "30"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "Null Reference (x_arr_1 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_1 != null, but x_7 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "false_right" (formula "54"))
                           (rule "inEqSimp_ltRight" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltRight" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "3") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1"))
                           (rule "mul_literals" (formula "35") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1"))
                           (rule "mul_literals" (formula "33") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1"))
                           (rule "mul_literals" (formula "39") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1"))
                           (rule "mul_literals" (formula "37") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                           (rule "polySimp_elimOne" (formula "36") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "1,1"))
                           (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                           (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0"))
                           (rule "add_zero_right" (formula "52") (term "0,0"))
                           (rule "leq_literals" (formula "52") (term "0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "false_right" (formula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                     )
                     (branch "Null Reference (x_arr_2 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_2 != null, but x_9 Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "false_right" (formula "54"))
                        (rule "inEqSimp_ltRight" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltRight" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1"))
                        (rule "mul_literals" (formula "37") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "mul_literals" (formula "35") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1"))
                        (rule "mul_literals" (formula "39") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "1,1"))
                        (rule "inEqSimp_strengthen1" (formula "47") (ifseqformula "52"))
                        (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "47"))
                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                        (rule "add_literals" (formula "52") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "52") (term "1,0,0"))
                        (rule "add_zero_right" (formula "52") (term "0,0"))
                        (rule "leq_literals" (formula "52") (term "0"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "false_right" (formula "52"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "44"))
                        (rule "qeq_literals" (formula "3") (term "0,1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "47"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "49"))
                        (rule "times_zero_1" (formula "45") (term "0,0"))
                        (rule "add_zero_left" (formula "45") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                        (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                        (rule "mul_literals" (formula "37") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1"))
                        (rule "polySimp_rightDist" (formula "37") (term "1"))
                        (rule "mul_literals" (formula "37") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "37"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "qeq_literals" (formula "21") (term "0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                        (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                        (rule "mul_literals" (formula "49") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1"))
                        (rule "polySimp_rightDist" (formula "49") (term "1"))
                        (rule "mul_literals" (formula "49") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "49"))
                        (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "qeq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "50"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                        (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                        (rule "mul_literals" (formula "32") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1"))
                        (rule "mul_literals" (formula "32") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "17"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "38"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0"))
                        (rule "qeq_literals" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "25"))
                        (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                        (rule "mul_literals" (formula "50") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0"))
                        (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1"))
                        (rule "polySimp_rightDist" (formula "50") (term "1"))
                        (rule "mul_literals" (formula "50") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                        (rule "times_zero_1" (formula "20") (term "0,0"))
                        (rule "add_zero_left" (formula "20") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "3"))
                        (rule "andLeft" (formula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "1,1,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0"))
                        (rule "add_zero_right" (formula "29") (term "0"))
                        (rule "leq_literals" (formula "29"))
                        (rule "closeFalse" (formula "29"))
                     )
                  )
               )
               (branch "Null Reference (x_arr = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr != null, but x_6 Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "false_right" (formula "53"))
                  (rule "inEqSimp_ltRight" (formula "51"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "44") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1"))
                  (rule "polySimp_rightDist" (formula "38") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                  (rule "mul_literals" (formula "38") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1"))
                  (rule "mul_literals" (formula "34") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "mul_literals" (formula "23") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_strengthen1" (formula "46") (ifseqformula "51"))
                  (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "46"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                  (rule "add_literals" (formula "51") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "51") (term "1,0,0"))
                  (rule "add_zero_right" (formula "51") (term "0,0"))
                  (rule "leq_literals" (formula "51") (term "0"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "false_right" (formula "51"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "43"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "48"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "49"))
                  (rule "times_zero_1" (formula "45") (term "0,0"))
                  (rule "add_zero_left" (formula "45") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "49"))
                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0"))
                  (rule "qeq_literals" (formula "17") (term "0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                  (rule "mul_literals" (formula "37") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1"))
                  (rule "polySimp_rightDist" (formula "37") (term "1"))
                  (rule "mul_literals" (formula "37") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "37"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "qeq_literals" (formula "23") (term "0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                  (rule "times_zero_1" (formula "19") (term "0,0"))
                  (rule "add_zero_left" (formula "19") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "mul_literals" (formula "19") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "24"))
                  (rule "times_zero_1" (formula "45") (term "0,0"))
                  (rule "add_zero_left" (formula "45") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                  (rule "mul_literals" (formula "45") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "2"))
                  (rule "andLeft" (formula "28"))
                  (rule "inEqSimp_homoInEq1" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0"))
                  (rule "add_zero_right" (formula "28") (term "0"))
                  (rule "leq_literals" (formula "28"))
                  (rule "closeFalse" (formula "28"))
               )
            )
         )
         (branch "Exceptional Post (move_great_left_in_loop)"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "andLeft" (formula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "40"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "41"))
            (rule "notLeft" (formula "41"))
            (rule "close" (formula "43") (ifseqformula "42"))
         )
         (branch "Pre (move_great_left_in_loop)"
            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "40")) (ifInst ""  (formula "2")) (ifInst ""  (formula "40")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "8")))
            (rule "closeTrue" (formula "41"))
         )
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "41"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "methodCallEmpty" (formula "41") (term "1"))
         (rule "tryEmpty" (formula "41") (term "1"))
         (rule "emptyModality" (formula "41") (term "1"))
         (rule "andRight" (formula "41"))
         (branch "Case 1"
            (builtin "One Step Simplification" (formula "41"))
            (rule "closeTrue" (formula "41"))
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "41"))
            (rule "closeTrue" (formula "41"))
         )
      )
   )
)
(branch "Null Reference (_a = null)"
   (rule "false_right" (formula "38"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_a != null, but _k Out of Bounds!)"
   (rule "false_right" (formula "38"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "inEqSimp_ltToLeq" (formula "27"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "27") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "30"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "22"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "22") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "18"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "18") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "31"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "21"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "23") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "34"))
   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "26") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
   (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "28"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
   (rule "polySimp_elimOne" (formula "27") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
   (rule "polySimp_elimOne" (formula "16") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30"))
   (rule "polySimp_mulComm0" (formula "30") (term "1"))
   (rule "polySimp_rightDist" (formula "30") (term "1"))
   (rule "mul_literals" (formula "30") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1"))
   (rule "polySimp_rightDist" (formula "32") (term "1"))
   (rule "mul_literals" (formula "32") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
   (rule "polySimp_elimOne" (formula "32") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "22"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
   (rule "polySimp_elimOne" (formula "22") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
   (rule "polySimp_elimOne" (formula "18") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
   (rule "mul_literals" (formula "24") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
   (rule "polySimp_elimOne" (formula "31") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21"))
   (rule "polySimp_mulComm0" (formula "21") (term "1"))
   (rule "polySimp_rightDist" (formula "21") (term "1"))
   (rule "mul_literals" (formula "21") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "23"))
   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
   (rule "polySimp_elimOne" (formula "23") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
   (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "34"))
   (rule "polySimp_mulComm0" (formula "34") (term "1"))
   (rule "polySimp_rightDist" (formula "34") (term "1"))
   (rule "mul_literals" (formula "34") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
   (rule "polySimp_elimOne" (formula "34") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28"))
   (rule "polySimp_mulComm0" (formula "28") (term "1"))
   (rule "polySimp_rightDist" (formula "28") (term "1"))
   (rule "mul_literals" (formula "28") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "15"))
   (rule "qeq_literals" (formula "1") (term "0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_homoInEq1" (formula "16"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
   (rule "add_literals" (formula "16") (term "1,1,0"))
   (rule "times_zero_1" (formula "16") (term "1,0"))
   (rule "add_zero_right" (formula "16") (term "0"))
   (rule "leq_literals" (formula "16"))
   (rule "closeFalse" (formula "16"))
)
)

}
