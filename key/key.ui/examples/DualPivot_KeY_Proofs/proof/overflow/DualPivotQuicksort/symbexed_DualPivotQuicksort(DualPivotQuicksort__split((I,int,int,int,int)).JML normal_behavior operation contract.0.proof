\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Nov 10 15:54:29 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Sun Nov 10 15:54:29 CET 2019
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:split([I,int,int,int,int)].JML normal_behavior operation contract.0
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:split([I,int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "1" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "2" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "3" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "4" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))
(keyLog "5" (keyUser "Andy" ) (keyVersion "2bbea99a67"))

(autoModeTime "1149975")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,left,right,pivot1,pivot2,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "exLeft" (formula "14") (inst "sk=x_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "exLeft" (formula "18") (inst "sk=y_0"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "eqSymm" (formula "37") (term "1,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "11") (term "0"))
(rule "translateJavaSubInt" (formula "11") (term "0,0,0,0"))
(rule "translateJavaSubInt" (formula "11") (term "0,1,0"))
(rule "translateJavaSubInt" (formula "11") (term "0,2,0"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "36"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "11") (term "0,0,0,0,0,0"))
(rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_elimSub" (formula "11") (term "1,0,1,0"))
(rule "polySimp_elimSub" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_elimSub" (formula "11") (term "0,0,0,2,0"))
(rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
(rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
(rule "polySimp_addComm0" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_addComm0" (formula "11") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_addComm0" (formula "11") (term "0,0,0,2,0"))
(rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
(rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
(rule "polySimp_addComm0" (formula "11") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,0"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "applyEq" (formula "23") (term "0") (ifseqformula "32"))
(rule "applyEq" (formula "22") (term "1") (ifseqformula "32"))
(rule "applyEq" (formula "24") (term "1") (ifseqformula "33"))
(rule "applyEq" (formula "25") (term "0") (ifseqformula "33"))
(rule "elementOfUnion" (formula "37") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "37") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "37") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "37") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "commute_and_2" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "35") (term "0,0"))
(rule "commute_and_2" (formula "34") (term "0,0"))
(rule "commute_and_2" (formula "35") (term "0,0,1,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and_2" (formula "8") (term "0,0"))
(rule "commute_and" (formula "35") (term "0,0,0"))
(rule "commute_and" (formula "34") (term "0,0,0"))
(rule "commute_and_2" (formula "34") (term "0,0"))
(rule "commute_and_2" (formula "34") (term "0,0,1,0"))
(rule "commute_and" (formula "35") (term "0,0,0,1,0"))
(rule "methodBodyExpand" (formula "37") (term "1") (newnames "heapBefore_split,savedHeapBefore_split,_aBefore_split,_leftBefore_split,_pivot1Before_split,_pivot2Before_split,_rightBefore_split"))
 (builtin "One Step Simplification" (formula "37"))
(rule "activeUseStaticFieldWriteAccess" (formula "37") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "assignment_write_static_attribute" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "activeUseStaticFieldWriteAccess" (formula "37") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_1"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "assignment_write_static_attribute" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "eval_order_array_access2" (formula "37") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_2"))
(rule "activeUseStaticFieldReadAccess" (formula "37") (term "1"))
(rule "assignment_read_static_attribute" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
(rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
(rule "eval_order_array_access3" (formula "37") (term "1") (inst "#v1=x_4") (inst "#v2=x_3") (inst "#v0=x_arr_1"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr_1"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_3"))
(rule "assignment" (formula "37") (term "1"))
 (builtin "One Step Simplification" (formula "37"))
(rule "variableDeclarationAssign" (formula "37") (term "1"))
(rule "variableDeclaration" (formula "37") (term "1") (newnames "x_4"))
(rule "assignment_array2" (formula "37"))
(branch "Normal Execution (_a != null)"
    (builtin "One Step Simplification" (formula "37"))
   (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
   (rule "assignment_to_primitive_array_component" (formula "37"))
   (branch "Normal Execution (x_arr_1 != null)"
       (builtin "One Step Simplification" (formula "37"))
      (rule "eval_order_array_access2" (formula "37") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
      (rule "variableDeclarationAssign" (formula "37") (term "1"))
      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr_2"))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "variableDeclarationAssign" (formula "37") (term "1"))
      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_5"))
      (rule "activeUseStaticFieldReadAccess" (formula "37") (term "1"))
      (rule "assignment_read_static_attribute" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
      (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
      (rule "dismissNonSelectedField" (formula "37") (term "0,1,0"))
      (rule "eval_order_array_access3" (formula "37") (term "1") (inst "#v1=x_7") (inst "#v2=x_6") (inst "#v0=x_arr_3"))
      (rule "variableDeclarationAssign" (formula "37") (term "1"))
      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr_3"))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "variableDeclarationAssign" (formula "37") (term "1"))
      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_6"))
      (rule "assignment" (formula "37") (term "1"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "variableDeclarationAssign" (formula "37") (term "1"))
      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_7"))
      (rule "assignment_array2" (formula "37"))
      (branch "Normal Execution (_a != null)"
          (builtin "One Step Simplification" (formula "37"))
         (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "assignment_to_primitive_array_component" (formula "38"))
         (branch "Normal Execution (x_arr_3 != null)"
             (builtin "One Step Simplification" (formula "38"))
            (rule "commute_and" (formula "35") (term "0,0,0,1,0"))
            (rule "commute_and_2" (formula "35") (term "0,0,1,0"))
            (rule "arrayLengthIsAnInt" (formula "14") (term "1"))
            (rule "arrayLengthNotNegative" (formula "15") (term "1"))
             (builtin "Use Operation Contract" (formula "40") (newnames "heapBefore_move_less_right,exc_0,heapAfter_move_less_right,anon_heap_move_less_right") (contract "DualPivotQuicksort[DualPivotQuicksort::move_less_right([I,int,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (move_less_right)"
                (builtin "One Step Simplification" (formula "42"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "46"))
               (rule "dismissNonSelectedField" (formula "44") (term "0"))
               (rule "dismissNonSelectedField" (formula "44") (term "0"))
               (rule "dismissNonSelectedField" (formula "44") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
               (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=DualPivotQuicksort_great_0"))
               (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
               (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "elementOfSingleton" (formula "41") (term "0,0"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "simplifySelectOfStore" (formula "41"))
                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
               (rule "simplifySelectOfStore" (formula "41"))
                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
               (rule "simplifySelectOfStore" (formula "41"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "castDel" (formula "41") (term "0"))
               (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "41"))
               (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "41"))
               (rule "hideAuxiliaryEq" (formula "41"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=DualPivotQuicksort_less_0"))
               (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
               (rule "applyEq" (formula "45") (term "1") (ifseqformula "41"))
               (rule "applyEq" (formula "43") (term "1,1,0,0,0") (ifseqformula "41"))
               (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "41"))
               (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "elementOfSingleton" (formula "41") (term "0,0"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "applyEqReverse" (formula "44") (term "0,2,0") (ifseqformula "41"))
               (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "41"))
               (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "41"))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
               (rule "applyEqReverse" (formula "43") (term "1,1,0,0,0") (ifseqformula "41"))
               (rule "hideAuxiliaryEq" (formula "41"))
               (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=DualPivotQuicksort_less_1"))
               (rule "simplifySelectOfStore" (formula "44"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "castDel" (formula "44") (term "0"))
               (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
               (rule "hideAuxiliaryEq" (formula "44"))
               (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")))
               (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")))
               (rule "dismissNonSelectedField" (formula "43") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "43") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "43") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "43") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "simplifySelectOfStore" (formula "43"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "castDel" (formula "43") (term "1,0"))
               (rule "eqSymm" (formula "43") (term "0,0"))
               (rule "inEqSimp_commuteGeq" (formula "44"))
               (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfStore" (formula "43"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "castDel" (formula "43") (term "1,0"))
               (rule "eqSymm" (formula "43") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "43") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "43") (term "2,0"))
               (rule "commute_and_2" (formula "47") (term "0,0"))
               (rule "commute_and_2" (formula "42") (term "0,0"))
               (rule "commute_and" (formula "47") (term "0,0,0"))
               (rule "commute_and_2" (formula "47") (term "0,0"))
               (rule "commute_and" (formula "42") (term "0,0,0"))
                (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_move_great_left,exc_1,heapAfter_move_great_left,anon_heap_move_great_left") (contract "DualPivotQuicksort[DualPivotQuicksort::move_great_left([I,int,int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (move_great_left)"
                   (builtin "One Step Simplification" (formula "51"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "replaceKnownSelect_taclet00000_1" (formula "51") (term "1,0,1,1,1,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_5" (formula "51") (term "1,0,1,1,1,1,0,1"))
                  (rule "andLeft" (formula "51"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "53"))
                  (rule "andLeft" (formula "54"))
                  (rule "andLeft" (formula "55"))
                  (rule "andLeft" (formula "56"))
                  (rule "andLeft" (formula "57"))
                  (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0"))
                  (rule "pullOutSelect" (formula "52") (term "1") (inst "selectSK=DualPivotQuicksort_great_1"))
                  (rule "applyEq" (formula "54") (term "0,0,0,0,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "55") (term "0,2,0") (ifseqformula "52"))
                  (rule "applyEq" (formula "59") (term "0") (ifseqformula "52"))
                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "52"))
                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "replaceKnownSelect_taclet00000_1" (formula "52") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_5" (formula "52") (term "2,0"))
                  (rule "elementOfSingleton" (formula "52") (term "0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "applyEqReverse" (formula "54") (term "0,0,0,0,0") (ifseqformula "52"))
                  (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "52"))
                  (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "52"))
                  (rule "applyEqReverse" (formula "55") (term "0,2,0") (ifseqformula "52"))
                  (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "52"))
                  (rule "hideAuxiliaryEq" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=DualPivotQuicksort_less_2"))
                  (rule "applyEq" (formula "58") (term "0") (ifseqformula "52"))
                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "replaceKnownSelect_taclet00000_6" (formula "52") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_7" (formula "52") (term "2,0"))
                  (rule "elementOfSingleton" (formula "52") (term "0,0"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
                  (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "52"))
                  (rule "hideAuxiliaryEq" (formula "52"))
                  (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "40"))
                  (rule "elementOfSingleton" (formula "54") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                  (rule "ifthenelse_negated" (formula "54") (term "0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,1,0,0"))
                  (rule "elementOfSingleton" (formula "54") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "54") (term "0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "0,0,0"))
                  (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "simplifySelectOfStore" (formula "54"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "castDel" (formula "54") (term "1,0"))
                  (rule "eqSymm" (formula "54") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "55"))
                  (rule "pullOutSelect" (formula "54") (term "2,0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfStore" (formula "54"))
                   (builtin "One Step Simplification" (formula "54"))
                  (rule "castDel" (formula "54") (term "1,0"))
                  (rule "eqSymm" (formula "54") (term "0,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "54") (term "2,0"))
                  (rule "commute_and_2" (formula "58") (term "0,0"))
                  (rule "commute_and_2" (formula "53") (term "0,0"))
                  (rule "unusedLabel" (formula "62") (term "1"))
                  (rule "commute_and" (formula "58") (term "0,0,0"))
                  (rule "commute_and_2" (formula "58") (term "0,0"))
                  (rule "commute_and" (formula "53") (term "0,0,0"))
                  (rule "for_to_while" (formula "62") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                  (rule "variableDeclarationAssign" (formula "62") (term "1"))
                  (rule "variableDeclaration" (formula "62") (term "1") (newnames "k"))
                  (rule "compound_subtraction_1" (formula "62") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "62") (term "1"))
                  (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_8"))
                  (rule "activeUseStaticFieldReadAccess" (formula "62") (term "1"))
                  (rule "assignment_read_static_attribute" (formula "62") (term "1"))
                   (builtin "One Step Simplification" (formula "62"))
                  (rule "replaceKnownSelect_taclet000000_15" (formula "62") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_16" (formula "62") (term "0,1,0"))
                  (rule "assignmentSubtractionInt" (formula "62") (term "1"))
                   (builtin "One Step Simplification" (formula "62"))
                  (rule "translateJavaSubInt" (formula "62") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "62") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "62") (term "1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "62") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "62") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "62") (term "0,0,0,1,0"))
                   (builtin "Loop Invariant" (formula "62") (newnames "variant,b,heapBefore_LOOP,kBefore_LOOP,k_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
                  (branch "Invariant Initially Valid"
                      (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "7")) (ifInst ""  (formula "6")) (ifInst ""  (formula "5")) (ifInst ""  (formula "4")) (ifInst ""  (formula "61")))
                      (opengoal " ")
                  )
                  (branch "Body Preserves Invariant"
                      (builtin "One Step Simplification" (formula "62"))
                      (opengoal " ")
                  )
                  (branch "Use Case"
                      (builtin "One Step Simplification" (formula "62"))
                      (builtin "One Step Simplification" (formula "64"))
                     (rule "andLeft" (formula "62"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "65"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "exLeft" (formula "75") (inst "sk=y_1"))
                     (rule "andLeft" (formula "75"))
                     (rule "andLeft" (formula "75"))
                     (rule "andLeft" (formula "75"))
                     (rule "exLeft" (formula "74") (inst "sk=x_9"))
                     (rule "andLeft" (formula "74"))
                     (rule "andLeft" (formula "74"))
                     (rule "andLeft" (formula "74"))
                     (rule "translateJavaAddInt" (formula "72") (term "1,1,0,0,0,0"))
                     (rule "translateJavaSubInt" (formula "63") (term "0"))
                     (rule "translateJavaAddInt" (formula "64") (term "1"))
                     (rule "polySimp_elimSub" (formula "63") (term "1,0"))
                     (rule "mul_literals" (formula "63") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "63") (term "0,0,0"))
                     (rule "mul_literals" (formula "63") (term "1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "72") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "72") (term "0,0,1,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "64") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "64") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "63") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "63") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "82") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "72") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "67") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "66"))
                     (rule "inEqSimp_commuteLeq" (formula "64"))
                     (rule "expand_inInt" (formula "14"))
                     (rule "expand_inInt" (formula "12") (term "0,1,1,0"))
                     (rule "expand_inInt" (formula "86"))
                     (rule "expand_inInt" (formula "85"))
                     (rule "expand_inInt" (formula "84") (term "1,0"))
                     (rule "expand_inInt" (formula "11"))
                     (rule "expand_inInt" (formula "9") (term "1,0"))
                     (rule "expand_inInt" (formula "9") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "7"))
                     (rule "expand_inInt" (formula "84") (term "1,0,0"))
                     (rule "expand_inInt" (formula "6"))
                     (rule "expand_inInt" (formula "5"))
                     (rule "expand_inInt" (formula "83") (term "1,0,0,1,0"))
                     (rule "expand_inInt" (formula "83") (term "1,0,0"))
                     (rule "expand_inInt" (formula "82") (term "1,0,0,1,0"))
                     (rule "expand_inInt" (formula "82") (term "1,0,0"))
                     (rule "expand_inInt" (formula "80"))
                     (rule "expand_inInt" (formula "76"))
                     (rule "expand_inInt" (formula "73") (term "1,0,0"))
                     (rule "expand_inInt" (formula "72") (term "1,0,0"))
                     (rule "expand_inInt" (formula "72") (term "0,1,1,0,0,0,0"))
                     (rule "expand_inInt" (formula "71") (term "1,0,0"))
                     (rule "expand_inInt" (formula "64") (term "0,0"))
                     (rule "expand_inInt" (formula "63") (term "0,0"))
                     (rule "expand_inInt" (formula "62"))
                     (rule "expand_inInt" (formula "59"))
                     (rule "expand_inInt" (formula "58") (term "1,0"))
                     (rule "expand_inInt" (formula "58") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "53") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "48"))
                     (rule "expand_inInt" (formula "47") (term "1,0"))
                     (rule "expand_inInt" (formula "47") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "42") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "38") (term "0,0,0,0,1,0"))
                     (rule "expand_inInt" (formula "38") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "37") (term "0,0,0,0,1,0"))
                     (rule "expand_inInt" (formula "37") (term "0,0,0,0"))
                     (rule "expand_inInt" (formula "23"))
                     (rule "expand_inInt" (formula "19"))
                     (rule "expand_inInt" (formula "12") (term "0,0,2,0"))
                     (rule "expand_inInt" (formula "12") (term "0,0"))
                     (rule "expand_inInt" (formula "10"))
                     (rule "expand_inInt" (formula "4"))
                     (rule "replace_int_MIN" (formula "14") (term "0,1"))
                     (rule "replace_int_MAX" (formula "14") (term "1,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,0,1,1,0"))
                     (rule "replace_int_MIN" (formula "86") (term "0,1"))
                     (rule "replace_int_MAX" (formula "86") (term "1,0"))
                     (rule "replace_int_MIN" (formula "85") (term "0,1"))
                     (rule "replace_int_MAX" (formula "85") (term "1,0"))
                     (rule "replace_int_MIN" (formula "84") (term "0,1,1,0"))
                     (rule "replace_int_MAX" (formula "84") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "11") (term "0,1"))
                     (rule "replace_int_MAX" (formula "11") (term "1,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,1,0"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "9") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "7") (term "0,1"))
                     (rule "replace_int_MAX" (formula "7") (term "1,0"))
                     (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "6") (term "0,1"))
                     (rule "replace_int_MAX" (formula "6") (term "1,0"))
                     (rule "replace_int_MIN" (formula "5") (term "0,1"))
                     (rule "replace_int_MAX" (formula "5") (term "1,0"))
                     (rule "replace_int_MAX" (formula "83") (term "1,0,1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "83") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "83") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "83") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "80") (term "0,1"))
                     (rule "replace_int_MAX" (formula "80") (term "1,0"))
                     (rule "replace_int_MIN" (formula "76") (term "0,1"))
                     (rule "replace_int_MAX" (formula "76") (term "1,0"))
                     (rule "replace_int_MIN" (formula "73") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "73") (term "1,0,1,0,0"))
                     (rule "replace_int_MAX" (formula "72") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "72") (term "0,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "72") (term "0,1,0,1,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "72") (term "1,0,0,1,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "71") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "71") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "64") (term "0,1,0,0"))
                     (rule "replace_int_MAX" (formula "64") (term "1,0,0,0"))
                     (rule "replace_int_MIN" (formula "63") (term "0,1,0,0"))
                     (rule "replace_int_MAX" (formula "63") (term "1,0,0,0"))
                     (rule "replace_int_MIN" (formula "62") (term "0,1"))
                     (rule "replace_int_MAX" (formula "62") (term "1,0"))
                     (rule "replace_int_MIN" (formula "59") (term "0,1"))
                     (rule "replace_int_MAX" (formula "59") (term "1,0"))
                     (rule "replace_int_MIN" (formula "58") (term "0,1,1,0"))
                     (rule "replace_int_MAX" (formula "58") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "58") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "58") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "53") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "48") (term "0,1"))
                     (rule "replace_int_MAX" (formula "48") (term "1,0"))
                     (rule "replace_int_MIN" (formula "47") (term "0,1,1,0"))
                     (rule "replace_int_MAX" (formula "47") (term "1,0,1,0"))
                     (rule "replace_int_MIN" (formula "47") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "47") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "42") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "42") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "37") (term "0,1,0,0,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "37") (term "1,0,0,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "37") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "37") (term "1,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "23") (term "0,1"))
                     (rule "replace_int_MAX" (formula "23") (term "1,0"))
                     (rule "replace_int_MIN" (formula "19") (term "0,1"))
                     (rule "replace_int_MAX" (formula "19") (term "1,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,0,0,2,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0,0,0,2,0"))
                     (rule "expand_inInt" (formula "12") (term "0,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,0,0"))
                     (rule "expand_inInt" (formula "12") (term "0,1,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0,0,0"))
                     (rule "replace_int_MIN" (formula "10") (term "0,1"))
                     (rule "replace_int_MAX" (formula "10") (term "1,0"))
                     (rule "replace_int_MIN" (formula "4") (term "0,1"))
                     (rule "replace_int_MAX" (formula "4") (term "1,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0,0,1,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,0,1,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "12") (term "1,0,0,1,1,1,0,0"))
                     (rule "replace_int_MIN" (formula "12") (term "0,1,0,1,1,1,0,0"))
                     (rule "impRight" (formula "88"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "88"))
                     (rule "andLeft" (formula "87"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "86"))
                     (rule "andLeft" (formula "82"))
                     (rule "andLeft" (formula "68"))
                     (rule "andLeft" (formula "65"))
                     (rule "andLeft" (formula "54"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "25"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "5"))
                     (rule "eqSymm" (formula "105") (term "1,0,0,0,1,1,0,1"))
                     (rule "translateJavaSubInt" (formula "105") (term "0,1,1,1,0,1"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,1,1,0,1"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,1,1,0,1"))
                     (rule "translateJavaSubInt" (formula "105") (term "0,1,1,1,0"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,1,1,0"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,1,1,0"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,1,0,1,1,1,0,1"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,0,1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,0,1,1,1,0,1"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,0,1,1,1,0,1"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,2,0,1,1,1,0,1"))
                     (rule "expand_inInt" (formula "105") (term "0,0,2,0,1,1,1,0,1"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,2,0,1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,2,0,1,1,1,0,1"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,0,0,0,0,1,1,1,0,1"))
                     (rule "expand_inInt" (formula "105") (term "0,0,0,0,0,0,1,1,1,0,1"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,0,0,0,0,1,1,1,0,1"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,1,1,0,0,1,1,1,0,1"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,1,0,0,1,1,1,0,1"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,1,0,0,1,1,1,0,1"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,1,0,0,1,1,1,0,1"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,1,0,1,1,1,0"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,0,1,1,1,0"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,0,1,1,1,0"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,0,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,2,0,1,1,1,0"))
                     (rule "expand_inInt" (formula "105") (term "0,0,2,0,1,1,1,0"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,2,0,1,1,1,0"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,2,0,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,1,1,0,0,1,1,1,0"))
                     (rule "expand_inInt" (formula "105") (term "0,0,1,1,0,0,1,1,1,0"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,1,1,0,0,1,1,1,0"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,1,1,0,0,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "105") (term "0,0,0,0,0,1,1,1,0"))
                     (rule "expand_inInt" (formula "105") (term "0,0,0,0,0,0,1,1,1,0"))
                     (rule "replace_int_MAX" (formula "105") (term "1,0,0,0,0,0,0,0,1,1,1,0"))
                     (rule "replace_int_MIN" (formula "105") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "105") (term "1,0,1,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "105") (term "0,0,0,0,1,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "105") (term "1,1,0,0,1,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "105") (term "1,0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "105") (term "1,1,0,0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "105") (term "0,0,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,2,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,2,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,2,0,1,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "99") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,2,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,2,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,2,0,1,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "98") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "98") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "97") (term "1,1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,1,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "97") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,0,0,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,0,0,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,0,0,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,1,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "84") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,1,1,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,1,1,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,1,0,1,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,0,1,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "69") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,1,1,1,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,1,1,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,1,1,1,0,0,1,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "64") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,1,1,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,1,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,1,1,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "0,0,0,1,0,0,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,1,0,0,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "105") (term "1,1,0,0,0,0,1,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "52") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "inEqSimp_commuteLeq" (formula "103"))
                     (rule "inEqSimp_commuteLeq" (formula "101"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "12"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "inEqSimp_commuteLeq" (formula "95"))
                     (rule "inEqSimp_commuteLeq" (formula "90"))
                     (rule "inEqSimp_commuteLeq" (formula "75"))
                     (rule "inEqSimp_commuteLeq" (formula "71"))
                     (rule "inEqSimp_commuteLeq" (formula "59"))
                     (rule "inEqSimp_commuteLeq" (formula "33"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "inEqSimp_commuteLeq" (formula "16"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "pullOutSelect" (formula "105") (term "0,2,0,2,0,1,1,1,0") (inst "selectSK=DualPivotQuicksort_great_2"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "80") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "104") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "84") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "103") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "81") (term "0,0"))
                     (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "78") (term "0,2,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "78") (term "1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "78") (term "1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "86") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "87") (term "0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "78") (term "1,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,1,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "0,2,1,1,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,0,2,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,0,1,1,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,1,1,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,0,0,0,0,2,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "0,2,1,1,1,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,0,0,2,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "0,2,1,0,0,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,0,0,0,1,1,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,0,0,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,0,1,0,0,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,0,0,0,1,1,1,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,1,1,0,1,1,1,0,0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_21" (formula "106") (term "1,0,0,0,1,0,0,0,0,1,1,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "80"))
                     (rule "inEqSimp_commuteGeq" (formula "81") (term "0"))
                     (rule "variableDeclarationAssign" (formula "2") (term "1"))
                     (rule "variableDeclarationAssign" (formula "106") (term "1"))
                     (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_1"))
                     (rule "variableDeclaration" (formula "106") (term "1") (newnames "exc_2"))
                     (rule "assignment" (formula "106") (term "1"))
                      (builtin "One Step Simplification" (formula "106"))
                     (rule "variableDeclaration" (formula "106") (term "1") (newnames "thrownExc"))
                     (rule "blockThrow" (formula "106") (term "1,0,0,1"))
                     (rule "blockThrow" (formula "106") (term "1,0,0,1"))
                     (rule "pullOutSelect" (formula "81") (term "0,1") (inst "selectSK=DualPivotQuicksort_less_3"))
                     (rule "simplifySelectOfAnon" (formula "81"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "79") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "103") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "102") (term "0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "84") (term "1"))
                     (rule "replaceKnownSelect_taclet000000_15" (formula "81") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000000_16" (formula "81") (term "2,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "77") (term "1,1,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "77") (term "0,2,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "86") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "77") (term "1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "77") (term "1,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet2000000_22" (formula "87") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "82") (term "1"))
                     (rule "inEqSimp_commuteLeq" (formula "79"))
                     (rule "pullOutSelect" (formula "93") (term "0") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnon" (formula "93"))
                      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "107")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,1,0,0") (ifseqformula "63"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,1,0,0") (ifseqformula "51"))
                     (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "93") (term "0,0,0,0,1,0,0"))
                     (rule "replace_known_left" (formula "93") (term "0,0,0,1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnon" (formula "99"))
                      (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "108")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,0") (ifseqformula "63"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,0,0") (ifseqformula "51"))
                     (rule "dismissNonSelectedField" (formula "99") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "99") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "99") (term "0,0,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "99") (term "0,0,0,0,1,0,0"))
                     (rule "replace_known_left" (formula "99") (term "0,0,0,1,0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfUnion" (formula "109") (term "0,0,0,0,0,1,1,0,1"))
                     (rule "elementOfUnion" (formula "81") (term "0,0"))
                     (rule "elementOfUnion" (formula "93") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "93") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "93"))
                     (rule "inEqSimp_commuteLeq" (formula "93") (term "0,1,0,0"))
                     (rule "elementOfUnion" (formula "99") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "inEqSimp_commuteLeq" (formula "99") (term "0,1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "84") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "105") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "79") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "106") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "81") (term "1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "77") (term "0,2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "77") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "87") (term "0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "86") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "77") (term "1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "77") (term "1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "0,2,1,1,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,1,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "0,2,0,2,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,0,2,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,0,0,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,0,0,0,0,2,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "0,2,1,0,0,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,0,0,2,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "0,2,1,1,1,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,0,0,0,1,1,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,0,1,1,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,1,1,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,0,0,0,1,1,1,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,0,1,1,1,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,1,1,0,1,0,0,0,0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_25" (formula "108") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "79"))
                     (rule "inEqSimp_commuteLeq" (formula "81") (term "0"))
                     (rule "elementOfArrayRange" (formula "108") (term "1,0,0,0,0,0,1,1,0,1") (inst "iv=iv"))
                     (rule "inEqSimp_commuteLeq" (formula "108") (term "1,0,0,1,1,0,0,0,0,0,1,1,0,1"))
                     (rule "elementOfUnion" (formula "108") (term "0,0,0,0,0,0,1,1,0,1"))
                     (rule "elementOfSingleton" (formula "108") (term "1,0,0,0,0,0,0,1,1,0,1"))
                     (rule "elementOfSingleton" (formula "108") (term "0,0,0,0,0,0,0,1,1,0,1"))
                     (rule "elementOfUnion" (formula "80") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "80") (term "1,0,0,0"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "elementOfSingleton" (formula "80") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "hideAuxiliaryEq" (formula "80"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "102") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "103") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "82") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "78") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "80") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "76") (term "0,2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "76") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "76") (term "1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "76") (term "1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "84") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_26" (formula "85") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "78"))
                     (rule "inEqSimp_commuteGeq" (formula "80") (term "1"))
                     (rule "elementOfUnion" (formula "91") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "91") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "106")))
                     (rule "elementOfSingleton" (formula "91") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "106")))
                     (rule "elementOfUnion" (formula "97") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "97") (term "1,0,0,0"))
                      (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "106")))
                     (rule "elementOfSingleton" (formula "97") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "106")))
                     (rule "pullOutSelect" (formula "91") (term "2,0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "107")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "50"))
                     (rule "elementOfSingleton" (formula "91") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "107")))
                     (rule "ifthenelse_negated" (formula "91") (term "0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "91") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "91"))
                     (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "50"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "107")))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,1,0,0"))
                     (rule "elementOfSingleton" (formula "91") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "107")))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "91") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "91"))
                     (rule "simplifySelectOfStore" (formula "91"))
                      (builtin "One Step Simplification" (formula "91"))
                     (rule "castDel" (formula "91") (term "1,0"))
                     (rule "pullOutSelect" (formula "98") (term "2,0") (inst "selectSK=arr_8"))
                     (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "108")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,1,0,0") (ifseqformula "50"))
                     (rule "elementOfSingleton" (formula "98") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "108")))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "98") (term "0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "98") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "50"))
                      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "108")))
                     (rule "elementOfSingleton" (formula "98") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "108")))
                     (rule "ifthenelse_negated" (formula "98") (term "0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "98") (term "0,0,0"))
                     (rule "replace_known_left" (formula "98") (term "0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "simplifySelectOfStore" (formula "98"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "castDel" (formula "98") (term "1,0"))
                     (rule "pullOutSelect" (formula "91") (term "2,0") (inst "selectSK=arr_9"))
                     (rule "simplifySelectOfStore" (formula "91"))
                      (builtin "One Step Simplification" (formula "91"))
                     (rule "castDel" (formula "91") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "91") (term "2,0"))
                     (rule "pullOutSelect" (formula "99") (term "2,0") (inst "selectSK=arr_10"))
                     (rule "simplifySelectOfStore" (formula "99"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "castDel" (formula "99") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "99") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "99") (term "2,0"))
                     (rule "commuteUnion" (formula "104") (term "0,1,0,1,1,0,1,0"))
                     (rule "commuteUnion" (formula "85") (term "0,1,0,0,0,1,0"))
                     (rule "commuteUnion" (formula "103") (term "0,1,0,0,1,0,1,0"))
                     (rule "commuteUnion" (formula "84") (term "0,1,0,0,1,0"))
                     (rule "commuteUnion" (formula "104") (term "0,1,0,0,1,0,1,0"))
                     (rule "commuteUnion" (formula "103") (term "0,1,0,1,1,0,1,0"))
                     (rule "commuteUnion" (formula "86") (term "0,1,0,0,1,0"))
                     (rule "commuteUnion" (formula "85") (term "0,1,0,0,1,1,0"))
                     (rule "commuteUnion" (formula "105") (term "0,1,0,0,0,1,0"))
                     (rule "boxToDiamond" (formula "1") (term "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "commuteUnion" (formula "104") (term "0,1,0,0,1,1,0"))
                     (rule "commuteUnion" (formula "111") (term "0,1,0,1,0,1,1,0,0"))
                     (rule "commuteUnion" (formula "109") (term "0,1,0,1,0"))
                     (rule "commute_and" (formula "102") (term "0,0,0"))
                     (rule "commute_and" (formula "104") (term "0,0,0"))
                     (rule "commute_and" (formula "102") (term "0,0,0,1,0"))
                     (rule "commute_and" (formula "18") (term "0,1,1,0"))
                     (rule "commute_and" (formula "18") (term "0,0"))
                     (rule "commute_and" (formula "18") (term "0,0,2,0"))
                     (rule "commute_and" (formula "84") (term "0,1,1,0,0,0,0"))
                     (rule "commute_and" (formula "13") (term "1,0"))
                     (rule "commute_and_2" (formula "103") (term "0,0"))
                     (rule "commute_and_2" (formula "13") (term "0,0,0"))
                     (rule "commute_and" (formula "104") (term "1,0,0"))
                     (rule "commute_and" (formula "68") (term "1,0"))
                     (rule "commute_and" (formula "102") (term "1,0,0"))
                     (rule "commute_and" (formula "85") (term "1,0,0"))
                     (rule "commute_and" (formula "56") (term "1,0"))
                     (rule "commute_and" (formula "84") (term "1,0,0"))
                     (rule "commute_and" (formula "83") (term "1,0,0"))
                     (rule "commute_and_2" (formula "68") (term "0,0,0"))
                     (rule "commute_and_2" (formula "63") (term "0,0,0"))
                     (rule "commute_and_2" (formula "56") (term "0,0,0"))
                     (rule "commute_and_2" (formula "51") (term "0,0,0"))
                     (rule "arrayLengthIsAnInt" (formula "23") (term "1"))
                     (rule "expand_inInt" (formula "23"))
                     (rule "replace_int_MAX" (formula "23") (term "1,0"))
                     (rule "replace_int_MIN" (formula "23") (term "0,1"))
                     (rule "andLeft" (formula "23"))
                     (rule "inEqSimp_commuteLeq" (formula "23"))
                     (rule "arrayLengthNotNegative" (formula "47") (term "1,1,0,0,1,0"))
                     (rule "commute_and" (formula "103") (term "1,0,0,1,0"))
                     (rule "commute_and_2" (formula "46") (term "0,0,0"))
                     (rule "commute_and" (formula "102") (term "1,0,0,1,0"))
                     (rule "commute_and" (formula "47") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "47") (term "0,0,0,1,0"))
                     (rule "commute_and_2" (formula "46") (term "0,0,0,1,0"))
                     (rule "commute_and" (formula "76") (term "0,0"))
                     (rule "commute_and" (formula "75") (term "0,0"))
                     (rule "commute_and" (formula "111") (term "0,0,1,1,1,0,0"))
                     (rule "commute_and" (formula "104") (term "1,0"))
                     (rule "commute_and_2" (formula "84") (term "0,0"))
                     (rule "commute_and" (formula "111") (term "0,0,2,0,1,1,1,0,0"))
                     (rule "commute_and" (formula "111") (term "0,1,1,0,1,1,1,0,0"))
                     (rule "commute_and_2" (formula "63") (term "0,0"))
                     (rule "commute_and_2" (formula "51") (term "0,0"))
                     (rule "commute_and" (formula "103") (term "1,0,0,0"))
                     (rule "commute_and" (formula "13") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "47") (term "0,0,0"))
                     (rule "commute_and" (formula "68") (term "0,0,0,0"))
                     (rule "commute_and" (formula "56") (term "0,0,0,0"))
                     (rule "ifUnfold" (formula "111") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "111") (term "1") (newnames "x_10"))
                     (rule "shift_paren_and" (formula "104") (term "0,0"))
                     (rule "shift_paren_and" (formula "102") (term "0,0"))
                     (rule "shift_paren_and" (formula "85") (term "0,0"))
                     (rule "commute_and_2" (formula "13") (term "0,0,0"))
                     (rule "commute_and_2" (formula "13") (term "0,0"))
                     (rule "shift_paren_and" (formula "83") (term "0,0"))
                     (rule "commute_and_2" (formula "68") (term "0,0,0"))
                     (rule "commute_and_2" (formula "68") (term "0,0"))
                     (rule "compound_less_equal_than_comparison_2" (formula "109") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                     (rule "variableDeclarationAssign" (formula "109") (term "1"))
                     (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_11"))
                     (rule "commute_and_2" (formula "56") (term "0,0,0"))
                     (rule "commute_and_2" (formula "56") (term "0,0"))
                     (rule "commute_and" (formula "46") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "102") (term "0,0,1,0"))
                     (rule "commute_and_2" (formula "104") (term "0,0,0"))
                     (rule "commute_and_2" (formula "102") (term "0,0,0"))
                     (rule "commute_and_2" (formula "47") (term "0,0,1,0"))
                     (rule "commute_and" (formula "84") (term "0,0,0,0"))
                     (rule "commute_and" (formula "63") (term "0,0,0,0"))
                     (rule "commute_and" (formula "51") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "46") (term "0,0,0"))
                     (rule "commute_and_2" (formula "46") (term "0,0"))
                     (rule "commute_and" (formula "18") (term "0,1,0,1,0,0"))
                     (rule "commute_and" (formula "18") (term "0,1,1,0,0,0"))
                     (rule "commute_and_2" (formula "84") (term "0,0,0"))
                     (rule "commute_and_2" (formula "63") (term "0,0,0"))
                     (rule "commute_and_2" (formula "63") (term "0,0"))
                     (rule "commute_and_2" (formula "51") (term "0,0,0"))
                     (rule "commute_and_2" (formula "51") (term "0,0"))
                     (rule "commute_and" (formula "46") (term "0,0,0,0,1,0"))
                     (rule "shift_paren_and" (formula "103") (term "0,0,0"))
                     (rule "shift_paren_and" (formula "103") (term "0,0,1,0"))
                     (rule "compound_less_equal_than_comparison_2" (formula "111") (term "1") (inst "#v1=x_12") (inst "#v0=x_11"))
                     (rule "variableDeclarationAssign" (formula "111") (term "1"))
                     (rule "variableDeclaration" (formula "111") (term "1") (newnames "x_13"))
                     (rule "commute_and" (formula "103") (term "0,0,0,0"))
                     (rule "preincrement_assignment" (formula "109") (term "1"))
                     (rule "commute_and_2" (formula "46") (term "0,0,0,1,0"))
                     (rule "commute_and" (formula "47") (term "0,0,0,0,1,0"))
                     (rule "commute_and_2" (formula "47") (term "0,0,0,1,0"))
                     (rule "commute_and_2" (formula "47") (term "0,0,1,0"))
                     (rule "preincrement_assignment" (formula "111") (term "1"))
                     (rule "compound_int_cast_expression" (formula "109") (term "1") (inst "#v=x_12"))
                     (rule "variableDeclarationAssign" (formula "109") (term "1"))
                     (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_12"))
                     (rule "compound_int_cast_expression" (formula "111") (term "1") (inst "#v=x_14"))
                     (rule "variableDeclarationAssign" (formula "111") (term "1"))
                     (rule "variableDeclaration" (formula "111") (term "1") (newnames "x_14"))
                     (rule "shift_paren_and" (formula "84") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "84") (term "0,0"))
                     (rule "remove_parentheses_right" (formula "109") (term "1"))
                     (rule "remove_parentheses_right" (formula "111") (term "1"))
                     (rule "assignmentAdditionInt" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "translateJavaAddInt" (formula "109") (term "0,1,0"))
                     (rule "expand_inInt" (formula "109") (term "0,0,1,0"))
                     (rule "replace_int_MIN" (formula "109") (term "0,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "109") (term "1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "109") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "109") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "109") (term "1,1,0,0,1,0"))
                     (rule "commute_and" (formula "109") (term "0,0,1,0"))
                     (rule "assignmentAdditionInt" (formula "111") (term "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "translateJavaAddInt" (formula "111") (term "0,1,0"))
                     (rule "expand_inInt" (formula "111") (term "0,0,1,0"))
                     (rule "replace_int_MAX" (formula "111") (term "1,0,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "111") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "111") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "111") (term "1,1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "111") (term "0,0,0,0,1,0"))
                     (rule "commute_and" (formula "111") (term "0,0,1,0"))
                     (rule "widening_identity_cast_5" (formula "109") (term "1"))
                     (rule "assignment" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "assignment" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "variableDeclarationAssign" (formula "109") (term "1"))
                     (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_15"))
                     (rule "activeUseStaticFieldReadAccess" (formula "109") (term "1"))
                     (rule "assignment_read_static_attribute" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "pullOutSelect" (formula "109") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_great_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_36" (formula "109") (term "0,1,0"))
                     (rule "shift_paren_and" (formula "102") (term "0,0,0,1,0"))
                     (rule "widening_identity_cast_5" (formula "111") (term "1"))
                     (rule "assignment" (formula "111") (term "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "assignment" (formula "111") (term "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "variableDeclarationAssign" (formula "111") (term "1"))
                     (rule "variableDeclaration" (formula "111") (term "1") (newnames "x_16"))
                     (rule "activeUseStaticFieldReadAccess" (formula "111") (term "1"))
                     (rule "assignment_read_static_attribute" (formula "111") (term "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "replaceKnownSelect_taclet2000000_35" (formula "111") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_36" (formula "111") (term "0,1,0"))
                     (rule "less_equal_than_comparison_simple" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "less_equal_than_comparison_simple" (formula "111") (term "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "methodCallEmpty" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "emptyModality" (formula "109") (term "1"))
                      (builtin "One Step Simplification" (formula "109"))
                     (rule "notRight" (formula "109"))
                     (rule "replace_known_left" (formula "111") (term "0,0,1,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "111"))
                     (rule "commute_and" (formula "111") (term "0,1,1,0,0,0,1,1,1,0,0,0,0"))
                     (rule "commute_and" (formula "111") (term "0,1,0,1,0,0,1,1,1,0,0,0,0"))
                     (rule "ifSplit" (formula "111"))
                     (branch "if x_10 true"
                         (builtin "One Step Simplification" (formula "112"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                         (builtin "Use Operation Contract" (formula "111") (newnames "heapBefore_loop_body,exc_3,heapAfter_loop_body,anon_heap_loop_body") (contract "DualPivotQuicksort[DualPivotQuicksort::loop_body([I,int,int,int,int,int)].JML normal_behavior operation contract.0"))
                        (branch "Post (loop_body)"
                            (builtin "One Step Simplification" (formula "113"))
                            (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "81")))
                           (rule "replaceKnownSelect_taclet2000000_35" (formula "111") (term "1,1,0,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2000000_36" (formula "111") (term "1,1,0,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,0,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,0,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,1,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "0,1,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,0,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,0,1,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,0,0,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,0,0,0,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,0,0,0,0,1,0,1"))
                           (rule "expand_inInt" (formula "111") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,0,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,0,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,0,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,0,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,0,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,0,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,0,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,0,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,0,0,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,0,0,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MIN" (formula "111") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1"))
                           (rule "replace_int_MAX" (formula "111") (term "1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,1"))
                           (rule "andLeft" (formula "111"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "113"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "115"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "117"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "119"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "121"))
                           (rule "andLeft" (formula "120"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "exLeft" (formula "123") (inst "sk=y_2"))
                           (rule "andLeft" (formula "123"))
                           (rule "andLeft" (formula "123"))
                           (rule "andLeft" (formula "124"))
                           (rule "andLeft" (formula "123"))
                           (rule "exLeft" (formula "122") (inst "sk=x_17"))
                           (rule "andLeft" (formula "122"))
                           (rule "andLeft" (formula "122"))
                           (rule "andLeft" (formula "123"))
                           (rule "andLeft" (formula "122"))
                           (rule "translateJavaAddInt" (formula "120") (term "1,1,0,0,0,0"))
                           (rule "expand_inInt" (formula "120") (term "0,1,1,0,0,0,0"))
                           (rule "replace_int_MAX" (formula "120") (term "1,0,0,1,1,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "120") (term "0,1,0,1,1,0,0,0,0"))
                           (rule "translateJavaAddInt" (formula "114") (term "1"))
                           (rule "expand_inInt" (formula "114") (term "0,1"))
                           (rule "replace_int_MAX" (formula "114") (term "1,0,0,1"))
                           (rule "replace_int_MIN" (formula "114") (term "0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "113") (term "0"))
                           (rule "expand_inInt" (formula "113") (term "0,0"))
                           (rule "replace_int_MIN" (formula "113") (term "0,1,0,0"))
                           (rule "replace_int_MAX" (formula "113") (term "1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "113") (term "1,0"))
                           (rule "mul_literals" (formula "113") (term "1,1,0"))
                           (rule "polySimp_elimSub" (formula "113") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "113") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "113") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "113") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "120") (term "1,1,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "120") (term "0,0,0,1,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "120") (term "1,1,0,1,1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "114") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "114") (term "0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "114") (term "1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "113") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "113") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "113") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134") (term "1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "135") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "135") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "135") (term "1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "135") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "136") (term "1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "136") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "136") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "140"))
                           (rule "inEqSimp_commuteLeq" (formula "138"))
                           (rule "inEqSimp_commuteLeq" (formula "121") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "120") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "120") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "119") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "117"))
                           (rule "inEqSimp_commuteLeq" (formula "115"))
                           (rule "inEqSimp_commuteLeq" (formula "112") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "130"))
                           (rule "inEqSimp_commuteLeq" (formula "125"))
                           (rule "inEqSimp_commuteLeq" (formula "114"))
                           (rule "pullOutSelect" (formula "133") (term "0") (inst "selectSK=DualPivotQuicksort_great_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "133") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "117") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "118") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "141") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "140") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "112") (term "1,0"))
                           (rule "replaceKnownSelect_taclet2000000_35" (formula "133") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2000000_36" (formula "133") (term "2,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "114") (term "1,1,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "114") (term "0,2,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "114") (term "1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "114") (term "1,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "121") (term "0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_37" (formula "120") (term "1,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "134"))
                           (rule "inEqSimp_commuteGeq" (formula "117"))
                           (rule "inEqSimp_commuteLeq" (formula "118"))
                           (rule "inEqSimp_commuteGeq" (formula "114"))
                           (rule "elementOfUnion" (formula "133") (term "0,0"))
                           (rule "elementOfArrayRange" (formula "133") (term "1,0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "pullOutSelect" (formula "132") (term "1") (inst "selectSK=DualPivotQuicksort_less_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "132") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "132"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "140") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "116") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "115") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "139") (term "0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "112") (term "1,1"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "113") (term "0,2,0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "113") (term "1,1,0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "119") (term "1,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "113") (term "1,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "113") (term "1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet002000000_38" (formula "120") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "116"))
                           (rule "inEqSimp_commuteGeq" (formula "115"))
                           (rule "inEqSimp_commuteLeq" (formula "113"))
                           (rule "pullOutSelect" (formula "133") (term "0") (inst "selectSK=DualPivotQuicksort_less_5"))
                           (rule "simplifySelectOfAnon" (formula "133"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "replaceKnownSelect_taclet002000000_39" (formula "132") (term "2,0"))
                           (rule "replaceKnownSelect_taclet000000_15" (formula "133") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000000_16" (formula "133") (term "2,0"))
                           (rule "elementOfUnion" (formula "135") (term "0,0"))
                           (rule "elementOfSingleton" (formula "135") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "135"))
                           (rule "hideAuxiliaryEq" (formula "135"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "135") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "141") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "118") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "142") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "117") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "112") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "114") (term "0,2,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "114") (term "1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "114") (term "1,1,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "120") (term "1,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "121") (term "0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_40" (formula "114") (term "1,0,0,0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "135"))
                           (rule "inEqSimp_commuteGeq" (formula "118"))
                           (rule "inEqSimp_commuteLeq" (formula "117"))
                           (rule "inEqSimp_commuteLeq" (formula "114"))
                           (rule "elementOfUnion" (formula "132") (term "0,0"))
                           (rule "pullOutSelect" (formula "131") (term "0") (inst "selectSK=arr_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "131") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "131") (ifInst ""  (formula "145")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,0,1,0,0") (ifseqformula "62"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "131") (term "0,0,0,1,0,0") (ifseqformula "50"))
                           (rule "dismissNonSelectedField" (formula "131") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "131") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "131") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "131") (term "0,0,0,0,0,1,0,0"))
                           (rule "replace_known_left" (formula "131") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "131"))
                           (rule "elementOfUnion" (formula "134") (term "0,0"))
                           (rule "pullOutSelect" (formula "126") (term "0") (inst "selectSK=arr_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "126") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "146")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "126") (term "0,0,1,0,0") (ifseqformula "62"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "126") (term "0,0,0,1,0,0") (ifseqformula "50"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,0,1,0,0"))
                           (rule "replace_known_left" (formula "126") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "elementOfArrayRange" (formula "134") (term "1,0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "134"))
                           (rule "elementOfUnion" (formula "132") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "132"))
                           (rule "inEqSimp_commuteLeq" (formula "132") (term "0,1,0,0"))
                           (rule "elementOfArrayRange" (formula "135") (term "1,0,0") (inst "iv=iv"))
                            (builtin "One Step Simplification" (formula "135"))
                           (rule "elementOfUnion" (formula "126") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "inEqSimp_commuteLeq" (formula "126") (term "0,1,0,0"))
                           (rule "elementOfUnion" (formula "134") (term "0,0"))
                           (rule "elementOfSingleton" (formula "134") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "134"))
                           (rule "hideAuxiliaryEq" (formula "134"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "140") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "141") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "115") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "135") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "116") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "112") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "113") (term "1,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "113") (term "0,2,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "113") (term "1,1,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "113") (term "1,0,0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "119") (term "1,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_43" (formula "120") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "115"))
                           (rule "inEqSimp_commuteLeq" (formula "135"))
                           (rule "inEqSimp_commuteGeq" (formula "116"))
                           (rule "inEqSimp_commuteGeq" (formula "113"))
                           (rule "elementOfUnion" (formula "132") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "132") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "145")))
                           (rule "elementOfSingleton" (formula "132") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "145")))
                           (rule "elementOfUnion" (formula "134") (term "0,0"))
                           (rule "elementOfSingleton" (formula "134") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "134"))
                           (rule "hideAuxiliaryEq" (formula "134"))
                           (rule "replaceKnownAuxiliaryConstant_taclet002000000_44" (formula "134") (term "1"))
                           (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "126") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "144")))
                           (rule "elementOfSingleton" (formula "126") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "144")))
                           (rule "pullOutSelect" (formula "132") (term "2,0") (inst "selectSK=arr_13"))
                           (rule "simplifySelectOfAnon" (formula "132"))
                            (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "145")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,1,0,0") (ifseqformula "62"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "132") (term "0,0,1,0,0") (ifseqformula "50"))
                           (rule "dismissNonSelectedField" (formula "132") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "132") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "132") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "132") (term "0,0,0,0,1,0,0"))
                           (rule "replace_known_left" (formula "132") (term "0,0,0,1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "132"))
                           (rule "elementOfUnion" (formula "132") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "132"))
                           (rule "inEqSimp_commuteLeq" (formula "132") (term "0,1,0,0"))
                           (rule "elementOfUnion" (formula "132") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "132") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "145")))
                           (rule "elementOfSingleton" (formula "132") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "132") (ifInst ""  (formula "145")))
                           (rule "pullOutSelect" (formula "126") (term "2,0") (inst "selectSK=arr_14"))
                           (rule "simplifySelectOfAnon" (formula "126"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "146")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "126") (term "0,1,0,0") (ifseqformula "62"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "126") (term "0,0,1,0,0") (ifseqformula "50"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0,1,0,0"))
                           (rule "replace_known_left" (formula "126") (term "0,0,0,1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "elementOfUnion" (formula "126") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "inEqSimp_commuteLeq" (formula "126") (term "0,1,0,0"))
                           (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "126") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "146")))
                           (rule "elementOfSingleton" (formula "126") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "146")))
                           (rule "pullOutSelect" (formula "133") (term "2,0") (inst "selectSK=arr_15"))
                           (rule "simplifySelectOfAnonEQ" (formula "133") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "147")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "133") (term "0,1,0,0") (ifseqformula "50"))
                           (rule "elementOfSingleton" (formula "133") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "147")))
                           (rule "ifthenelse_negated" (formula "133") (term "0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "133") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "simplifySelectOfAnonEQ" (formula "133") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "147")))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,1,0,0"))
                           (rule "elementOfSingleton" (formula "133") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "133") (ifInst ""  (formula "147")))
                           (rule "ifthenelse_negated" (formula "133") (term "0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "133") (term "0,0,0"))
                           (rule "replace_known_left" (formula "133") (term "0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "simplifySelectOfStore" (formula "133"))
                            (builtin "One Step Simplification" (formula "133"))
                           (rule "castDel" (formula "133") (term "1,0"))
                           (rule "pullOutSelect" (formula "126") (term "2,0") (inst "selectSK=arr_16"))
                           (rule "simplifySelectOfAnonEQ" (formula "126") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "148")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "126") (term "0,1,0,0") (ifseqformula "50"))
                           (rule "elementOfSingleton" (formula "126") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "148")))
                           (rule "ifthenelse_negated" (formula "126") (term "0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "126") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "simplifySelectOfAnonEQ" (formula "126") (ifseqformula "50"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "148")))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,1,0,0"))
                           (rule "elementOfSingleton" (formula "126") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "126") (ifInst ""  (formula "148")))
                           (rule "ifthenelse_negated" (formula "126") (term "0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "0,0,0"))
                           (rule "replace_known_left" (formula "126") (term "0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "simplifySelectOfStore" (formula "126"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "castDel" (formula "126") (term "1,0"))
                           (rule "pullOutSelect" (formula "134") (term "2,0") (inst "selectSK=arr_17"))
                           (rule "simplifySelectOfStore" (formula "134"))
                            (builtin "One Step Simplification" (formula "134"))
                           (rule "castDel" (formula "134") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "134") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "134") (term "2,0"))
                           (rule "pullOutSelect" (formula "126") (term "2,0") (inst "selectSK=arr_18"))
                           (rule "simplifySelectOfStore" (formula "126"))
                            (builtin "One Step Simplification" (formula "126"))
                           (rule "castDel" (formula "126") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "126") (term "2,0"))
                           (rule "commuteUnion" (formula "111") (term "0,1,0"))
                           (rule "tryEmpty" (formula "151") (term "1"))
                           (rule "commute_and_2" (formula "143") (term "0,0"))
                           (rule "commute_and" (formula "144") (term "1,0"))
                           (rule "commute_and" (formula "142") (term "0,0,0"))
                           (rule "commute_and" (formula "142") (term "1,0,0"))
                           (rule "commute_and" (formula "144") (term "0,0,0"))
                           (rule "commute_and" (formula "144") (term "1,0,0"))
                           (rule "commute_and" (formula "121") (term "1,0,0"))
                           (rule "commute_and" (formula "120") (term "1,0,0"))
                           (rule "commute_and" (formula "119") (term "1,0,0"))
                           (rule "commute_and" (formula "142") (term "0,0,0,1,0"))
                           (rule "commute_and" (formula "142") (term "1,0,0,1,0"))
                           (rule "commute_and" (formula "143") (term "1,0,0,1,0"))
                           (rule "commute_and" (formula "114") (term "0,0"))
                           (rule "commute_and" (formula "120") (term "0,1,1,0,0,0,0"))
                           (rule "commute_and" (formula "113") (term "0,0"))
                           (rule "methodCallThrow" (formula "151") (term "1,0,0,1"))
                            (builtin "One Step Simplification" (formula "151"))
                           (rule "commute_and_2" (formula "120") (term "0,0"))
                           (rule "commute_and" (formula "143") (term "1,0,0,0"))
                           (rule "commute_and_2" (formula "142") (term "0,0,1,0"))
                           (rule "shift_paren_and" (formula "142") (term "0,0"))
                           (rule "commute_and_2" (formula "142") (term "0,0,0"))
                           (rule "shift_paren_and" (formula "144") (term "0,0"))
                           (rule "commute_and_2" (formula "144") (term "0,0,0"))
                           (rule "shift_paren_and" (formula "121") (term "0,0"))
                           (rule "commute_and" (formula "120") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "120") (term "0,0,0"))
                           (rule "shift_paren_and" (formula "119") (term "0,0"))
                           (rule "methodCallEmpty" (formula "151") (term "1"))
                           (rule "shift_paren_and" (formula "143") (term "0,0,0"))
                           (rule "commute_and" (formula "143") (term "0,0,0,0"))
                           (rule "emptyModality" (formula "151") (term "1"))
                            (builtin "One Step Simplification" (formula "151"))
                            (opengoal " ")
                        )
                        (branch "Exceptional Post (loop_body)"
                            (builtin "One Step Simplification" (formula "113"))
                            (builtin "One Step Simplification" (formula "111"))
                           (rule "andLeft" (formula "111"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1,0") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "112"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,1,0") (ifseqformula "62"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,1,0") (ifseqformula "50"))
                           (rule "andLeft" (formula "112"))
                           (rule "andLeft" (formula "112"))
                           (rule "notLeft" (formula "112"))
                           (rule "close" (formula "114") (ifseqformula "113"))
                        )
                        (branch "Pre (loop_body)"
                            (opengoal " ")
                        )
                     )
                     (branch "if x_10 false"
                         (builtin "One Step Simplification" (formula "112"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Use Case"
                      (opengoal " ")
                  )
               )
               (branch "Exceptional Post (move_great_left)"
                   (builtin "One Step Simplification" (formula "53"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "andLeft" (formula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "1,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0") (ifseqformula "40"))
                  (rule "andLeft" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "notLeft" (formula "52"))
                  (rule "close" (formula "54") (ifseqformula "53"))
               )
               (branch "Pre (move_great_left)"
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "7")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1") (ifseqformula "40"))
                  (rule "wellFormedAnonEQ" (formula "51") (term "0") (ifseqformula "40"))
                  (rule "wellFormedStorePrimitiveArray" (formula "51") (term "0,0"))
                  (rule "wellFormedStorePrimitiveArray" (formula "51") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "51") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "51") (term "0,0"))
                  (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "39"))
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "2")))
                  (rule "orRight" (formula "51"))
                  (rule "dismissNonSelectedField" (formula "51") (term "0"))
                  (rule "dismissNonSelectedField" (formula "51") (term "0"))
                  (rule "dismissNonSelectedField" (formula "51") (term "0"))
                  (rule "dismissNonSelectedField" (formula "51") (term "0"))
                  (rule "close" (formula "51") (ifseqformula "3"))
               )
            )
            (branch "Exceptional Post (move_less_right)"
                (builtin "One Step Simplification" (formula "42"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "andLeft" (formula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "40"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "41"))
               (rule "notLeft" (formula "41"))
               (rule "close" (formula "43") (ifseqformula "42"))
            )
            (branch "Pre (move_less_right)"
                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")))
               (rule "wellFormedStorePrimitiveArray" (formula "40") (term "0"))
               (rule "wellFormedStorePrimitiveArray" (formula "40") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "40") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "40") (term "0"))
               (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "dismissNonSelectedField" (formula "40") (term "0"))
               (rule "dismissNonSelectedField" (formula "40") (term "0"))
               (rule "dismissNonSelectedField" (formula "40") (term "0"))
               (rule "dismissNonSelectedField" (formula "40") (term "0"))
               (rule "close" (formula "40") (ifseqformula "3"))
            )
         )
         (branch "Null Reference (x_arr_3 = null)"
            (rule "false_right" (formula "39"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_3 != null, but x_6 Out of Bounds!)"
            (rule "false_right" (formula "39"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "31") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "32"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "32") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "28"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "13"))
            (rule "mul_literals" (formula "13") (term "1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "31"))
            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
            (rule "polySimp_elimOne" (formula "31") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1"))
            (rule "polySimp_rightDist" (formula "26") (term "1"))
            (rule "mul_literals" (formula "26") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1"))
            (rule "polySimp_rightDist" (formula "33") (term "1"))
            (rule "mul_literals" (formula "33") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
            (rule "polySimp_elimOne" (formula "33") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
            (rule "polySimp_elimOne" (formula "29") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "32"))
            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
            (rule "polySimp_elimOne" (formula "32") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
            (rule "polySimp_elimOne" (formula "28") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "mul_literals" (formula "13") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "15"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0"))
            (rule "polySimp_elimOne" (formula "15") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1"))
            (rule "polySimp_rightDist" (formula "17") (term "1"))
            (rule "mul_literals" (formula "17") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24"))
            (rule "polySimp_mulComm0" (formula "24") (term "1"))
            (rule "polySimp_rightDist" (formula "24") (term "1"))
            (rule "mul_literals" (formula "24") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1"))
            (rule "polySimp_rightDist" (formula "21") (term "1"))
            (rule "mul_literals" (formula "21") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "27"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0"))
            (rule "polySimp_elimOne" (formula "27") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1"))
            (rule "polySimp_rightDist" (formula "23") (term "1"))
            (rule "mul_literals" (formula "23") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "mul_literals" (formula "16") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
            (rule "polySimp_rightDist" (formula "26") (term "0,0"))
            (rule "mul_literals" (formula "26") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1"))
            (rule "polySimp_rightDist" (formula "26") (term "1"))
            (rule "mul_literals" (formula "26") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
            (rule "mul_literals" (formula "21") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1"))
            (rule "polySimp_rightDist" (formula "21") (term "1"))
            (rule "mul_literals" (formula "21") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
            (rule "polySimp_rightDist" (formula "34") (term "0,0"))
            (rule "mul_literals" (formula "34") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
            (rule "add_literals" (formula "34") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
            (rule "polySimp_elimOne" (formula "34") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
            (rule "polySimp_rightDist" (formula "33") (term "0,0"))
            (rule "mul_literals" (formula "33") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
            (rule "add_literals" (formula "33") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
            (rule "polySimp_elimOne" (formula "33") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
            (rule "polySimp_rightDist" (formula "32") (term "0,0"))
            (rule "mul_literals" (formula "32") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "32") (term "0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "32"))
            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
            (rule "polySimp_elimOne" (formula "32") (term "0"))
            (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "32"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "2") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
            (rule "polySimp_rightDist" (formula "30") (term "0,0"))
            (rule "mul_literals" (formula "30") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "30"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
            (rule "polySimp_elimOne" (formula "30") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0"))
            (rule "polySimp_addComm1" (formula "29") (term "0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1"))
            (rule "polySimp_rightDist" (formula "29") (term "1"))
            (rule "mul_literals" (formula "29") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "29"))
            (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0"))
            (rule "qeq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "nnf_imp2or" (formula "41") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "42") (term "0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
            (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
            (rule "mul_literals" (formula "41") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
            (rule "commute_or" (formula "1"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "41") (term "0,0"))
            (rule "ifthenelse_split" (formula "12") (term "1,1,0"))
            (branch "inInt(left * -1 + right) TRUE"
               (rule "replace_known_left" (formula "13") (term "0,1,0,0,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
               (rule "commute_or_2" (formula "9") (term "0,0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or" (formula "42") (term "0,0,0,1,0"))
               (rule "arrayLengthNotNegative" (formula "15") (term "0"))
               (rule "arrayLengthIsAnInt" (formula "16") (term "0"))
               (rule "all_pull_out3" (formula "45") (term "0"))
               (rule "shift_paren_or" (formula "45") (term "0,0"))
               (rule "shift_paren_or" (formula "45") (term "0,0,0"))
               (rule "shift_paren_or" (formula "45") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "45") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "45") (term "0,0,0,0,0,0"))
               (rule "all_pull_out3" (formula "44") (term "0"))
               (rule "shift_paren_or" (formula "44") (term "0,0"))
               (rule "shift_paren_or" (formula "44") (term "0,0,0"))
               (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0"))
               (rule "ifthenelse_split" (formula "13") (term "0"))
               (branch "inInt(1 + left * -1 + right) TRUE"
                  (rule "inEqSimp_homoInEq1" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0"))
                  (rule "qeq_literals" (formula "32") (term "0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "add_literals" (formula "39") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                     (rule "mul_literals" (formula "40") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                     (rule "add_literals" (formula "40") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "add_literals" (formula "37") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "closeFalse" (formula "16"))
                  )
               )
               (branch "inInt(1 + left * -1 + right) FALSE"
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                     (rule "mul_literals" (formula "40") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "add_literals" (formula "40") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0"))
                     (rule "add_literals" (formula "38") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "mul_literals" (formula "33") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "37"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "closeFalse" (formula "34"))
                  )
               )
            )
            (branch "inInt(left * -1 + right) FALSE"
               (rule "replace_known_right" (formula "12") (term "0,0,2,0") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "43")))
               (rule "commute_or_2" (formula "9") (term "0,0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or" (formula "41") (term "0,0,0,1,0"))
               (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
               (rule "arrayLengthNotNegative" (formula "15") (term "0"))
               (rule "all_pull_out3" (formula "44") (term "0"))
               (rule "shift_paren_or" (formula "44") (term "0,0"))
               (rule "shift_paren_or" (formula "44") (term "0,0,0"))
               (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0"))
               (rule "all_pull_out3" (formula "43") (term "0"))
               (rule "shift_paren_or" (formula "43") (term "0,0"))
               (rule "shift_paren_or" (formula "43") (term "0,0,0"))
               (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
               (rule "ifthenelse_split" (formula "12") (term "0"))
               (branch "inInt(1 + javaSubIntOverFlow(right, left)) TRUE"
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "add_literals" (formula "39") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                     (rule "mul_literals" (formula "40") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                     (rule "add_literals" (formula "40") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "add_literals" (formula "37") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "41"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "39"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "33") (term "0"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "closeFalse" (formula "33"))
                  )
               )
               (branch "inInt(1 + javaSubIntOverFlow(right, left)) FALSE"
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length TRUE"
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "38"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: DualPivotQuicksort.e4 >= a.length FALSE"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "add_literals" (formula "39") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "40"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "add_literals" (formula "37") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "38"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "mul_literals" (formula "32") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "36"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "add_literals" (formula "33") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
               )
            )
         )
      )
      (branch "Null Reference (_a = null)"
         (rule "false_right" (formula "38"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_a != null, but _right Out of Bounds!)"
         (rule "false_right" (formula "38"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "inEqSimp_ltToLeq" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "23"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "31") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23"))
         (rule "polySimp_mulComm0" (formula "23") (term "1"))
         (rule "polySimp_rightDist" (formula "23") (term "1"))
         (rule "mul_literals" (formula "23") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
         (rule "polySimp_elimOne" (formula "30") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "mul_literals" (formula "18") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1"))
         (rule "polySimp_rightDist" (formula "25") (term "1"))
         (rule "mul_literals" (formula "25") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0"))
         (rule "polySimp_elimOne" (formula "31") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1"))
         (rule "polySimp_rightDist" (formula "16") (term "1"))
         (rule "mul_literals" (formula "16") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1"))
         (rule "polySimp_rightDist" (formula "20") (term "1"))
         (rule "mul_literals" (formula "20") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
         (rule "polySimp_elimOne" (formula "28") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1"))
         (rule "polySimp_rightDist" (formula "22") (term "1"))
         (rule "mul_literals" (formula "22") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
         (rule "polySimp_elimOne" (formula "29") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32"))
         (rule "polySimp_mulComm0" (formula "32") (term "1"))
         (rule "polySimp_rightDist" (formula "32") (term "1"))
         (rule "mul_literals" (formula "32") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "mul_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0"))
         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
         (rule "polySimp_mulComm0" (formula "24") (term "1"))
         (rule "polySimp_rightDist" (formula "24") (term "1"))
         (rule "mul_literals" (formula "24") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "polySimp_mulComm0" (formula "15") (term "1"))
         (rule "polySimp_rightDist" (formula "15") (term "1"))
         (rule "mul_literals" (formula "15") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
         (rule "mul_literals" (formula "20") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1"))
         (rule "polySimp_rightDist" (formula "20") (term "1"))
         (rule "mul_literals" (formula "20") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
         (rule "polySimp_rightDist" (formula "33") (term "0,0"))
         (rule "mul_literals" (formula "33") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "33") (term "0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
         (rule "add_literals" (formula "33") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "33"))
         (rule "polySimp_mulLiterals" (formula "33") (term "0"))
         (rule "polySimp_elimOne" (formula "33") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
         (rule "polySimp_rightDist" (formula "32") (term "0,0"))
         (rule "mul_literals" (formula "32") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "32") (term "0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
         (rule "add_literals" (formula "32") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
         (rule "polySimp_elimOne" (formula "32") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "13"))
         (rule "qeq_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "closeFalse" (formula "15"))
      )
   )
   (branch "Null Reference (x_arr_1 = null)"
      (rule "false_right" (formula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr_1 != null, but x_3 Out of Bounds!)"
      (rule "false_right" (formula "38"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
      (rule "inEqSimp_ltToLeq" (formula "24"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "14"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "28"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "27"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "27") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "22"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "26"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "26") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "32"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "23"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "31"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "15"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "25"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
      (rule "polySimp_elimOne" (formula "24") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "28"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
      (rule "polySimp_elimOne" (formula "28") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1"))
      (rule "polySimp_rightDist" (formula "20") (term "1"))
      (rule "mul_literals" (formula "20") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "27"))
      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
      (rule "polySimp_elimOne" (formula "27") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
      (rule "polySimp_elimOne" (formula "30") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1"))
      (rule "polySimp_rightDist" (formula "18") (term "1"))
      (rule "mul_literals" (formula "18") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
      (rule "polySimp_elimOne" (formula "29") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
      (rule "polySimp_mulComm0" (formula "22") (term "1"))
      (rule "polySimp_rightDist" (formula "22") (term "1"))
      (rule "mul_literals" (formula "22") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16"))
      (rule "polySimp_mulComm0" (formula "16") (term "1"))
      (rule "polySimp_rightDist" (formula "16") (term "1"))
      (rule "mul_literals" (formula "16") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "26"))
      (rule "polySimp_mulLiterals" (formula "26") (term "0"))
      (rule "polySimp_elimOne" (formula "26") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "32"))
      (rule "polySimp_mulComm0" (formula "32") (term "1"))
      (rule "polySimp_rightDist" (formula "32") (term "1"))
      (rule "mul_literals" (formula "32") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23"))
      (rule "polySimp_mulComm0" (formula "23") (term "1"))
      (rule "polySimp_rightDist" (formula "23") (term "1"))
      (rule "mul_literals" (formula "23") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "31"))
      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
      (rule "polySimp_elimOne" (formula "31") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
      (rule "polySimp_elimOne" (formula "15") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25"))
      (rule "polySimp_mulComm0" (formula "25") (term "1"))
      (rule "polySimp_rightDist" (formula "25") (term "1"))
      (rule "mul_literals" (formula "25") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
      (rule "polySimp_rightDist" (formula "24") (term "0,0"))
      (rule "mul_literals" (formula "24") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24"))
      (rule "polySimp_mulComm0" (formula "24") (term "1"))
      (rule "polySimp_rightDist" (formula "24") (term "1"))
      (rule "mul_literals" (formula "24") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
      (rule "polySimp_rightDist" (formula "19") (term "0,0"))
      (rule "mul_literals" (formula "19") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1"))
      (rule "polySimp_rightDist" (formula "19") (term "1"))
      (rule "mul_literals" (formula "19") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
      (rule "polySimp_rightDist" (formula "33") (term "0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "33") (term "0"))
      (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
      (rule "polySimp_rightDist" (formula "15") (term "0,0"))
      (rule "mul_literals" (formula "15") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
      (rule "polySimp_mulComm0" (formula "15") (term "1"))
      (rule "polySimp_rightDist" (formula "15") (term "1"))
      (rule "mul_literals" (formula "15") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
      (rule "polySimp_rightDist" (formula "32") (term "0,0"))
      (rule "mul_literals" (formula "32") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "32") (term "0"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
      (rule "add_literals" (formula "32") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
      (rule "polySimp_elimOne" (formula "32") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
      (rule "polySimp_rightDist" (formula "31") (term "0,0"))
      (rule "mul_literals" (formula "31") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
      (rule "add_literals" (formula "31") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
      (rule "polySimp_elimOne" (formula "31") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
      (rule "mul_literals" (formula "30") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
      (rule "polySimp_elimOne" (formula "30") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
      (rule "mul_literals" (formula "29") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1"))
      (rule "polySimp_rightDist" (formula "29") (term "1"))
      (rule "mul_literals" (formula "29") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "29"))
      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
      (rule "add_literals" (formula "19") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "19") (term "1,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0"))
      (rule "qeq_literals" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "nnf_imp2or" (formula "41") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "42") (term "0"))
      (rule "nnf_notAnd" (formula "41") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
      (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
      (rule "mul_literals" (formula "41") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "42") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
      (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "41") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
      (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "41") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,0"))
      (rule "commute_or" (formula "1"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or_2" (formula "41") (term "0,0"))
      (rule "ifthenelse_split" (formula "12") (term "1,1,0"))
      (branch "inInt(left * -1 + right) TRUE"
         (rule "replace_known_left" (formula "13") (term "0,1,0,0,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
         (rule "arrayLengthNotNegative" (formula "16") (term "0"))
         (rule "commute_or" (formula "44") (term "0,0,0,1,0"))
         (rule "all_pull_out3" (formula "45") (term "0"))
         (rule "shift_paren_or" (formula "45") (term "0,0"))
         (rule "shift_paren_or" (formula "45") (term "0,0,0"))
         (rule "shift_paren_or" (formula "45") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "45") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "45") (term "0,0,0,0,0,0"))
         (rule "all_pull_out3" (formula "44") (term "0"))
         (rule "shift_paren_or" (formula "44") (term "0,0"))
         (rule "shift_paren_or" (formula "44") (term "0,0,0"))
         (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0"))
         (rule "ifthenelse_split" (formula "13") (term "0"))
         (branch "inInt(1 + left * -1 + right) TRUE"
            (rule "inEqSimp_homoInEq1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
            (rule "mul_literals" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
            (rule "mul_literals" (formula "32") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
            (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
            (rule "add_literals" (formula "32") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
            (rule "add_literals" (formula "32") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "32") (term "1,0,0"))
            (rule "add_zero_right" (formula "32") (term "0,0"))
            (rule "qeq_literals" (formula "32") (term "0"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "cut_direct" (formula "1") (term "1"))
            (branch "CUT: DualPivotQuicksort.e2 >= a.length TRUE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: DualPivotQuicksort.e2 >= a.length FALSE"
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "46"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "35") (term "0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "add_literals" (formula "36") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1"))
               (rule "polySimp_rightDist" (formula "33") (term "1"))
               (rule "mul_literals" (formula "33") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "37"))
               (rule "polySimp_rightDist" (formula "34") (term "0,0"))
               (rule "mul_literals" (formula "34") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "add_literals" (formula "34") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "34"))
               (rule "qeq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "closeFalse" (formula "16"))
            )
         )
         (branch "inInt(1 + left * -1 + right) FALSE"
            (rule "cut_direct" (formula "1") (term "1"))
            (branch "CUT: DualPivotQuicksort.e2 >= a.length TRUE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
               (rule "andLeft" (formula "18"))
               (rule "inEqSimp_homoInEq1" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0"))
               (rule "polySimp_addComm1" (formula "18") (term "0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
               (rule "add_literals" (formula "18") (term "1,1,0"))
               (rule "times_zero_1" (formula "18") (term "1,0"))
               (rule "add_zero_right" (formula "18") (term "0"))
               (rule "leq_literals" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
            (branch "CUT: DualPivotQuicksort.e2 >= a.length FALSE"
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "46"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "35") (term "0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "add_literals" (formula "35") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "15"))
               (rule "qeq_literals" (formula "33") (term "0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "closeFalse" (formula "33"))
            )
         )
      )
      (branch "inInt(left * -1 + right) FALSE"
         (rule "replace_known_right" (formula "12") (term "0,0,2,0") (ifseqformula "43"))
          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "43")))
         (rule "commute_or_2" (formula "9") (term "0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "arrayLengthNotNegative" (formula "14") (term "0"))
         (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
         (rule "commute_or" (formula "43") (term "0,0,0,1,0"))
         (rule "all_pull_out3" (formula "44") (term "0"))
         (rule "shift_paren_or" (formula "44") (term "0,0"))
         (rule "shift_paren_or" (formula "44") (term "0,0,0"))
         (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0"))
         (rule "all_pull_out3" (formula "43") (term "0"))
         (rule "shift_paren_or" (formula "43") (term "0,0"))
         (rule "shift_paren_or" (formula "43") (term "0,0,0"))
         (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "43") (term "0,0,0,0,0,0"))
         (rule "ifthenelse_split" (formula "12") (term "0"))
         (branch "inInt(1 + javaSubIntOverFlow(right, left)) TRUE"
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "cut_direct" (formula "1") (term "1"))
            (branch "CUT: DualPivotQuicksort.e2 >= a.length TRUE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "35"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: DualPivotQuicksort.e2 >= a.length FALSE"
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "46"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "35") (term "0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "add_literals" (formula "35") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "36") (term "0,0"))
               (rule "mul_literals" (formula "36") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "36"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0"))
               (rule "polySimp_elimOne" (formula "36") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "15"))
               (rule "qeq_literals" (formula "33") (term "0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "closeFalse" (formula "33"))
            )
         )
         (branch "inInt(1 + javaSubIntOverFlow(right, left)) FALSE"
            (rule "cut_direct" (formula "1") (term "1"))
            (branch "CUT: DualPivotQuicksort.e2 >= a.length TRUE"
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "34"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
               (rule "andLeft" (formula "17"))
               (rule "inEqSimp_homoInEq1" (formula "17"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "1,1,0"))
               (rule "times_zero_1" (formula "17") (term "1,0"))
               (rule "add_zero_right" (formula "17") (term "0"))
               (rule "leq_literals" (formula "17"))
               (rule "closeFalse" (formula "17"))
            )
            (branch "CUT: DualPivotQuicksort.e2 >= a.length FALSE"
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "45"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "34") (term "0,0"))
               (rule "mul_literals" (formula "34") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
               (rule "add_literals" (formula "34") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "34"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
               (rule "polySimp_elimOne" (formula "34") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "35") (term "0,0"))
               (rule "mul_literals" (formula "35") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "35") (term "0"))
               (rule "add_literals" (formula "35") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "35"))
               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
               (rule "polySimp_elimOne" (formula "35") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
               (rule "polySimp_rightDist" (formula "32") (term "0,0"))
               (rule "mul_literals" (formula "32") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0"))
               (rule "polySimp_addComm1" (formula "32") (term "0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "32"))
               (rule "polySimp_mulComm0" (formula "32") (term "1"))
               (rule "polySimp_rightDist" (formula "32") (term "1"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
               (rule "mul_literals" (formula "32") (term "0,1"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "36"))
               (rule "polySimp_rightDist" (formula "33") (term "0,0"))
               (rule "mul_literals" (formula "33") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0"))
               (rule "add_literals" (formula "33") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "33"))
               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
               (rule "polySimp_elimOne" (formula "33") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "33"))
               (rule "qeq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "closeFalse" (formula "14"))
            )
         )
      )
   )
)
(branch "Null Reference (_a = null)"
   (rule "false_right" (formula "38"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_a != null, but _left Out of Bounds!)"
   (rule "false_right" (formula "38"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
   (rule "inEqSimp_ltToLeq" (formula "25"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "24"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "24") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "31"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "22"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "20"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "18"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "27"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "27") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "26"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "26") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "30"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "30") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "15"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "29"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "29") (term "0"))
   (rule "inEqSimp_gtToGeq" (formula "12"))
   (rule "mul_literals" (formula "12") (term "1,0,0"))
   (rule "add_literals" (formula "12") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "16"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "28"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "28") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
   (rule "polySimp_mulComm0" (formula "25") (term "1"))
   (rule "polySimp_rightDist" (formula "25") (term "1"))
   (rule "mul_literals" (formula "25") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "24"))
   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
   (rule "polySimp_elimOne" (formula "24") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
   (rule "polySimp_elimOne" (formula "31") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22"))
   (rule "polySimp_mulComm0" (formula "22") (term "1"))
   (rule "polySimp_rightDist" (formula "22") (term "1"))
   (rule "mul_literals" (formula "22") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1"))
   (rule "polySimp_rightDist" (formula "23") (term "1"))
   (rule "mul_literals" (formula "23") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20"))
   (rule "polySimp_mulComm0" (formula "20") (term "1"))
   (rule "polySimp_rightDist" (formula "20") (term "1"))
   (rule "mul_literals" (formula "20") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
   (rule "polySimp_mulComm0" (formula "18") (term "1"))
   (rule "polySimp_rightDist" (formula "18") (term "1"))
   (rule "mul_literals" (formula "18") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
   (rule "polySimp_elimOne" (formula "27") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1"))
   (rule "polySimp_rightDist" (formula "32") (term "1"))
   (rule "mul_literals" (formula "32") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
   (rule "polySimp_elimOne" (formula "32") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "26"))
   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
   (rule "polySimp_elimOne" (formula "26") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
   (rule "polySimp_elimOne" (formula "30") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
   (rule "polySimp_elimOne" (formula "15") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "29"))
   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
   (rule "polySimp_elimOne" (formula "29") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
   (rule "mul_literals" (formula "12") (term "1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "19"))
   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
   (rule "polySimp_elimOne" (formula "19") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16"))
   (rule "polySimp_mulComm0" (formula "16") (term "1"))
   (rule "polySimp_rightDist" (formula "16") (term "1"))
   (rule "mul_literals" (formula "16") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
   (rule "polySimp_elimOne" (formula "28") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "13"))
   (rule "qeq_literals" (formula "1") (term "0,1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
   (rule "polySimp_rightDist" (formula "19") (term "0,0"))
   (rule "mul_literals" (formula "19") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0"))
   (rule "polySimp_addComm1" (formula "19") (term "0,0"))
   (rule "add_literals" (formula "19") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19"))
   (rule "polySimp_mulComm0" (formula "19") (term "1"))
   (rule "polySimp_rightDist" (formula "19") (term "1"))
   (rule "mul_literals" (formula "19") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
   (rule "polySimp_rightDist" (formula "15") (term "0,0"))
   (rule "mul_literals" (formula "15") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
   (rule "polySimp_mulComm0" (formula "15") (term "1"))
   (rule "polySimp_rightDist" (formula "15") (term "1"))
   (rule "mul_literals" (formula "15") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
   (rule "mul_literals" (formula "25") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "25") (term "0"))
   (rule "polySimp_addComm1" (formula "25") (term "0,0"))
   (rule "add_literals" (formula "25") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "25"))
   (rule "polySimp_mulComm0" (formula "25") (term "1"))
   (rule "polySimp_rightDist" (formula "25") (term "1"))
   (rule "mul_literals" (formula "25") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
   (rule "polySimp_rightDist" (formula "33") (term "0,0"))
   (rule "mul_literals" (formula "33") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "33") (term "0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
   (rule "polySimp_elimOne" (formula "33") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
   (rule "polySimp_rightDist" (formula "14") (term "0,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "20"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_homoInEq1" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
   (rule "add_literals" (formula "14") (term "1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0"))
   (rule "add_zero_right" (formula "14") (term "0"))
   (rule "leq_literals" (formula "14"))
   (rule "closeFalse" (formula "14"))
)
)
}
