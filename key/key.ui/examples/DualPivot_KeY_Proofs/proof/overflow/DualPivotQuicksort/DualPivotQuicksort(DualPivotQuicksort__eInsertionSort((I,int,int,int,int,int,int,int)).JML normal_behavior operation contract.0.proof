\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue May 02 17:09:32 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue May 02 17:09:32 CEST 2017
name=DualPivotQuicksort[DualPivotQuicksort\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort[DualPivotQuicksort\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mulbrich" ) (keyVersion "cbbc782689187fd0e8386ae09174c87f2c75b7a9"))

(autoModeTime "48187")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "a,left,right,e1,e2,e3,e4,e5,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "eqSymm" (formula "26") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "25"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "assignment" (formula "26") (term "1"))
(builtin "One Step Simplification" (formula "26"))
(rule "elementOfArrayRange" (formula "26") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "commute_and_2" (formula "11") (term "0,0"))
(rule "commute_and_2" (formula "24") (term "0,0"))
(rule "commute_and_2" (formula "23") (term "0,0"))
(rule "commute_and_2" (formula "24") (term "0,0,1,0"))
(rule "commute_and" (formula "11") (term "0,0,0"))
(rule "commute_and_2" (formula "11") (term "0,0"))
(rule "commute_and" (formula "24") (term "0,0,0"))
(rule "commute_and" (formula "23") (term "0,0,0"))
(rule "commute_and_2" (formula "23") (term "0,0"))
(rule "commute_and_2" (formula "23") (term "0,0,1,0"))
(rule "commute_and" (formula "24") (term "0,0,0,1,0"))
(rule "commute_and" (formula "23") (term "0,0,0,1,0"))
(rule "commute_and_2" (formula "23") (term "0,0,1,0"))
(rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_eInsertionSort,savedHeapBefore_eInsertionSort"))
(builtin "One Step Simplification" (formula "26"))
(builtin "Block Contract" (formula "26") (newnames "anon_heap,exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "26")) (ifInst ""  (formula "2")))
   (builtin "One Step Simplification" (formula "27"))
   (rule "true_left" (formula "25"))
   (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1"))
   (rule "assignment" (formula "26") (term "1"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "elementOfUnion" (formula "26") (term "0,0,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,1,0,1"))
   (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_49"))
   (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_51") (inst "#v0=x_50"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_50"))
   (rule "assignment_array2" (formula "26"))
   (branch "Normal Execution (_a != null)"
      (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_51"))
      (rule "assignment_array2" (formula "26"))
      (branch "Normal Execution (_a != null)"
         (builtin "One Step Simplification" (formula "26"))
         (rule "less_than_comparison_simple" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "arrayLengthIsAShort" (formula "14") (term "0"))
         (rule "arrayLengthNotNegative" (formula "15") (term "0"))
         (rule "ifSplit" (formula "28"))
         (branch "if x_49 true"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "variableDeclarationAssign" (formula "29") (term "1"))
            (rule "variableDeclaration" (formula "29") (term "1") (newnames "t_3"))
            (rule "assignment_array2" (formula "29"))
            (branch "Normal Execution (_a != null)"
               (builtin "One Step Simplification" (formula "29"))
               (rule "eval_order_array_access3" (formula "29") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "29") (term "1"))
               (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_arr_9"))
               (rule "assignment" (formula "29") (term "1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "variableDeclarationAssign" (formula "29") (term "1"))
               (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_52"))
               (rule "assignment" (formula "29") (term "1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "variableDeclarationAssign" (formula "29") (term "1"))
               (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_53"))
               (rule "assignment_array2" (formula "29"))
               (branch "Normal Execution (_a != null)"
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "assignment_to_primitive_array_component" (formula "29"))
                  (branch "Normal Execution (x_arr_9 != null)"
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "assignment_to_primitive_array_component" (formula "29"))
                     (branch "Normal Execution (_a != null)"
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "tryEmpty" (formula "29") (term "1"))
                        (rule "blockEmptyLabel" (formula "29") (term "1"))
                        (rule "blockEmpty" (formula "29") (term "1"))
                        (rule "methodCallEmpty" (formula "29") (term "1"))
                        (rule "emptyModality" (formula "29") (term "1"))
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "closeTrue" (formula "29"))
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "allRight" (formula "29") (inst "sk=f_0"))
                           (rule "allRight" (formula "29") (inst "sk=o_0"))
                           (rule "orRight" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "eqSymm" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "32"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (_a = null)"
                        (rule "false_right" (formula "30"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                        (rule "false_right" (formula "30"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1"))
                        (rule "mul_literals" (formula "20") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                        (rule "leq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (rule "add_zero_left" (formula "18") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                        (rule "mul_literals" (formula "18") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                        (rule "mul_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                        (rule "leq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                        (rule "mul_literals" (formula "27") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                        (rule "andLeft" (formula "24"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,1,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0"))
                        (rule "add_zero_right" (formula "24") (term "0"))
                        (rule "leq_literals" (formula "24"))
                        (rule "closeFalse" (formula "24"))
                     )
                  )
                  (branch "Null Reference (x_arr_9 = null)"
                     (rule "false_right" (formula "30"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_9 != null, but x_52 Out of Bounds!)"
                     (rule "false_right" (formula "30"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                     (rule "mul_literals" (formula "20") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (rule "add_zero_left" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "27") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "commute_or" (formula "1"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "27") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                     (rule "all_pull_out3" (formula "28") (term "0"))
                     (rule "shift_paren_or" (formula "28") (term "0,0"))
                     (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "all_pull_out3" (formula "27") (term "0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "cut_direct" (formula "1") (term "1"))
                     (branch "CUT: a.length <= e2 TRUE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                        (rule "mul_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                        (rule "mul_literals" (formula "27") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                        (rule "mul_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                        (rule "andLeft" (formula "26"))
                        (rule "inEqSimp_homoInEq1" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,1,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0"))
                        (rule "add_zero_right" (formula "26") (term "0"))
                        (rule "leq_literals" (formula "26"))
                        (rule "closeFalse" (formula "26"))
                     )
                     (branch "CUT: a.length <= e2 FALSE"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "mul_literals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                        (rule "qeq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "closeFalse" (formula "23"))
                     )
                  )
               )
               (branch "Null Reference (_a = null)"
                  (rule "false_right" (formula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                  (rule "false_right" (formula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                  (rule "times_zero_1" (formula "18") (term "0,0"))
                  (rule "add_zero_left" (formula "18") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                  (rule "leq_literals" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "inEqSimp_homoInEq1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "1,1,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0"))
                  (rule "add_zero_right" (formula "23") (term "0"))
                  (rule "leq_literals" (formula "23"))
                  (rule "closeFalse" (formula "23"))
               )
            )
            (branch "Null Reference (_a = null)"
               (rule "false_right" (formula "30"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
               (rule "false_right" (formula "30"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "24"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1,0,0"))
               (rule "add_literals" (formula "18") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
               (rule "polySimp_elimOne" (formula "24") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1"))
               (rule "polySimp_rightDist" (formula "20") (term "1"))
               (rule "mul_literals" (formula "20") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
               (rule "times_zero_1" (formula "18") (term "0,0"))
               (rule "add_zero_left" (formula "18") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "commute_or" (formula "1"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
               (rule "all_pull_out3" (formula "28") (term "0"))
               (rule "shift_paren_or" (formula "28") (term "0,0"))
               (rule "shift_paren_or" (formula "28") (term "0,0,0"))
               (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
               (rule "all_pull_out3" (formula "27") (term "0"))
               (rule "shift_paren_or" (formula "27") (term "0,0"))
               (rule "shift_paren_or" (formula "27") (term "0,0,0"))
               (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
               (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: a.length <= e2 TRUE"
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                  (rule "mul_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                  (rule "andLeft" (formula "25"))
                  (rule "inEqSimp_homoInEq1" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                  (rule "add_literals" (formula "25") (term "1,1,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0"))
                  (rule "add_zero_right" (formula "25") (term "0"))
                  (rule "leq_literals" (formula "25"))
                  (rule "closeFalse" (formula "25"))
               )
               (branch "CUT: a.length <= e2 FALSE"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_leqRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "closeFalse" (formula "19"))
               )
            )
         )
         (branch "if x_49 false"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "tryEmpty" (formula "29") (term "1"))
            (rule "blockEmptyLabel" (formula "29") (term "1"))
            (rule "blockEmpty" (formula "29") (term "1"))
            (rule "methodCallEmpty" (formula "29") (term "1"))
            (rule "emptyModality" (formula "29") (term "1"))
            (rule "andRight" (formula "29"))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "29"))
               (rule "closeTrue" (formula "29"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "29"))
               (rule "closeTrue" (formula "29"))
            )
         )
      )
      (branch "Null Reference (_a = null)"
         (rule "false_right" (formula "27"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
         (rule "false_right" (formula "27"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "20"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "23"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
         (rule "polySimp_elimOne" (formula "21") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "1"))
         (rule "polySimp_rightDist" (formula "17") (term "1"))
         (rule "mul_literals" (formula "17") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
         (rule "polySimp_elimOne" (formula "22") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0"))
         (rule "polySimp_elimOne" (formula "20") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
         (rule "polySimp_elimOne" (formula "23") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0"))
         (rule "polySimp_elimOne" (formula "18") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
         (rule "times_zero_1" (formula "16") (term "0,0"))
         (rule "add_zero_left" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
         (rule "mul_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
         (rule "leq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "19") (term "0,0"))
         (rule "mul_literals" (formula "19") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "19"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
         (rule "polySimp_elimOne" (formula "19") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "19"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
         (rule "mul_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
         (rule "polySimp_elimOne" (formula "24") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
         (rule "polySimp_rightDist" (formula "23") (term "0,0"))
         (rule "mul_literals" (formula "23") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "23"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
         (rule "polySimp_elimOne" (formula "23") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
         (rule "mul_literals" (formula "22") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
         (rule "polySimp_elimOne" (formula "22") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
         (rule "andLeft" (formula "21"))
         (rule "inEqSimp_homoInEq1" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "times_zero_1" (formula "21") (term "1,0"))
         (rule "add_zero_right" (formula "21") (term "0"))
         (rule "leq_literals" (formula "21"))
         (rule "closeFalse" (formula "21"))
      )
   )
   (branch "Null Reference (_a = null)"
      (rule "false_right" (formula "27"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
      (rule "false_right" (formula "27"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "15"))
      (rule "mul_literals" (formula "15") (term "1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "23"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "23") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "21"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
      (rule "mul_literals" (formula "15") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1"))
      (rule "polySimp_rightDist" (formula "17") (term "1"))
      (rule "mul_literals" (formula "17") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
      (rule "polySimp_elimOne" (formula "23") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "22"))
      (rule "polySimp_mulLiterals" (formula "22") (term "0"))
      (rule "polySimp_elimOne" (formula "22") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "21"))
      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
      (rule "polySimp_elimOne" (formula "21") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
      (rule "polySimp_elimOne" (formula "18") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
      (rule "polySimp_elimOne" (formula "20") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "17"))
      (rule "times_zero_1" (formula "16") (term "0,0"))
      (rule "add_zero_left" (formula "16") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
      (rule "mul_literals" (formula "16") (term "1"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "25") (term "0"))
      (rule "nnf_imp2or" (formula "26") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
      (rule "mul_literals" (formula "25") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "26") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
      (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
      (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
      (rule "mul_literals" (formula "26") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
      (rule "commute_or" (formula "1"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "25") (term "0,0"))
      (rule "commute_or_2" (formula "12") (term "0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
      (rule "arrayLengthNotNegative" (formula "15") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
      (rule "leq_literals" (formula "15") (term "0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "arrayLengthIsAShort" (formula "15") (term "0"))
      (rule "all_pull_out3" (formula "27") (term "0"))
      (rule "shift_paren_or" (formula "27") (term "0,0"))
      (rule "shift_paren_or" (formula "27") (term "0,0,0"))
      (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
      (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
      (rule "all_pull_out3" (formula "26") (term "0"))
      (rule "shift_paren_or" (formula "26") (term "0,0"))
      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
      (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
      (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
      (rule "cut_direct" (formula "1") (term "1"))
      (branch "CUT: a.length <= e2 TRUE"
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
         (rule "mul_literals" (formula "20") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "20"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0"))
         (rule "polySimp_elimOne" (formula "20") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
         (rule "mul_literals" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
         (rule "polySimp_rightDist" (formula "27") (term "0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
         (rule "polySimp_elimOne" (formula "27") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "polySimp_rightDist" (formula "26") (term "0,0"))
         (rule "mul_literals" (formula "26") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
         (rule "mul_literals" (formula "25") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
         (rule "polySimp_elimOne" (formula "25") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
         (rule "andLeft" (formula "24"))
         (rule "inEqSimp_homoInEq1" (formula "24"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0"))
         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
         (rule "add_literals" (formula "24") (term "1,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0"))
         (rule "add_zero_right" (formula "24") (term "0"))
         (rule "leq_literals" (formula "24"))
         (rule "closeFalse" (formula "24"))
      )
      (branch "CUT: a.length <= e2 FALSE"
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "28"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
         (rule "mul_literals" (formula "22") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "add_literals" (formula "22") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
         (rule "polySimp_elimOne" (formula "22") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "22"))
         (rule "qeq_literals" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "closeFalse" (formula "18"))
      )
   )
)
(branch "Precondition"
   (rule "andRight" (formula "26"))
   (branch "Case 1"
      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "26"))
   )
   (branch "Case 2"
      (rule "andRight" (formula "26"))
      (branch "Case 1"
         (rule "andRight" (formula "26"))
         (branch "Case 1"
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "5")))
            (rule "closeTrue" (formula "26"))
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "6")))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Case 2"
         (rule "orRight" (formula "26"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "2")))
         (rule "closeTrue" (formula "27"))
      )
   )
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "27"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "28") (term "1"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "25"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "arrayLengthNotNegative" (formula "14") (term "0"))
   (rule "arrayLengthIsAShort" (formula "15") (term "0"))
   (rule "ifSplit" (formula "30"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "30") (term "1"))
      (builtin "Block Contract" (formula "30") (newnames "anon_heap_0,exc_1,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
      (branch "Validity"
         (builtin "One Step Simplification" (formula "31"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "30")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "31") (term "1,0,0,1,0,1"))
         (rule "variableDeclarationAssign" (formula "31") (term "1"))
         (rule "variableDeclaration" (formula "31") (term "1"))
         (rule "assignment" (formula "31") (term "1"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "elementOfUnion" (formula "31") (term "0,0,0,0,1,0,1"))
         (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0,1,0,1"))
         (rule "elementOfUnion" (formula "31") (term "0,0,0,0,0,1,0,1"))
         (rule "elementOfSingleton" (formula "31") (term "0,0,0,0,0,0,1,0,1"))
         (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0,0,1,0,1"))
         (rule "ifUnfold" (formula "31") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_39"))
         (rule "compound_less_than_comparison_2" (formula "31") (term "1") (inst "#v1=x_41") (inst "#v0=x_40"))
         (rule "variableDeclarationAssign" (formula "31") (term "1"))
         (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_40"))
         (rule "assignment_array2" (formula "31"))
         (branch "Normal Execution (_a != null)"
            (builtin "One Step Simplification" (formula "31"))
            (rule "pullOutSelect" (formula "31") (term "0,1,0") (inst "selectSK=arr_26"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
            (rule "variableDeclarationAssign" (formula "32") (term "1"))
            (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_41"))
            (rule "assignment_array2" (formula "32"))
            (branch "Normal Execution (_a != null)"
               (builtin "One Step Simplification" (formula "32"))
               (rule "pullOutSelect" (formula "32") (term "0,1,0") (inst "selectSK=arr_27"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "4")))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "less_than_comparison_simple" (formula "32") (term "1"))
               (builtin "One Step Simplification" (formula "32"))
               (rule "ifSplit" (formula "32"))
               (branch "if x_39 true"
                  (builtin "One Step Simplification" (formula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "33") (term "1"))
                  (rule "variableDeclaration" (formula "33") (term "1") (newnames "t_2"))
                  (rule "assignment_array2" (formula "33"))
                  (branch "Normal Execution (_a != null)"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "replaceKnownSelect_taclet0012_0" (formula "33") (term "0,1,0"))
                     (rule "eval_order_array_access3" (formula "33") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "33") (term "1"))
                     (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_arr_7"))
                     (rule "assignment" (formula "33") (term "1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "variableDeclarationAssign" (formula "33") (term "1"))
                     (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_42"))
                     (rule "assignment" (formula "33") (term "1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "variableDeclarationAssign" (formula "33") (term "1"))
                     (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_43"))
                     (rule "assignment_array2" (formula "33"))
                     (branch "Normal Execution (_a != null)"
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "replaceKnownSelect_taclet00012_1" (formula "33") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00012_2" (formula "33") (term "0,1,0"))
                        (rule "assignment_to_primitive_array_component" (formula "33"))
                        (branch "Normal Execution (x_arr_7 != null)"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "assignment_to_primitive_array_component" (formula "33"))
                           (branch "Normal Execution (_a != null)"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_44"))
                              (rule "compound_less_than_comparison_2" (formula "33") (term "1") (inst "#v1=x_46") (inst "#v0=x_45"))
                              (rule "variableDeclarationAssign" (formula "33") (term "1"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_45"))
                              (rule "assignment" (formula "33") (term "1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "variableDeclarationAssign" (formula "33") (term "1"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_46"))
                              (rule "assignment_array2" (formula "33"))
                              (branch "Normal Execution (_a != null)"
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "33") (term "0,1,0") (inst "selectSK=arr_28"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_29"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_30"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "7")))
                                 (rule "elementOfUnion" (formula "1") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "less_than_comparison_simple" (formula "35") (term "1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "ifSplit" (formula "35"))
                                 (branch "if x_44 true"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eval_order_array_access3" (formula "36") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_8"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_47"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_48"))
                                    (rule "assignment_array2" (formula "36"))
                                    (branch "Normal Execution (_a != null)"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "replaceKnownSelect_taclet00000000012_3" (formula "36") (term "0,1,0"))
                                       (rule "assignment_to_primitive_array_component" (formula "36"))
                                       (branch "Normal Execution (x_arr_8 != null)"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "assignment_to_primitive_array_component" (formula "36"))
                                          (branch "Normal Execution (_a != null)"
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "tryEmpty" (formula "36") (term "1"))
                                             (rule "blockEmptyLabel" (formula "36") (term "1"))
                                             (rule "blockEmpty" (formula "36") (term "1"))
                                             (rule "methodCallEmpty" (formula "36") (term "1"))
                                             (rule "emptyModality" (formula "36") (term "1"))
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "closeTrue" (formula "36"))
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "allRight" (formula "36") (inst "sk=f_1"))
                                                (rule "allRight" (formula "36") (inst "sk=o_1"))
                                                (rule "orRight" (formula "36"))
                                                (rule "orRight" (formula "36"))
                                                (rule "orRight" (formula "36"))
                                                (rule "orRight" (formula "36"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "inEqSimp_ltToLeq" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                (rule "mul_literals" (formula "23") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                (rule "mul_literals" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "40") (term "3,0,0,0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=f_1_0"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_1_1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet1000000000000012_8" (formula "1") (term "2,0"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                          )
                                          (branch "Null Reference (_a = null)"
                                             (rule "false_right" (formula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                             (rule "false_right" (formula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                             (rule "mul_literals" (formula "20") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                       )
                                       (branch "Null Reference (x_arr_8 = null)"
                                          (rule "false_right" (formula "37"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_8 != null, but x_47 Out of Bounds!)"
                                          (rule "false_right" (formula "37"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "26"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "4") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "26"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                          (rule "times_zero_1" (formula "21") (term "0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "commute_or" (formula "1"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "30") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "e3 = e1 TRUE"
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "2"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0"))
                                             (rule "add_zero_right" (formula "22") (term "0"))
                                             (rule "leq_literals" (formula "22"))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "e3 = e1 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "commute_or_2" (formula "14") (term "0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                             (rule "all_pull_out3" (formula "29") (term "0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                             (rule "all_pull_out3" (formula "28") (term "0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "cut_direct" (formula "1") (term "1"))
                                             (branch "CUT: a.length <= e2 TRUE"
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "18") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                             (branch "CUT: a.length <= e2 FALSE"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Null Reference (_a = null)"
                                       (rule "false_right" (formula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                       (rule "false_right" (formula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "27"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "26"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "21"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "28"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "27"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                                 (branch "if x_44 false"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "tryEmpty" (formula "36") (term "1"))
                                    (rule "blockEmptyLabel" (formula "36") (term "1"))
                                    (rule "blockEmpty" (formula "36") (term "1"))
                                    (rule "methodCallEmpty" (formula "36") (term "1"))
                                    (rule "emptyModality" (formula "36") (term "1"))
                                    (rule "andRight" (formula "36"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "closeTrue" (formula "36"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "allRight" (formula "36") (inst "sk=f_2"))
                                       (rule "allRight" (formula "36") (inst "sk=o_2"))
                                       (rule "orRight" (formula "36"))
                                       (rule "orRight" (formula "36"))
                                       (rule "orRight" (formula "36"))
                                       (rule "orRight" (formula "36"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "inEqSimp_ltRight" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "26"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "25"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=f_2_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_2_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet1100000000012_8" (formula "1") (term "2,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeTrue" (formula "40"))
                                    )
                                 )
                              )
                              (branch "Null Reference (_a = null)"
                                 (rule "false_right" (formula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                 (rule "false_right" (formula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                 (rule "times_zero_1" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "26"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                           )
                           (branch "Null Reference (_a = null)"
                              (rule "false_right" (formula "34"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                              (rule "false_right" (formula "34"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                              (rule "leq_literals" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "29") (term "0"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                              (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "1"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "e3 = e1 TRUE"
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "23"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "e3 = e1 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "all_pull_out3" (formula "28") (term "0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "27") (term "0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                                 (rule "cut_direct" (formula "1") (term "1"))
                                 (branch "CUT: a.length <= e2 TRUE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0"))
                                    (rule "leq_literals" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch "CUT: a.length <= e2 FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "closeFalse" (formula "19"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_7 = null)"
                           (rule "false_right" (formula "34"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_7 != null, but x_42 Out of Bounds!)"
                           (rule "false_right" (formula "34"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                           (rule "times_zero_1" (formula "19") (term "0,0"))
                           (rule "add_zero_left" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "1"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "e3 = e1 TRUE"
                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1"))
                              (rule "mul_literals" (formula "23") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "leq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "e3 = e1 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "all_pull_out3" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "27") (term "0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "1") (term "1"))
                              (branch "CUT: a.length <= e3 TRUE"
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0"))
                                 (rule "add_zero_right" (formula "27") (term "0"))
                                 (rule "leq_literals" (formula "27"))
                                 (rule "closeFalse" (formula "27"))
                              )
                              (branch "CUT: a.length <= e3 FALSE"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_leqRight" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (_a = null)"
                        (rule "false_right" (formula "34"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                        (rule "false_right" (formula "34"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                        (rule "leq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "add_zero_left" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "1"))
                        (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                        (rule "commute_or" (formula "1"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "e3 = e1 TRUE"
                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                           (rule "andLeft" (formula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_zero_right" (formula "22") (term "0"))
                           (rule "leq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                        (branch "e3 = e1 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "all_pull_out3" (formula "28") (term "0"))
                           (rule "shift_paren_or" (formula "28") (term "0,0"))
                           (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "27") (term "0"))
                           (rule "shift_paren_or" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "1") (term "1"))
                           (branch "CUT: a.length <= e2 TRUE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                              (rule "mul_literals" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                              (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                              (rule "mul_literals" (formula "27") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                              (rule "mul_literals" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                              (rule "andLeft" (formula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "closeFalse" (formula "26"))
                           )
                           (branch "CUT: a.length <= e2 FALSE"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_leqRight" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                              (rule "mul_literals" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                              (rule "qeq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "closeFalse" (formula "23"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (_a = null)"
                     (rule "false_right" (formula "34"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                     (rule "false_right" (formula "34"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "24"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                     (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (rule "add_zero_left" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_imp2or" (formula "29") (term "0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "commute_or" (formula "1"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "28") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch "e3 = e1 TRUE"
                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "24"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                        (rule "andLeft" (formula "22"))
                        (rule "inEqSimp_homoInEq1" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,1,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0"))
                        (rule "add_zero_right" (formula "22") (term "0"))
                        (rule "leq_literals" (formula "22"))
                        (rule "closeFalse" (formula "22"))
                     )
                     (branch "e3 = e1 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "all_pull_out3" (formula "28") (term "0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "1") (term "1"))
                        (branch "CUT: a.length <= e3 TRUE"
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                           (rule "mul_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                           (rule "andLeft" (formula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "1,1,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0"))
                           (rule "add_zero_right" (formula "26") (term "0"))
                           (rule "leq_literals" (formula "26"))
                           (rule "closeFalse" (formula "26"))
                        )
                        (branch "CUT: a.length <= e3 FALSE"
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                     )
                  )
               )
               (branch "if x_39 false"
                  (builtin "One Step Simplification" (formula "33"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "tryEmpty" (formula "33") (term "1"))
                  (rule "blockEmptyLabel" (formula "33") (term "1"))
                  (rule "blockEmpty" (formula "33") (term "1"))
                  (rule "methodCallEmpty" (formula "33") (term "1"))
                  (rule "emptyModality" (formula "33") (term "1"))
                  (rule "andRight" (formula "33"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "closeTrue" (formula "33"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "closeTrue" (formula "33"))
                  )
               )
            )
            (branch "Null Reference (_a = null)"
               (rule "false_right" (formula "33"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
               (rule "false_right" (formula "33"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "inEqSimp_ltToLeq" (formula "25"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "24"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1,0,0"))
               (rule "add_literals" (formula "18") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
               (rule "polySimp_elimOne" (formula "25") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
               (rule "polySimp_elimOne" (formula "24") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20"))
               (rule "polySimp_mulComm0" (formula "20") (term "1"))
               (rule "polySimp_rightDist" (formula "20") (term "1"))
               (rule "mul_literals" (formula "20") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
               (rule "leq_literals" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_contradEq7" (formula "2") (term "1,0,0") (ifseqformula "22"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
               (rule "leq_literals" (formula "2") (term "0,1,0,0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
               (rule "times_zero_1" (formula "18") (term "0,0"))
               (rule "add_zero_left" (formula "18") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "27") (term "0"))
               (rule "nnf_imp2or" (formula "28") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
               (rule "mul_literals" (formula "27") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
               (rule "commute_or" (formula "1"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "e3 = e1 TRUE"
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "23"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "mul_literals" (formula "22") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                  (rule "andLeft" (formula "21"))
                  (rule "inEqSimp_homoInEq1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0"))
                  (rule "add_zero_right" (formula "21") (term "0"))
                  (rule "leq_literals" (formula "21"))
                  (rule "closeFalse" (formula "21"))
               )
               (branch "e3 = e1 FALSE"
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "all_pull_out3" (formula "27") (term "0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "all_pull_out3" (formula "26") (term "0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: a.length <= e2 TRUE"
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                     (rule "mul_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                     (rule "andLeft" (formula "24"))
                     (rule "inEqSimp_homoInEq1" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,1,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0"))
                     (rule "add_zero_right" (formula "24") (term "0"))
                     (rule "leq_literals" (formula "24"))
                     (rule "closeFalse" (formula "24"))
                  )
                  (branch "CUT: a.length <= e2 FALSE"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "mul_literals" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "closeFalse" (formula "22"))
                  )
               )
            )
         )
         (branch "Null Reference (_a = null)"
            (rule "false_right" (formula "32"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
            (rule "false_right" (formula "32"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "24"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "24"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
            (rule "polySimp_elimOne" (formula "24") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
            (rule "polySimp_elimOne" (formula "22") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "23"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
            (rule "polySimp_elimOne" (formula "23") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "polySimp_elimOne" (formula "21") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
            (rule "polySimp_elimOne" (formula "25") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
            (rule "leq_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
            (rule "times_zero_1" (formula "17") (term "0,0"))
            (rule "add_zero_left" (formula "17") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "26") (term "0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
            (rule "mul_literals" (formula "26") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
            (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "commute_or" (formula "1"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "26") (term "0,0"))
            (rule "commute_or_2" (formula "12") (term "0,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
            (rule "all_pull_out3" (formula "27") (term "0"))
            (rule "shift_paren_or" (formula "27") (term "0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0,0"))
            (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
            (rule "all_pull_out3" (formula "26") (term "0"))
            (rule "shift_paren_or" (formula "26") (term "0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0"))
            (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
            (rule "cut_direct" (formula "1") (term "1"))
            (branch "CUT: a.length <= e3 TRUE"
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
               (rule "mul_literals" (formula "16") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "21") (term "0,0"))
               (rule "mul_literals" (formula "21") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
               (rule "polySimp_rightDist" (formula "27") (term "0,0"))
               (rule "mul_literals" (formula "27") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
               (rule "polySimp_rightDist" (formula "26") (term "0,0"))
               (rule "mul_literals" (formula "26") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
               (rule "polySimp_elimOne" (formula "26") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
               (rule "andLeft" (formula "26"))
               (rule "inEqSimp_homoInEq1" (formula "26"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0"))
               (rule "add_literals" (formula "26") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
               (rule "add_literals" (formula "26") (term "1,1,0"))
               (rule "times_zero_1" (formula "26") (term "1,0"))
               (rule "add_zero_right" (formula "26") (term "0"))
               (rule "leq_literals" (formula "26"))
               (rule "closeFalse" (formula "26"))
            )
            (branch "CUT: a.length <= e3 FALSE"
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_leqRight" (formula "31"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
               (rule "polySimp_rightDist" (formula "23") (term "0,0"))
               (rule "mul_literals" (formula "23") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0"))
               (rule "add_literals" (formula "23") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "23"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
               (rule "polySimp_elimOne" (formula "23") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
               (rule "polySimp_rightDist" (formula "22") (term "0,0"))
               (rule "mul_literals" (formula "22") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "add_literals" (formula "22") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "18"))
               (rule "qeq_literals" (formula "22") (term "0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "closeFalse" (formula "22"))
            )
         )
      )
      (branch "Precondition"
         (rule "andRight" (formula "30"))
         (branch "Case 1"
            (builtin "One Step Simplification" (formula "30"))
            (rule "wellFormedAnon" (formula "30"))
            (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "30"))
            (branch "Case 1"
               (rule "andRight" (formula "30"))
               (branch "Case 1"
                  (rule "andRight" (formula "30"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "5")))
                     (rule "closeTrue" (formula "30"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "6")))
                     (rule "closeTrue" (formula "30"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "7")))
                  (rule "closeTrue" (formula "30"))
               )
            )
            (branch "Case 2"
               (rule "orRight" (formula "30"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "2")))
               (rule "closeTrue" (formula "31"))
            )
         )
      )
      (branch "Usage"
         (builtin "One Step Simplification" (formula "29"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "ifUnfold" (formula "32") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_1"))
         (rule "inequality_comparison_simple" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "replace_known_left" (formula "32") (term "0,0,1,0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "ifSplit" (formula "32"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "33"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "33"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "blockEmpty" (formula "32") (term "1"))
            (builtin "Block Contract" (formula "32") (newnames "anon_heap_1,exc_2,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
            (branch "Validity"
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "32")) (ifInst ""  (formula "2")))
               (builtin "One Step Simplification" (formula "33"))
               (rule "eqSymm" (formula "33") (term "1,0,0,1,0,1"))
               (rule "variableDeclarationAssign" (formula "33") (term "1"))
               (rule "variableDeclaration" (formula "33") (term "1"))
               (rule "assignment" (formula "33") (term "1"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "elementOfUnion" (formula "33") (term "0,0,0,0,1,0,1"))
               (rule "elementOfSingleton" (formula "33") (term "1,0,0,0,0,1,0,1"))
               (rule "elementOfUnion" (formula "33") (term "0,0,0,0,0,1,0,1"))
               (rule "elementOfSingleton" (formula "33") (term "1,0,0,0,0,0,1,0,1"))
               (rule "elementOfUnion" (formula "33") (term "0,0,0,0,0,0,1,0,1"))
               (rule "elementOfSingleton" (formula "33") (term "0,0,0,0,0,0,0,1,0,1"))
               (rule "elementOfSingleton" (formula "33") (term "1,0,0,0,0,0,0,1,0,1"))
               (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_24"))
               (rule "compound_less_than_comparison_2" (formula "33") (term "1") (inst "#v1=x_26") (inst "#v0=x_25"))
               (rule "variableDeclarationAssign" (formula "33") (term "1"))
               (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_25"))
               (rule "assignment_array2" (formula "33"))
               (branch "Normal Execution (_a != null)"
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "pullOutSelect" (formula "33") (term "0,1,0") (inst "selectSK=arr_16"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
                  (rule "variableDeclarationAssign" (formula "34") (term "1"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_26"))
                  (rule "assignment_array2" (formula "34"))
                  (branch "Normal Execution (_a != null)"
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "pullOutSelect" (formula "34") (term "0,1,0") (inst "selectSK=arr_17"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "4")))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "35") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_18"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "4")))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "less_than_comparison_simple" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "ifSplit" (formula "35"))
                     (branch "if x_24 true"
                        (builtin "One Step Simplification" (formula "36"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "t_1"))
                        (rule "assignment_array2" (formula "36"))
                        (branch "Normal Execution (_a != null)"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "replaceKnownSelect_taclet001212_0" (formula "36") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "36") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_4"))
                           (rule "assignment" (formula "36") (term "1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_27"))
                           (rule "assignment" (formula "36") (term "1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_28"))
                           (rule "assignment_array2" (formula "36"))
                           (branch "Normal Execution (_a != null)"
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "replaceKnownSelect_taclet0001212_1" (formula "36") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001212_2" (formula "36") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "36"))
                              (branch "Normal Execution (x_arr_4 != null)"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "assignment_to_primitive_array_component" (formula "36"))
                                 (branch "Normal Execution (_a != null)"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_29"))
                                    (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v1=x_31") (inst "#v0=x_30"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_30"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_31"))
                                    (rule "assignment_array2" (formula "36"))
                                    (branch "Normal Execution (_a != null)"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=arr_19"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_20"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_21"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "8")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "less_than_comparison_simple" (formula "38") (term "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "ifSplit" (formula "38"))
                                       (branch "if x_29 true"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eval_order_array_access3" (formula "39") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_5"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_32"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_33"))
                                          (rule "assignment_array2" (formula "39"))
                                          (branch "Normal Execution (_a != null)"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "replaceKnownSelect_taclet0000000001212_4" (formula "39") (term "0,1,0"))
                                             (rule "assignment_to_primitive_array_component" (formula "39"))
                                             (branch "Normal Execution (x_arr_5 != null)"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "assignment_to_primitive_array_component" (formula "39"))
                                                (branch "Normal Execution (_a != null)"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
                                                   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_34"))
                                                   (rule "compound_less_than_comparison_2" (formula "39") (term "1") (inst "#v1=x_36") (inst "#v0=x_35"))
                                                   (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_35"))
                                                   (rule "assignment" (formula "39") (term "1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_36"))
                                                   (rule "assignment_array2" (formula "39"))
                                                   (branch "Normal Execution (_a != null)"
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "pullOutSelect" (formula "39") (term "0,1,0") (inst "selectSK=arr_22"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_23"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_24"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_25"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "12")))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "less_than_comparison_simple" (formula "42") (term "1"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "ifSplit" (formula "42"))
                                                      (branch "if x_34 true"
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eval_order_array_access3" (formula "43") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                                         (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                                         (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_arr_6"))
                                                         (rule "assignment" (formula "43") (term "1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                                         (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_37"))
                                                         (rule "assignment" (formula "43") (term "1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                                         (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_38"))
                                                         (rule "assignment_array2" (formula "43"))
                                                         (branch "Normal Execution (_a != null)"
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "replaceKnownSelect_taclet000000000000001212_8" (formula "43") (term "0,1,0"))
                                                            (rule "assignment_to_primitive_array_component" (formula "43"))
                                                            (branch "Normal Execution (x_arr_6 != null)"
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "assignment_to_primitive_array_component" (formula "43"))
                                                               (branch "Normal Execution (_a != null)"
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "tryEmpty" (formula "43") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "43") (term "1"))
                                                                  (rule "blockEmpty" (formula "43") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "43") (term "1"))
                                                                  (rule "emptyModality" (formula "43") (term "1"))
                                                                  (rule "andRight" (formula "43"))
                                                                  (branch "Case 1"
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "closeTrue" (formula "43"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "allRight" (formula "43") (inst "sk=f_3"))
                                                                     (rule "allRight" (formula "43") (inst "sk=o_3"))
                                                                     (rule "orRight" (formula "43"))
                                                                     (rule "orRight" (formula "43"))
                                                                     (rule "orRight" (formula "43"))
                                                                     (rule "orRight" (formula "43"))
                                                                     (rule "orRight" (formula "43"))
                                                                     (rule "eqSymm" (formula "48"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                     (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                     (rule "mul_literals" (formula "28") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "48") (term "3,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "inEqSimp_contradEq7" (formula "9") (term "1,0,0") (ifseqformula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                                     (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "30"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "6"))
                                                                     (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "6"))
                                                                     (rule "applyEqReverse" (formula "47") (term "3,0,0,0,0") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "24"))
                                                                     (rule "leq_literals" (formula "22") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "pullOutSelect" (formula "45") (term "1") (inst "selectSK=f_3_0"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_3_1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet10000000000000000001212_15" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "closeTrue" (formula "47"))
                                                                  )
                                                               )
                                                               (branch "Null Reference (_a = null)"
                                                                  (rule "false_right" (formula "44"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                                                  (rule "false_right" (formula "44"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                                  (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "11") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                  (rule "times_zero_1" (formula "25") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "25"))
                                                                  (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "mul_literals" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "26") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                                  (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "8") (term "0,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_contradEq3" (formula "8") (term "0,0,0") (ifseqformula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "29"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "28") (term "0"))
                                                                  (rule "leq_literals" (formula "28"))
                                                                  (rule "closeFalse" (formula "28"))
                                                               )
                                                            )
                                                            (branch "Null Reference (x_arr_6 = null)"
                                                               (rule "false_right" (formula "44"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "Index Out of Bounds (x_arr_6 != null, but x_37 Out of Bounds!)"
                                                               (rule "false_right" (formula "44"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                               (rule "inEqSimp_ltToLeq" (formula "34"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "30"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "27"))
                                                               (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "32"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "33"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                               (rule "mul_literals" (formula "27") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                               (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "inEqSimp_contradEq7" (formula "9") (term "1,0,0") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                                                               (rule "leq_literals" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                               (rule "times_zero_1" (formula "25") (term "0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                               (rule "mul_literals" (formula "25") (term "1"))
                                                               (rule "nnf_imp2or" (formula "20") (term "0"))
                                                               (rule "nnf_imp2or" (formula "35") (term "0"))
                                                               (rule "nnf_imp2or" (formula "34") (term "0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "1,1,0,0"))
                                                               (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                               (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                                               (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0"))
                                                               (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                                               (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                               (rule "nnf_notAnd" (formula "35") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                               (rule "nnf_notAnd" (formula "34") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                                               (rule "commute_or" (formula "1"))
                                                               (rule "commute_or_2" (formula "20") (term "0"))
                                                               (rule "commute_or_2" (formula "34") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "6") (term "0"))
                                                               (branch "e4 = e2 TRUE"
                                                                  (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "5"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "5"))
                                                                  (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "5"))
                                                                  (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "5"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0"))
                                                                  (rule "leq_literals" (formula "26"))
                                                                  (rule "closeFalse" (formula "26"))
                                                               )
                                                               (branch "e4 = e2 FALSE"
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "e4 = e1 TRUE"
                                                                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "8"))
                                                                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "8"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                     (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                                     (rule "eqSymm" (formula "38"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                                     (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                                     (rule "mul_literals" (formula "27") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "27"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "23"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                     (rule "leq_literals" (formula "35") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "false_right" (formula "35"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                     (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                     (rule "add_literals" (formula "23") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                                     (rule "add_literals" (formula "23") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "23") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "23") (term "0"))
                                                                     (rule "leq_literals" (formula "23"))
                                                                     (rule "closeFalse" (formula "23"))
                                                                  )
                                                                  (branch "e4 = e1 FALSE"
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "38"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                                     (rule "hideAuxiliaryEq" (formula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "commute_or_2" (formula "16") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "16") (term "0"))
                                                                     (rule "commute_or_2" (formula "30") (term "0,0,1,0"))
                                                                     (rule "all_pull_out3" (formula "31") (term "0"))
                                                                     (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                                     (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0"))
                                                                     (rule "all_pull_out3" (formula "30") (term "0"))
                                                                     (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                                     (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                                     (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "e3 = e1 TRUE"
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "applyEq" (formula "36") (term "0,1,1,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                        (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                                        (rule "mul_literals" (formula "24") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                                        (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "25"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                                        (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                        (rule "leq_literals" (formula "35") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "false_right" (formula "35"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                                        (rule "andLeft" (formula "24"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                        (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                        (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                        (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0"))
                                                                        (rule "leq_literals" (formula "24"))
                                                                        (rule "closeFalse" (formula "24"))
                                                                     )
                                                                     (branch "e3 = e1 FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "cut_direct" (formula "1") (term "1"))
                                                                        (branch "CUT: a.length <= e2 TRUE"
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                           (rule "mul_literals" (formula "19") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                                                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                           (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                           (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                           (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                           (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                           (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "29"))
                                                                           (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "42") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "42") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "false_right" (formula "42"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                           (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                                           (rule "andLeft" (formula "27"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                           (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                           (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "27") (term "0"))
                                                                           (rule "leq_literals" (formula "27"))
                                                                           (rule "closeFalse" (formula "27"))
                                                                        )
                                                                        (branch "CUT: a.length <= e2 FALSE"
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_leqRight" (formula "36"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "25"))
                                                                           (rule "qeq_literals" (formula "21") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "closeFalse" (formula "21"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Null Reference (_a = null)"
                                                            (rule "false_right" (formula "44"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Case 3"
                                                            (rule "false_right" (formula "44"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "27"))
                                                            (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                            (rule "mul_literals" (formula "29") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                            (rule "mul_literals" (formula "27") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "11") (term "1,0,0") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "11") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                                                            (rule "leq_literals" (formula "23") (term "0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                            (rule "times_zero_1" (formula "25") (term "0,0"))
                                                            (rule "add_zero_left" (formula "25") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                            (rule "mul_literals" (formula "25") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "25"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "28"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "8") (term "0,0,0") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "inEqSimp_contradEq3" (formula "8") (term "0,0,0") (ifseqformula "32"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                            (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                            (rule "add_literals" (formula "31") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "28"))
                                                            (rule "andLeft" (formula "29"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0"))
                                                            (rule "add_zero_right" (formula "29") (term "0"))
                                                            (rule "leq_literals" (formula "29"))
                                                            (rule "closeFalse" (formula "29"))
                                                         )
                                                      )
                                                      (branch "if x_34 false"
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "tryEmpty" (formula "43") (term "1"))
                                                         (rule "blockEmptyLabel" (formula "43") (term "1"))
                                                         (rule "blockEmpty" (formula "43") (term "1"))
                                                         (rule "methodCallEmpty" (formula "43") (term "1"))
                                                         (rule "emptyModality" (formula "43") (term "1"))
                                                         (rule "andRight" (formula "43"))
                                                         (branch "Case 1"
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "closeTrue" (formula "43"))
                                                         )
                                                         (branch "Case 2"
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "allRight" (formula "43") (inst "sk=f_4"))
                                                            (rule "allRight" (formula "43") (inst "sk=o_4"))
                                                            (rule "orRight" (formula "43"))
                                                            (rule "orRight" (formula "43"))
                                                            (rule "orRight" (formula "43"))
                                                            (rule "orRight" (formula "43"))
                                                            (rule "orRight" (formula "43"))
                                                            (rule "eqSymm" (formula "48"))
                                                            (rule "inEqSimp_ltRight" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "26"))
                                                            (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                            (rule "mul_literals" (formula "26") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "47") (term "3,0,0,0") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "inEqSimp_contradEq7" (formula "8") (term "1,0,0") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "24"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "pullOutSelect" (formula "45") (term "1") (inst "selectSK=f_4_0"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_4_1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet11000000000000001212_15" (formula "1") (term "2,0"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeTrue" (formula "47"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (_a = null)"
                                                      (rule "false_right" (formula "40"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                                      (rule "false_right" (formula "40"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "28"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "28"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                      (rule "times_zero_1" (formula "22") (term "0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                      (rule "mul_literals" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "22"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                      (rule "mul_literals" (formula "21") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "25"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "6") (term "0,0,0") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "leq_literals" (formula "27"))
                                                      (rule "closeFalse" (formula "27"))
                                                   )
                                                )
                                                (branch "Null Reference (_a = null)"
                                                   (rule "false_right" (formula "40"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                                   (rule "false_right" (formula "40"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "inEqSimp_ltToLeq" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "28"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "28"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                   (rule "times_zero_1" (formula "22") (term "0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                   (rule "mul_literals" (formula "22") (term "1"))
                                                   (rule "nnf_imp2or" (formula "17") (term "0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0"))
                                                   (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "1"))
                                                   (rule "commute_or_2" (formula "17") (term "0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "e4 = e2 TRUE"
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0"))
                                                      (rule "leq_literals" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch "e4 = e2 FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "commute_or_2" (formula "16") (term "0,0"))
                                                      (rule "commute_or_2" (formula "16") (term "0"))
                                                      (rule "commute_or_2" (formula "30") (term "0,0,1,0"))
                                                      (rule "all_pull_out3" (formula "31") (term "0"))
                                                      (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0"))
                                                      (rule "all_pull_out3" (formula "30") (term "0"))
                                                      (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                      (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "e4 = e1 TRUE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "4"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "4"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "23"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0"))
                                                         (rule "leq_literals" (formula "35") (term "0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "false_right" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0"))
                                                         (rule "leq_literals" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "e4 = e1 FALSE"
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "36"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "cut_direct" (formula "1") (term "1"))
                                                         (branch "CUT: a.length <= e2 TRUE"
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "28"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0"))
                                                            (rule "qeq_literals" (formula "40") (term "0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "false_right" (formula "40"))
                                                            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                         (branch "CUT: a.length <= e2 FALSE"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_leqRight" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "20") (term "0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "closeFalse" (formula "20"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Null Reference (x_arr_5 = null)"
                                                (rule "false_right" (formula "40"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (x_arr_5 != null, but x_32 Out of Bounds!)"
                                                (rule "false_right" (formula "40"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                (rule "inEqSimp_ltToLeq" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "22") (term "0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "mul_literals" (formula "22") (term "1"))
                                                (rule "nnf_imp2or" (formula "32") (term "0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                                (rule "commute_or" (formula "1"))
                                                (rule "commute_or_2" (formula "17") (term "0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "e4 = e2 TRUE"
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "e4 = e2 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "commute_or_2" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "commute_or_2" (formula "30") (term "0,0,1,0"))
                                                   (rule "all_pull_out3" (formula "31") (term "0"))
                                                   (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                   (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0"))
                                                   (rule "all_pull_out3" (formula "30") (term "0"))
                                                   (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                   (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "e4 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "4"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                                      (rule "eqSymm" (formula "36"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "4"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "23"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0"))
                                                      (rule "leq_literals" (formula "35") (term "0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "false_right" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0"))
                                                      (rule "leq_literals" (formula "24"))
                                                      (rule "closeFalse" (formula "24"))
                                                   )
                                                   (branch "e4 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "cut_direct" (formula "1") (term "1"))
                                                      (branch "CUT: a.length <= e3 TRUE"
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0"))
                                                         (rule "leq_literals" (formula "27"))
                                                         (rule "closeFalse" (formula "27"))
                                                      )
                                                      (branch "CUT: a.length <= e3 FALSE"
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_leqRight" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                         (rule "qeq_literals" (formula "20") (term "0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "closeFalse" (formula "20"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Null Reference (_a = null)"
                                             (rule "false_right" (formula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                             (rule "false_right" (formula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "7") (term "1,0,0") (ifseqformula "29"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                             (rule "times_zero_1" (formula "22") (term "0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "commute_or" (formula "1"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "31") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "e4 = e2 TRUE"
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "24"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                (rule "mul_literals" (formula "24") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                             (branch "e4 = e2 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "commute_or_2" (formula "16") (term "0,0"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0,1,0"))
                                                (rule "all_pull_out3" (formula "31") (term "0"))
                                                (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0"))
                                                (rule "all_pull_out3" (formula "30") (term "0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "e4 = e1 TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "36"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "4"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "23"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                                (branch "e4 = e1 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "1") (term "1"))
                                                   (branch "CUT: a.length <= e2 TRUE"
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "28"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0"))
                                                      (rule "qeq_literals" (formula "40") (term "0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "leq_literals" (formula "27"))
                                                      (rule "closeFalse" (formula "27"))
                                                   )
                                                   (branch "CUT: a.length <= e2 FALSE"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "if x_29 false"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "tryEmpty" (formula "39") (term "1"))
                                          (rule "blockEmptyLabel" (formula "39") (term "1"))
                                          (rule "blockEmpty" (formula "39") (term "1"))
                                          (rule "methodCallEmpty" (formula "39") (term "1"))
                                          (rule "emptyModality" (formula "39") (term "1"))
                                          (rule "andRight" (formula "39"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "allRight" (formula "39") (inst "sk=f_5"))
                                             (rule "allRight" (formula "39") (inst "sk=o_5"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "eqSymm" (formula "44"))
                                             (rule "inEqSimp_ltRight" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "3") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=f_5_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_5_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet110000000001212_9" (formula "1") (term "2,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "closeTrue" (formula "44"))
                                          )
                                       )
                                    )
                                    (branch "Null Reference (_a = null)"
                                       (rule "false_right" (formula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                       (rule "false_right" (formula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "mul_literals" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "26"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "nnf_imp2or" (formula "29") (term "0"))
                                       (rule "nnf_imp2or" (formula "30") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "e4 = e1 | e4 = e2 TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                          (rule "all_pull_out3" (formula "29") (term "0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "28") (term "0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "cut_direct" (formula "3") (term "0"))
                                          (branch "CUT: e4 = e1 TRUE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0"))
                                             (rule "add_zero_right" (formula "22") (term "0"))
                                             (rule "leq_literals" (formula "22"))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "CUT: e4 = e1 FALSE"
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                       )
                                       (branch "e4 = e1 | e4 = e2 FALSE"
                                          (rule "orRight" (formula "36"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                                          (rule "all_pull_out3" (formula "28") (term "0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "27") (term "0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "cut_direct" (formula "1") (term "1"))
                                          (branch "CUT: a.length <= e2 TRUE"
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0"))
                                             (rule "leq_literals" (formula "25"))
                                             (rule "closeFalse" (formula "25"))
                                          )
                                          (branch "CUT: a.length <= e2 FALSE"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_leqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (_a = null)"
                                    (rule "false_right" (formula "37"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                                    (rule "false_right" (formula "37"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                    (rule "times_zero_1" (formula "20") (term "0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "mul_literals" (formula "20") (term "1"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "e4 = e1 | e4 = e2 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "29") (term "0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                       (rule "all_pull_out3" (formula "28") (term "0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "3") (term "1"))
                                       (branch "CUT: e4 = e2 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                       (branch "CUT: e4 = e2 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch "e4 = e1 | e4 = e2 FALSE"
                                       (rule "orRight" (formula "36"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "28") (term "0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                       (rule "all_pull_out3" (formula "27") (term "0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: a.length <= e3 TRUE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                       (branch "CUT: a.length <= e3 FALSE"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (x_arr_4 = null)"
                                 (rule "false_right" (formula "37"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_4 != null, but x_27 Out of Bounds!)"
                                 (rule "false_right" (formula "37"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "26"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "e4 = e1 | e4 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                    (rule "all_pull_out3" (formula "29") (term "0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "28") (term "0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "cut_direct" (formula "3") (term "0"))
                                    (branch "CUT: e4 = e1 TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0"))
                                       (rule "leq_literals" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                    (branch "CUT: e4 = e1 FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0"))
                                       (rule "leq_literals" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                 )
                                 (branch "e4 = e1 | e4 = e2 FALSE"
                                    (rule "orRight" (formula "36"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                                    (rule "all_pull_out3" (formula "28") (term "0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "27") (term "0"))
                                    (rule "shift_paren_or" (formula "27") (term "0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "cut_direct" (formula "1") (term "1"))
                                    (branch "CUT: a.length <= e4 TRUE"
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                    (branch "CUT: a.length <= e4 FALSE"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_leqRight" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (_a = null)"
                              (rule "false_right" (formula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                              (rule "false_right" (formula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "inEqSimp_ltToLeq" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "20"))
                              (rule "mul_literals" (formula "20") (term "1,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "mul_literals" (formula "20") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "20") (term "0,0"))
                              (rule "add_zero_left" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "mul_literals" (formula "20") (term "1"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_imp2or" (formula "29") (term "0"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                              (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "1"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "commute_or_2" (formula "29") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0,0"))
                              (rule "commute_or_2" (formula "15") (term "0"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "e4 = e1 | e4 = e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                 (rule "all_pull_out3" (formula "29") (term "0"))
                                 (rule "shift_paren_or" (formula "29") (term "0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "28") (term "0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: e4 = e1 TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0"))
                                    (rule "leq_literals" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                                 (branch "CUT: e4 = e1 FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "22"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0"))
                                    (rule "leq_literals" (formula "34") (term "0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0"))
                                    (rule "leq_literals" (formula "23"))
                                    (rule "closeFalse" (formula "23"))
                                 )
                              )
                              (branch "e4 = e1 | e4 = e2 FALSE"
                                 (rule "orRight" (formula "36"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                                 (rule "all_pull_out3" (formula "28") (term "0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "27") (term "0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                                 (rule "cut_direct" (formula "1") (term "1"))
                                 (branch "CUT: a.length <= e3 TRUE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "closeFalse" (formula "27"))
                                 )
                                 (branch "CUT: a.length <= e3 FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_leqRight" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "closeFalse" (formula "19"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (_a = null)"
                           (rule "false_right" (formula "37"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a != null, but _e4 Out of Bounds!)"
                           (rule "false_right" (formula "37"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1"))
                           (rule "mul_literals" (formula "22") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "26"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "20"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                           (rule "times_zero_1" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "1"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "e4 = e1 | e4 = e2 TRUE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                              (rule "all_pull_out3" (formula "29") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "3") (term "1"))
                              (branch "CUT: e4 = e2 TRUE"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                              (branch "CUT: e4 = e2 FALSE"
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "22"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "false_right" (formula "34"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0"))
                                 (rule "leq_literals" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                           (branch "e4 = e1 | e4 = e2 FALSE"
                              (rule "orRight" (formula "36"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                              (rule "all_pull_out3" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "27") (term "0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "1") (term "1"))
                              (branch "CUT: a.length <= e4 TRUE"
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                              (branch "CUT: a.length <= e4 FALSE"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_leqRight" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                           )
                        )
                     )
                     (branch "if x_24 false"
                        (builtin "One Step Simplification" (formula "36"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "tryEmpty" (formula "36") (term "1"))
                        (rule "blockEmptyLabel" (formula "36") (term "1"))
                        (rule "blockEmpty" (formula "36") (term "1"))
                        (rule "methodCallEmpty" (formula "36") (term "1"))
                        (rule "emptyModality" (formula "36") (term "1"))
                        (rule "andRight" (formula "36"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "closeTrue" (formula "36"))
                        )
                     )
                  )
                  (branch "Null Reference (_a = null)"
                     (rule "false_right" (formula "35"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                     (rule "false_right" (formula "35"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1"))
                     (rule "mul_literals" (formula "20") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_contradEq7" (formula "2") (term "1,0,0") (ifseqformula "23"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                     (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (rule "add_zero_left" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_31"))
                     (rule "simplifySelectOfAnon" (formula "2"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "5")))
                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                     (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "29") (term "0"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                     (rule "commute_or" (formula "1"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "28") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "e4 = e1 | e4 = e2 TRUE"
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "all_pull_out3" (formula "28") (term "0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "2") (term "0"))
                        (branch "CUT: e4 = e1 TRUE"
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                           (rule "andLeft" (formula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0"))
                           (rule "add_zero_right" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "closeFalse" (formula "21"))
                        )
                        (branch "CUT: e4 = e1 FALSE"
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "21"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "false_right" (formula "33"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                           (rule "andLeft" (formula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_zero_right" (formula "22") (term "0"))
                           (rule "leq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                     (branch "e4 = e1 | e4 = e2 FALSE"
                        (rule "orRight" (formula "35"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "all_pull_out3" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "26") (term "0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "1") (term "1"))
                        (branch "CUT: a.length <= e3 TRUE"
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                           (rule "mul_literals" (formula "26") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "1,1,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0"))
                           (rule "add_zero_right" (formula "26") (term "0"))
                           (rule "leq_literals" (formula "26"))
                           (rule "closeFalse" (formula "26"))
                        )
                        (branch "CUT: a.length <= e3 FALSE"
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                  )
               )
               (branch "Null Reference (_a = null)"
                  (rule "false_right" (formula "34"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (_a != null, but _e4 Out of Bounds!)"
                  (rule "false_right" (formula "34"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                  (rule "mul_literals" (formula "19") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                  (rule "leq_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                  (rule "times_zero_1" (formula "17") (term "0,0"))
                  (rule "add_zero_left" (formula "17") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "nnf_imp2or" (formula "26") (term "0"))
                  (rule "nnf_imp2or" (formula "27") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                  (rule "commute_or" (formula "1"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "26") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                  (rule "all_pull_out3" (formula "27") (term "0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "all_pull_out3" (formula "26") (term "0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "cut_direct" (formula "1") (term "1"))
                  (branch "CUT: a.length <= e4 TRUE"
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                     (rule "mul_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0"))
                     (rule "leq_literals" (formula "27"))
                     (rule "closeFalse" (formula "27"))
                  )
                  (branch "CUT: a.length <= e4 FALSE"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_leqRight" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                     (rule "mul_literals" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "closeFalse" (formula "22"))
                  )
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "32"))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "wellFormedAnon" (formula "32"))
                  (rule "wellFormedAnon" (formula "32") (term "0"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")) (ifInst ""  (formula "28")))
                  (rule "closeTrue" (formula "32"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "32"))
                  (branch "Case 1"
                     (rule "andRight" (formula "32"))
                     (branch "Case 1"
                        (rule "andRight" (formula "32"))
                        (branch "Case 1"
                           (rule "andRight" (formula "32"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "5")))
                              (rule "closeTrue" (formula "32"))
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "6")))
                              (rule "closeTrue" (formula "32"))
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "7")))
                           (rule "closeTrue" (formula "32"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "8")))
                        (rule "closeTrue" (formula "32"))
                     )
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "32"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "2")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
            )
            (branch "Usage"
               (builtin "One Step Simplification" (formula "33"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "true_left" (formula "33"))
               (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_2"))
               (rule "inequality_comparison_simple" (formula "34") (term "1"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "ifSplit" (formula "34"))
               (branch "if x_2 true"
                  (builtin "One Step Simplification" (formula "35"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_2 false"
                  (builtin "One Step Simplification" (formula "35"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "34") (term "1"))
                  (builtin "Block Contract" (formula "34") (newnames "anon_heap_2,exc_3,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                  (branch "Validity"
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")) (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
                     (rule "eqSymm" (formula "35") (term "1,0,0,1,0,1"))
                     (rule "variableDeclarationAssign" (formula "35") (term "1"))
                     (rule "variableDeclaration" (formula "35") (term "1"))
                     (rule "assignment" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "elementOfUnion" (formula "35") (term "0,0,0,0,1,0,1"))
                     (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,1,0,1"))
                     (rule "elementOfUnion" (formula "35") (term "0,0,0,0,0,1,0,1"))
                     (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,0,1,0,1"))
                     (rule "elementOfUnion" (formula "35") (term "0,0,0,0,0,0,1,0,1"))
                     (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,0,0,1,0,1"))
                     (rule "elementOfUnion" (formula "35") (term "0,0,0,0,0,0,0,1,0,1"))
                     (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,0,0,0,1,0,1"))
                     (rule "elementOfSingleton" (formula "35") (term "0,0,0,0,0,0,0,0,1,0,1"))
                     (rule "ifUnfold" (formula "35") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_4"))
                     (rule "compound_less_than_comparison_2" (formula "35") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
                     (rule "variableDeclarationAssign" (formula "35") (term "1"))
                     (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_5"))
                     (rule "assignment_array2" (formula "35"))
                     (branch "Normal Execution (_a != null)"
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "pullOutSelect" (formula "35") (term "0,1,0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "3")))
                        (rule "variableDeclarationAssign" (formula "36") (term "1"))
                        (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_6"))
                        (rule "assignment_array2" (formula "36"))
                        (branch "Normal Execution (_a != null)"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "38") (term "1"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "ifSplit" (formula "38"))
                           (branch "if x_4 true"
                              (builtin "One Step Simplification" (formula "39"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "39") (term "1"))
                              (rule "variableDeclaration" (formula "39") (term "1") (newnames "t"))
                              (rule "assignment_array2" (formula "39"))
                              (branch "Normal Execution (_a != null)"
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replaceKnownSelect_taclet00121212_0" (formula "39") (term "0,1,0"))
                                 (rule "eval_order_array_access3" (formula "39") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                 (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr"))
                                 (rule "assignment" (formula "39") (term "1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                 (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_7"))
                                 (rule "assignment" (formula "39") (term "1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                 (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_8"))
                                 (rule "assignment_array2" (formula "39"))
                                 (branch "Normal Execution (_a != null)"
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "replaceKnownSelect_taclet000121212_1" (formula "39") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000121212_2" (formula "39") (term "0,1,0"))
                                    (rule "assignment_to_primitive_array_component" (formula "39"))
                                    (branch "Normal Execution (x_arr != null)"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "assignment_to_primitive_array_component" (formula "39"))
                                       (branch "Normal Execution (_a != null)"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_9"))
                                          (rule "compound_less_than_comparison_2" (formula "39") (term "1") (inst "#v1=x_11") (inst "#v0=x_10"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_10"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_11"))
                                          (rule "assignment_array2" (formula "39"))
                                          (branch "Normal Execution (_a != null)"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "0,1,0") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "less_than_comparison_simple" (formula "41") (term "1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "ifSplit" (formula "41"))
                                             (branch "if x_9 true"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eval_order_array_access3" (formula "42") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                                (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_arr_1"))
                                                (rule "assignment" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_12"))
                                                (rule "assignment" (formula "42") (term "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_13"))
                                                (rule "assignment_array2" (formula "42"))
                                                (branch "Normal Execution (_a != null)"
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "replaceKnownSelect_taclet000000000121212_5" (formula "42") (term "0,1,0"))
                                                   (rule "assignment_to_primitive_array_component" (formula "42"))
                                                   (branch "Normal Execution (x_arr_1 != null)"
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "assignment_to_primitive_array_component" (formula "42"))
                                                      (branch "Normal Execution (_a != null)"
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "ifUnfold" (formula "42") (term "1") (inst "#boolv=x"))
                                                         (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_14"))
                                                         (rule "compound_less_than_comparison_2" (formula "42") (term "1") (inst "#v1=x_16") (inst "#v0=x_15"))
                                                         (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                         (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_15"))
                                                         (rule "assignment" (formula "42") (term "1"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                                         (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_16"))
                                                         (rule "assignment_array2" (formula "42"))
                                                         (branch "Normal Execution (_a != null)"
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "pullOutSelect" (formula "42") (term "0,1,0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_9"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "13")))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "less_than_comparison_simple" (formula "45") (term "1"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "ifSplit" (formula "45"))
                                                            (branch "if x_14 true"
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eval_order_array_access3" (formula "46") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                                               (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_2"))
                                                               (rule "assignment" (formula "46") (term "1"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_17"))
                                                               (rule "assignment" (formula "46") (term "1"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_18"))
                                                               (rule "assignment_array2" (formula "46"))
                                                               (branch "Normal Execution (_a != null)"
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "replaceKnownSelect_taclet00000000000000121212_9" (formula "46") (term "0,1,0"))
                                                                  (rule "assignment_to_primitive_array_component" (formula "46"))
                                                                  (branch "Normal Execution (x_arr_2 != null)"
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "assignment_to_primitive_array_component" (formula "46"))
                                                                     (branch "Normal Execution (_a != null)"
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "ifUnfold" (formula "46") (term "1") (inst "#boolv=x"))
                                                                        (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_19"))
                                                                        (rule "compound_less_than_comparison_2" (formula "46") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
                                                                        (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                                        (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_20"))
                                                                        (rule "assignment" (formula "46") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                                        (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_21"))
                                                                        (rule "assignment_array2" (formula "46"))
                                                                        (branch "Normal Execution (_a != null)"
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "pullOutSelect" (formula "46") (term "0,1,0") (inst "selectSK=arr_11"))
                                                                           (rule "simplifySelectOfStore" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "castDel" (formula "1") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_12"))
                                                                           (rule "simplifySelectOfStore" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "castDel" (formula "1") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_13"))
                                                                           (rule "simplifySelectOfStore" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "castDel" (formula "1") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_14"))
                                                                           (rule "simplifySelectOfStore" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "castDel" (formula "1") (term "1,0"))
                                                                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_15"))
                                                                           (rule "simplifySelectOfAnon" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "18")))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                                                                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "less_than_comparison_simple" (formula "50") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                           (rule "ifSplit" (formula "50"))
                                                                           (branch "if x_19 true"
                                                                              (builtin "One Step Simplification" (formula "51"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eval_order_array_access3" (formula "51") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                                                              (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                                                              (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_arr_3"))
                                                                              (rule "assignment" (formula "51") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "51"))
                                                                              (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                                                              (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_22"))
                                                                              (rule "assignment" (formula "51") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "51"))
                                                                              (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                                                              (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_23"))
                                                                              (rule "assignment_array2" (formula "51"))
                                                                              (branch "Normal Execution (_a != null)"
                                                                                 (builtin "One Step Simplification" (formula "51"))
                                                                                 (rule "replaceKnownSelect_taclet0000000000000000000121212_14" (formula "51") (term "0,1,0"))
                                                                                 (rule "assignment_to_primitive_array_component" (formula "51"))
                                                                                 (branch "Normal Execution (x_arr_3 != null)"
                                                                                    (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "assignment_to_primitive_array_component" (formula "51"))
                                                                                    (branch "Normal Execution (_a != null)"
                                                                                       (builtin "One Step Simplification" (formula "51"))
                                                                                       (rule "tryEmpty" (formula "51") (term "1"))
                                                                                       (rule "blockEmptyLabel" (formula "51") (term "1"))
                                                                                       (rule "blockEmpty" (formula "51") (term "1"))
                                                                                       (rule "methodCallEmpty" (formula "51") (term "1"))
                                                                                       (rule "emptyModality" (formula "51") (term "1"))
                                                                                       (rule "andRight" (formula "51"))
                                                                                       (branch "Case 1"
                                                                                          (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "closeTrue" (formula "51"))
                                                                                       )
                                                                                       (branch "Case 2"
                                                                                          (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "allRight" (formula "51") (inst "sk=f_6"))
                                                                                          (rule "allRight" (formula "51") (inst "sk=o_6"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "orRight" (formula "51"))
                                                                                          (rule "eqSymm" (formula "57"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "38"))
                                                                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "37"))
                                                                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "13"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                                                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                          (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                                          (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                                          (rule "add_literals" (formula "32") (term "0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                          (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                                                          (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                          (rule "mul_literals" (formula "32") (term "1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "16") (term "1,0,0") (ifseqformula "39"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                                                          (rule "leq_literals" (formula "16") (term "0,1,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "38"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "12"))
                                                                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "57") (term "3,0,0,0,0,0") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "12"))
                                                                                          (rule "hideAuxiliaryEq" (formula "12"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "35"))
                                                                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "5"))
                                                                                          (rule "applyEqReverse" (formula "56") (term "3,0,0,0") (ifseqformula "5"))
                                                                                          (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "5"))
                                                                                          (rule "hideAuxiliaryEq" (formula "5"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "8") (term "0,0") (ifseqformula "35"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "8"))
                                                                                          (rule "applyEqReverse" (formula "55") (term "3,0,0,0,0") (ifseqformula "8"))
                                                                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                                                                          (rule "hideAuxiliaryEq" (formula "8"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "29"))
                                                                                          (rule "leq_literals" (formula "27") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "true_left" (formula "27"))
                                                                                          (rule "pullOutSelect" (formula "53") (term "1") (inst "selectSK=f_6_0"))
                                                                                          (rule "simplifySelectOfAnon" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "50"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_6_1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "52"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "replaceKnownSelect_taclet100000000000000000000000121212_23" (formula "1") (term "2,0"))
                                                                                          (rule "castDel" (formula "1") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "53"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                                                          (builtin "One Step Simplification" (formula "55"))
                                                                                          (rule "closeTrue" (formula "55"))
                                                                                       )
                                                                                    )
                                                                                    (branch "Null Reference (_a = null)"
                                                                                       (rule "false_right" (formula "52"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                                                                       (rule "false_right" (formula "52"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "33"))
                                                                                       (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                                                       (rule "add_literals" (formula "33") (term "0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "40"))
                                                                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                                                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "41"))
                                                                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                                                       (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                                                       (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                                       (rule "mul_literals" (formula "33") (term "1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                                                       (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                                                       (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                                                                       (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "37"))
                                                                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "6"))
                                                                                       (rule "hideAuxiliaryEq" (formula "6"))
                                                                                       (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "37"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "9"))
                                                                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "9"))
                                                                                       (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "9"))
                                                                                       (rule "hideAuxiliaryEq" (formula "9"))
                                                                                       (rule "inEqSimp_contradEq7" (formula "15") (term "1,0,0") (ifseqformula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0"))
                                                                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                                                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                                                       (rule "leq_literals" (formula "15") (term "0,1,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "37"))
                                                                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "11"))
                                                                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "11"))
                                                                                       (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "11"))
                                                                                       (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "11"))
                                                                                       (rule "hideAuxiliaryEq" (formula "11"))
                                                                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                                                                       (rule "leq_literals" (formula "28") (term "0"))
                                                                                       (builtin "One Step Simplification" (formula "28"))
                                                                                       (rule "true_left" (formula "28"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                                                       (rule "times_zero_1" (formula "30") (term "0,0"))
                                                                                       (rule "add_zero_left" (formula "30") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                       (rule "mul_literals" (formula "30") (term "1"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "30"))
                                                                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                                                       (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                                                                                       (rule "mul_literals" (formula "29") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                                       (rule "mul_literals" (formula "29") (term "1"))
                                                                                       (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "29"))
                                                                                       (rule "leq_literals" (formula "31") (term "0"))
                                                                                       (builtin "One Step Simplification" (formula "31"))
                                                                                       (rule "true_left" (formula "31"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "33"))
                                                                                       (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                                       (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "39"))
                                                                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                       (rule "hideAuxiliaryEq" (formula "3"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "13") (term "0,0,0,0") (ifseqformula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "13") (term "0,0,0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "13"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "12") (term "0,0,0,0") (ifseqformula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "12") (term "0,0,0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "12"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "11") (term "0,0,0") (ifseqformula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "11"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                                                       (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "37"))
                                                                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                       (rule "hideAuxiliaryEq" (formula "3"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                                                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "35"))
                                                                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                                                       (rule "hideAuxiliaryEq" (formula "3"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                                                       (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                                                       (rule "add_literals" (formula "33") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "33"))
                                                                                       (rule "andLeft" (formula "32"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                                                       (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "32") (term "0"))
                                                                                       (rule "leq_literals" (formula "32"))
                                                                                       (rule "closeFalse" (formula "32"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Null Reference (x_arr_3 = null)"
                                                                                    (rule "false_right" (formula "52"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch "Index Out of Bounds (x_arr_3 != null, but x_22 Out of Bounds!)"
                                                                                    (rule "false_right" (formula "52"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                                                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "40"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "41"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "33"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "38"))
                                                                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                                                    (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                                    (rule "mul_literals" (formula "33") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "13"))
                                                                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "13"))
                                                                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "13"))
                                                                                    (rule "hideAuxiliaryEq" (formula "13"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "16") (term "1,0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                                                    (rule "leq_literals" (formula "16") (term "0,1,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "37"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "10"))
                                                                                    (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "10"))
                                                                                    (rule "hideAuxiliaryEq" (formula "10"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "35"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "6"))
                                                                                    (rule "hideAuxiliaryEq" (formula "6"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                                                                    (rule "leq_literals" (formula "28") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "true_left" (formula "28"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                                                    (rule "times_zero_1" (formula "30") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "30") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                    (rule "mul_literals" (formula "30") (term "1"))
                                                                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                                                                    (rule "nnf_imp2or" (formula "40") (term "0,1,0"))
                                                                                    (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0"))
                                                                                    (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "commute_or" (formula "1"))
                                                                                    (rule "commute_or_2" (formula "25") (term "0"))
                                                                                    (rule "commute_or_2" (formula "39") (term "0,0"))
                                                                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                    (branch "e5 = e1 TRUE"
                                                                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                                       (rule "hideAuxiliaryEq" (formula "4"))
                                                                                       (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "3"))
                                                                                       (builtin "One Step Simplification" (formula "13"))
                                                                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                                                                       (rule "hideAuxiliaryEq" (formula "13"))
                                                                                       (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                                                                       (builtin "One Step Simplification" (formula "12"))
                                                                                       (rule "hideAuxiliaryEq" (formula "12"))
                                                                                       (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "3"))
                                                                                       (builtin "One Step Simplification" (formula "12"))
                                                                                       (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "12"))
                                                                                       (rule "applyEqReverse" (formula "11") (term "1,1") (ifseqformula "12"))
                                                                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "12"))
                                                                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "12"))
                                                                                       (rule "hideAuxiliaryEq" (formula "12"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                                       (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "eqSymm" (formula "10") (term "0,0"))
                                                                                       (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "9") (term "0,2,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "11") (term "0,2,1,0") (ifseqformula "3"))
                                                                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                       (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "3"))
                                                                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                                                       (rule "eqSymm" (formula "7") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                                                                       (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                                                       (rule "mul_literals" (formula "33") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                                       (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "30"))
                                                                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                                       (rule "hideAuxiliaryEq" (formula "7"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "32"))
                                                                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "4"))
                                                                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                                       (rule "hideAuxiliaryEq" (formula "4"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "8") (term "0,0") (ifseqformula "30"))
                                                                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "8"))
                                                                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "8"))
                                                                                       (rule "hideAuxiliaryEq" (formula "8"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "29"))
                                                                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "4"))
                                                                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                                       (rule "hideAuxiliaryEq" (formula "4"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                                                       (rule "andLeft" (formula "26"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                                       (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "26") (term "0"))
                                                                                       (rule "leq_literals" (formula "26"))
                                                                                       (rule "closeFalse" (formula "26"))
                                                                                    )
                                                                                    (branch "e5 = e1 FALSE"
                                                                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                       (rule "hideAuxiliaryEq" (formula "3"))
                                                                                       (rule "replace_known_right" (formula "11") (term "0,0,0") (ifseqformula "47"))
                                                                                       (builtin "One Step Simplification" (formula "11"))
                                                                                       (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "47"))
                                                                                       (builtin "One Step Simplification" (formula "13"))
                                                                                       (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "47"))
                                                                                       (builtin "One Step Simplification" (formula "12"))
                                                                                       (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                                       (branch "e5 = e2 TRUE"
                                                                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                                          (rule "hideAuxiliaryEq" (formula "7"))
                                                                                          (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                                                                          (builtin "One Step Simplification" (formula "12"))
                                                                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                                                          (rule "hideAuxiliaryEq" (formula "12"))
                                                                                          (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
                                                                                          (builtin "One Step Simplification" (formula "12"))
                                                                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "12"))
                                                                                          (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "12"))
                                                                                          (rule "hideAuxiliaryEq" (formula "12"))
                                                                                          (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "6"))
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (rule "hideAuxiliaryEq" (formula "11"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                          (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                                                                          (rule "eqSymm" (formula "9") (term "0,0"))
                                                                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "6"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                                          (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                                          (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "8") (term "0,2,1,0") (ifseqformula "6"))
                                                                                          (rule "applyEq" (formula "10") (term "0,2,1,0") (ifseqformula "6"))
                                                                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "32") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "30"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                                                                          (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "9"))
                                                                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "9"))
                                                                                          (rule "hideAuxiliaryEq" (formula "9"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "28"))
                                                                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                                                                          (rule "leq_literals" (formula "42") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "false_right" (formula "42"))
                                                                                          (rule "inEqSimp_contradEq3" (formula "7") (term "0,0") (ifseqformula "31"))
                                                                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                                          (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                                          (rule "hideAuxiliaryEq" (formula "7"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                          (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                                                          (rule "andLeft" (formula "27"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "27") (term "0"))
                                                                                          (rule "leq_literals" (formula "27"))
                                                                                          (rule "closeFalse" (formula "27"))
                                                                                       )
                                                                                       (branch "e5 = e2 FALSE"
                                                                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                                          (rule "hideAuxiliaryEq" (formula "6"))
                                                                                          (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "46"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                                          (rule "hideAuxiliaryEq" (formula "10"))
                                                                                          (rule "replace_known_right" (formula "11") (term "0,0,0") (ifseqformula "45"))
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "45"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (rule "ifthenelse_split" (formula "8") (term "0"))
                                                                                          (branch "e5 = e3 TRUE"
                                                                                             (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "9"))
                                                                                             (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "hideAuxiliaryEq" (formula "8"))
                                                                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                                                                                             (builtin "One Step Simplification" (formula "10"))
                                                                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "10"))
                                                                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "10"))
                                                                                             (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "10"))
                                                                                             (rule "hideAuxiliaryEq" (formula "10"))
                                                                                             (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                                             (builtin "One Step Simplification" (formula "9"))
                                                                                             (rule "hideAuxiliaryEq" (formula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                                             (rule "applyEq" (formula "31") (term "0") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "7"))
                                                                                             (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "7"))
                                                                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                                                                                             (rule "applyEq" (formula "42") (term "0") (ifseqformula "7"))
                                                                                             (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "42"))
                                                                                             (builtin "One Step Simplification" (formula "4"))
                                                                                             (rule "applyEqReverse" (formula "2") (term "0,1,0,0") (ifseqformula "4"))
                                                                                             (rule "hideAuxiliaryEq" (formula "4"))
                                                                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "6"))
                                                                                             (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                                             (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "6"))
                                                                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                                             (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "29") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                                             (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "27"))
                                                                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                                             (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                                             (rule "leq_literals" (formula "40") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "40"))
                                                                                             (rule "false_right" (formula "40"))
                                                                                             (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "29"))
                                                                                             (rule "andLeft" (formula "28"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                                             (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                                             (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                                             (rule "add_zero_right" (formula "28") (term "0"))
                                                                                             (rule "leq_literals" (formula "28"))
                                                                                             (rule "closeFalse" (formula "28"))
                                                                                          )
                                                                                          (branch "e5 = e3 FALSE"
                                                                                             (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "8"))
                                                                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "hideAuxiliaryEq" (formula "8"))
                                                                                             (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "44"))
                                                                                             (builtin "One Step Simplification" (formula "9"))
                                                                                             (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                                             (rule "hideAuxiliaryEq" (formula "9"))
                                                                                             (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "43"))
                                                                                             (builtin "One Step Simplification" (formula "9"))
                                                                                             (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "9"))
                                                                                             (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "9"))
                                                                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "9"))
                                                                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "9"))
                                                                                             (rule "hideAuxiliaryEq" (formula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                             (rule "commute_or_2" (formula "19") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,1,0"))
                                                                                             (rule "commute_or_2" (formula "19") (term "0"))
                                                                                             (rule "all_pull_out3" (formula "34") (term "0"))
                                                                                             (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                                                             (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "34") (term "0,0,0,0,0,0"))
                                                                                             (rule "all_pull_out3" (formula "33") (term "0"))
                                                                                             (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                                             (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0,0,0,0"))
                                                                                             (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                                             (branch "e4 = e2 TRUE"
                                                                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                                                                                (rule "applyEq" (formula "41") (term "0,1,1,1,0") (ifseqformula "6"))
                                                                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "6"))
                                                                                                (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "6"))
                                                                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "6"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "6"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "26"))
                                                                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                                (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "3"))
                                                                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "28"))
                                                                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                                                (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "40") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "40"))
                                                                                                (rule "false_right" (formula "40"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                                                                                (rule "andLeft" (formula "27"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                                                (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                                                (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "27") (term "0"))
                                                                                                (rule "leq_literals" (formula "27"))
                                                                                                (rule "closeFalse" (formula "27"))
                                                                                             )
                                                                                             (branch "e4 = e2 FALSE"
                                                                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "6"))
                                                                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                                (branch "e4 = e1 TRUE"
                                                                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                   (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "3"))
                                                                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                                   (rule "applyEq" (formula "40") (term "0,1,1,1,0") (ifseqformula "3"))
                                                                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                                                                                   (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "3"))
                                                                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                                                                   (rule "eqSymm" (formula "40"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                                                   (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                                                   (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                                                   (rule "mul_literals" (formula "28") (term "0,1"))
                                                                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                                                   (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "28"))
                                                                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                                                   (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                                   (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "27"))
                                                                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                                                   (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                                                   (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                                                   (rule "leq_literals" (formula "41") (term "0"))
                                                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                                                   (rule "false_right" (formula "41"))
                                                                                                   (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "24"))
                                                                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                                                   (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                                                   (rule "add_literals" (formula "38") (term "0,0"))
                                                                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                                                   (rule "false_right" (formula "38"))
                                                                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                                                   (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                                                   (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                                   (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                                   (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                                                   (rule "andLeft" (formula "24"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                                   (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                                                                   (rule "leq_literals" (formula "24"))
                                                                                                   (rule "closeFalse" (formula "24"))
                                                                                                )
                                                                                                (branch "e4 = e1 FALSE"
                                                                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                                                                   (rule "cut_direct" (formula "1") (term "1"))
                                                                                                   (branch "CUT: a.length <= e2 TRUE"
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "true_left" (formula "2"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                                                                                      (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                                                      (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                                                                      (rule "mul_literals" (formula "21") (term "0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                                                      (rule "mul_literals" (formula "21") (term "1"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "26"))
                                                                                                      (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                                                                      (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                                                      (rule "inEqSimp_contradEq3" (formula "46") (ifseqformula "32"))
                                                                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                                      (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                                      (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                                      (rule "qeq_literals" (formula "46") (term "0"))
                                                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                                                      (rule "false_right" (formula "46"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                                                                      (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                                                                                      (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                                                      (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "31"))
                                                                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                                                      (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                                                      (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                                                      (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                                                      (rule "qeq_literals" (formula "45") (term "0"))
                                                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                                                      (rule "false_right" (formula "45"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                                                      (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "29"))
                                                                                                      (rule "andLeft" (formula "30"))
                                                                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                                      (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                                                      (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                                                                      (rule "add_literals" (formula "30") (term "0"))
                                                                                                      (rule "leq_literals" (formula "30"))
                                                                                                      (rule "closeFalse" (formula "30"))
                                                                                                   )
                                                                                                   (branch "CUT: a.length <= e2 FALSE"
                                                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                                                      (rule "inEqSimp_leqRight" (formula "40"))
                                                                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "2"))
                                                                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                                                      (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                                                                      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                      (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "23"))
                                                                                                      (rule "qeq_literals" (formula "27") (term "0"))
                                                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                                                      (rule "closeFalse" (formula "27"))
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "Null Reference (_a = null)"
                                                                                 (rule "false_right" (formula "52"))
                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                                                                 (rule "false_right" (formula "52"))
                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "41"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "37"))
                                                                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "33"))
                                                                                 (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "40"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                                                 (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                                 (rule "mul_literals" (formula "33") (term "1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                                 (rule "mul_literals" (formula "35") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "39"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "13"))
                                                                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "13"))
                                                                                 (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "13"))
                                                                                 (rule "hideAuxiliaryEq" (formula "13"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "16") (term "1,0,0") (ifseqformula "39"))
                                                                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0"))
                                                                                 (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "16") (term "0,1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "6"))
                                                                                 (rule "hideAuxiliaryEq" (formula "6"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "9"))
                                                                                 (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "9"))
                                                                                 (rule "hideAuxiliaryEq" (formula "9"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                                                                 (rule "leq_literals" (formula "28") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "true_left" (formula "28"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                                                                 (rule "times_zero_1" (formula "30") (term "0,0"))
                                                                                 (rule "add_zero_left" (formula "30") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                 (rule "mul_literals" (formula "30") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "30"))
                                                                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                                                                                 (rule "mul_literals" (formula "29") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                                 (rule "mul_literals" (formula "29") (term "1"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "29"))
                                                                                 (rule "leq_literals" (formula "31") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "31"))
                                                                                 (rule "true_left" (formula "31"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "33"))
                                                                                 (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "39"))
                                                                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "11") (term "0,0,0") (ifseqformula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "11") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "12") (term "0,0,0,0") (ifseqformula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "12") (term "0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "12"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "13") (term "0,0,0,0") (ifseqformula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "13") (term "0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                                                                 (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                                                 (rule "add_literals" (formula "37") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                                 (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "37"))
                                                                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                                                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                                                 (rule "add_literals" (formula "35") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "35"))
                                                                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "32"))
                                                                                 (rule "andLeft" (formula "33"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33"))
                                                                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                                                 (rule "add_literals" (formula "33") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "33") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "33") (term "0"))
                                                                                 (rule "leq_literals" (formula "33"))
                                                                                 (rule "closeFalse" (formula "33"))
                                                                              )
                                                                           )
                                                                           (branch "if x_19 false"
                                                                              (builtin "One Step Simplification" (formula "51"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "tryEmpty" (formula "51") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "51") (term "1"))
                                                                              (rule "blockEmpty" (formula "51") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "51") (term "1"))
                                                                              (rule "emptyModality" (formula "51") (term "1"))
                                                                              (rule "andRight" (formula "51"))
                                                                              (branch "Case 1"
                                                                                 (builtin "One Step Simplification" (formula "51"))
                                                                                 (rule "closeTrue" (formula "51"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (builtin "One Step Simplification" (formula "51"))
                                                                                 (rule "allRight" (formula "51") (inst "sk=f_7"))
                                                                                 (rule "allRight" (formula "51") (inst "sk=o_7"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "orRight" (formula "51"))
                                                                                 (rule "eqSymm" (formula "57"))
                                                                                 (rule "inEqSimp_ltRight" (formula "49"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                                 (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "32") (term "0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                                                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "37"))
                                                                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "40"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                 (rule "mul_literals" (formula "32") (term "1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                                                                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                                                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                                                 (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                                                                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                                                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "12"))
                                                                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "12"))
                                                                                 (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "12"))
                                                                                 (rule "applyEqReverse" (formula "57") (term "3,0,0,0,0") (ifseqformula "12"))
                                                                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "12"))
                                                                                 (rule "hideAuxiliaryEq" (formula "12"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "9"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "9"))
                                                                                 (rule "applyEqReverse" (formula "56") (term "3,0,0,0") (ifseqformula "9"))
                                                                                 (rule "hideAuxiliaryEq" (formula "9"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "34"))
                                                                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "5"))
                                                                                 (rule "hideAuxiliaryEq" (formula "5"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "13") (term "1,0,0") (ifseqformula "36"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0"))
                                                                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                                                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "13") (term "0,1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "29"))
                                                                                 (rule "leq_literals" (formula "27") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "true_left" (formula "27"))
                                                                                 (rule "pullOutSelect" (formula "53") (term "1") (inst "selectSK=f_7_0"))
                                                                                 (rule "simplifySelectOfAnon" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "50"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "48"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_7_1"))
                                                                                 (rule "simplifySelectOfStore" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "castDel" (formula "1") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "simplifySelectOfStore" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "castDel" (formula "1") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "simplifySelectOfStore" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "castDel" (formula "1") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "52"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "simplifySelectOfStore" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "replaceKnownSelect_taclet110000000000000000000121212_23" (formula "1") (term "2,0"))
                                                                                 (rule "castDel" (formula "1") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "53"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "55"))
                                                                                 (rule "closeTrue" (formula "55"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Null Reference (_a = null)"
                                                                           (rule "false_right" (formula "47"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "Index Out of Bounds (_a != null, but _e1 Out of Bounds!)"
                                                                           (rule "false_right" (formula "47"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                           (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "28"))
                                                                           (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "28") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                           (rule "mul_literals" (formula "28") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                           (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                           (rule "mul_literals" (formula "30") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "33"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "33"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "inEqSimp_contradEq7" (formula "10") (term "1,0,0") (ifseqformula "33"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                                           (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                                                                           (rule "leq_literals" (formula "24") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "true_left" (formula "24"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                           (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "26") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                           (rule "mul_literals" (formula "26") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "26"))
                                                                           (rule "qeq_literals" (formula "1") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                                                                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                           (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                           (rule "mul_literals" (formula "25") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                                                           (rule "leq_literals" (formula "27") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "true_left" (formula "27"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "29"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                           (rule "inEqSimp_contradEq3" (formula "10") (term "0,0,0,0") (ifseqformula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "inEqSimp_contradEq3" (formula "9") (term "0,0,0,0") (ifseqformula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "9") (term "0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "inEqSimp_contradEq3" (formula "8") (term "0,0,0") (ifseqformula "35"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "8") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                                                                           (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                                           (rule "add_literals" (formula "32") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "32"))
                                                                           (rule "andLeft" (formula "31"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                                           (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                           (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "31") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "31") (term "0"))
                                                                           (rule "leq_literals" (formula "31"))
                                                                           (rule "closeFalse" (formula "31"))
                                                                        )
                                                                     )
                                                                     (branch "Null Reference (_a = null)"
                                                                        (rule "false_right" (formula "47"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                                                        (rule "false_right" (formula "47"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                        (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "28"))
                                                                        (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "28") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                        (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                        (rule "mul_literals" (formula "28") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                        (rule "mul_literals" (formula "30") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "33"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                                        (rule "hideAuxiliaryEq" (formula "5"))
                                                                        (rule "inEqSimp_contradEq7" (formula "11") (term "1,0,0") (ifseqformula "34"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                                        (rule "leq_literals" (formula "11") (term "0,1,0,0"))
                                                                        (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "33"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                        (rule "hideAuxiliaryEq" (formula "7"))
                                                                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                                                                        (rule "leq_literals" (formula "24") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                        (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "26") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                        (rule "mul_literals" (formula "26") (term "1"))
                                                                        (rule "nnf_imp2or" (formula "21") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                                        (rule "nnf_imp2or" (formula "36") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                                                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                                                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                                                                        (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                                                        (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                                                                        (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                                                        (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                                                        (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                                                        (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                        (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                                        (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                        (rule "commute_or" (formula "1"))
                                                                        (rule "commute_or_2" (formula "21") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                        (branch "e5 = e2 TRUE"
                                                                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "replace_known_left" (formula "10") (term "1,0,0,0") (ifseqformula "3"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "10"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "10"))
                                                                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "10"))
                                                                           (rule "hideAuxiliaryEq" (formula "10"))
                                                                           (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "3"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "hideAuxiliaryEq" (formula "9"))
                                                                           (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "3"))
                                                                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                                           (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                                           (rule "eqSymm" (formula "6") (term "0,0"))
                                                                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                           (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                           (rule "mul_literals" (formula "29") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "29"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "25"))
                                                                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                           (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "4"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                           (rule "hideAuxiliaryEq" (formula "4"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                           (rule "mul_literals" (formula "3") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                           (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                           (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "25") (term "0"))
                                                                           (rule "leq_literals" (formula "25"))
                                                                           (rule "closeFalse" (formula "25"))
                                                                        )
                                                                        (branch "e5 = e2 FALSE"
                                                                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                           (rule "hideAuxiliaryEq" (formula "3"))
                                                                           (rule "replace_known_right" (formula "9") (term "1,0,0,0") (ifseqformula "43"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "43"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "replace_known_right" (formula "8") (term "1,0,0,0") (ifseqformula "43"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                           (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                           (branch "e5 = e3 TRUE"
                                                                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "6"))
                                                                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                              (rule "hideAuxiliaryEq" (formula "5"))
                                                                              (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "8"))
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "8"))
                                                                              (rule "hideAuxiliaryEq" (formula "8"))
                                                                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "applyEq" (formula "6") (term "0,2,2,0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "4"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                              (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                              (rule "mul_literals" (formula "28") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "39") (term "0,0"))
                                                                              (rule "leq_literals" (formula "39") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "39"))
                                                                              (rule "false_right" (formula "39"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                                                              (rule "andLeft" (formula "28"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                              (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                              (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "28") (term "0"))
                                                                              (rule "leq_literals" (formula "28"))
                                                                              (rule "closeFalse" (formula "28"))
                                                                           )
                                                                           (branch "e5 = e3 FALSE"
                                                                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "5"))
                                                                              (rule "hideAuxiliaryEq" (formula "5"))
                                                                              (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "42"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "42"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "commute_or_2" (formula "19") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "19") (term "0"))
                                                                              (rule "commute_or_2" (formula "33") (term "0,0,1,0"))
                                                                              (rule "all_pull_out3" (formula "34") (term "0"))
                                                                              (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                                              (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                                              (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "34") (term "0,0,0,0,0,0"))
                                                                              (rule "all_pull_out3" (formula "33") (term "0"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                                                                              (rule "commute_or_2" (formula "33") (term "0,0,0,0,0,0"))
                                                                              (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                              (branch "e5 = e1 TRUE"
                                                                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                                 (rule "hideAuxiliaryEq" (formula "7"))
                                                                                 (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                                 (rule "hideAuxiliaryEq" (formula "7"))
                                                                                 (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "hideAuxiliaryEq" (formula "7"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                                 (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                                 (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "6"))
                                                                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "6"))
                                                                                 (rule "eqSymm" (formula "41"))
                                                                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "6"))
                                                                                 (rule "eqSymm" (formula "40"))
                                                                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                                                                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "6"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                 (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "6"))
                                                                                 (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "6"))
                                                                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "25"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                                 (rule "leq_literals" (formula "40") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "false_right" (formula "40"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                                                 (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "27"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                                 (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                                 (rule "qeq_literals" (formula "40") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "false_right" (formula "40"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                                 (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                                 (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                                                                                 (rule "andLeft" (formula "25"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                                 (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "25") (term "0"))
                                                                                 (rule "leq_literals" (formula "25"))
                                                                                 (rule "closeFalse" (formula "25"))
                                                                              )
                                                                              (branch "e5 = e1 FALSE"
                                                                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                                 (rule "hideAuxiliaryEq" (formula "6"))
                                                                                 (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "41"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                                 (rule "hideAuxiliaryEq" (formula "7"))
                                                                                 (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "40"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                                                 (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                                 (rule "hideAuxiliaryEq" (formula "6"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                 (branch "e4 = e2 TRUE"
                                                                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                                    (rule "hideAuxiliaryEq" (formula "4"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "38") (term "0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "39") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "39") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "39"))
                                                                                    (rule "false_right" (formula "39"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                                    (rule "andLeft" (formula "24"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "24") (term "0"))
                                                                                    (rule "leq_literals" (formula "24"))
                                                                                    (rule "closeFalse" (formula "24"))
                                                                                 )
                                                                                 (branch "e4 = e2 FALSE"
                                                                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                                                    (rule "hideAuxiliaryEq" (formula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                    (rule "cut_direct" (formula "1") (term "1"))
                                                                                    (branch "CUT: a.length <= e2 TRUE"
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "true_left" (formula "2"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                                       (rule "mul_literals" (formula "19") (term "1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                                                                       (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "30"))
                                                                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                       (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                       (rule "qeq_literals" (formula "44") (term "0"))
                                                                                       (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "false_right" (formula "44"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "29"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                                       (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                                       (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                                       (rule "add_literals" (formula "42") (term "0,0"))
                                                                                       (rule "qeq_literals" (formula "42") (term "0"))
                                                                                       (builtin "One Step Simplification" (formula "42"))
                                                                                       (rule "false_right" (formula "42"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                                       (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                                                       (rule "andLeft" (formula "27"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "27") (term "0"))
                                                                                       (rule "leq_literals" (formula "27"))
                                                                                       (rule "closeFalse" (formula "27"))
                                                                                    )
                                                                                    (branch "CUT: a.length <= e2 FALSE"
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "inEqSimp_leqRight" (formula "38"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                       (rule "add_literals" (formula "25") (term "0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "21"))
                                                                                       (rule "qeq_literals" (formula "25") (term "0"))
                                                                                       (builtin "One Step Simplification" (formula "25"))
                                                                                       (rule "closeFalse" (formula "25"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Null Reference (x_arr_2 = null)"
                                                                     (rule "false_right" (formula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "Index Out of Bounds (x_arr_2 != null, but x_17 Out of Bounds!)"
                                                                     (rule "false_right" (formula "47"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                     (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "28"))
                                                                     (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "28") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                     (rule "mul_literals" (formula "28") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                     (rule "mul_literals" (formula "30") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "12") (term "1,0,0") (ifseqformula "35"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                                                     (rule "leq_literals" (formula "12") (term "0,1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                     (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                     (rule "hideAuxiliaryEq" (formula "7"))
                                                                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                                                                     (rule "leq_literals" (formula "24") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                     (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "26") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "1"))
                                                                     (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                     (rule "nnf_imp2or" (formula "21") (term "0"))
                                                                     (rule "nnf_imp2or" (formula "36") (term "0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                                                     (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                                     (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                                                     (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                     (rule "commute_or" (formula "1"))
                                                                     (rule "commute_or_2" (formula "21") (term "0"))
                                                                     (rule "commute_or_2" (formula "35") (term "0,0"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "e5 = e2 TRUE"
                                                                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "3"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "replace_known_left" (formula "8") (term "1,0,0,0") (ifseqformula "3"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                        (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                        (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                                        (rule "eqSymm" (formula "6") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                        (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                        (rule "mul_literals" (formula "29") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                        (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "29"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                        (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "25"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                        (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                                                        (rule "andLeft" (formula "25"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                        (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                        (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                        (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "25") (term "0"))
                                                                        (rule "leq_literals" (formula "25"))
                                                                        (rule "closeFalse" (formula "25"))
                                                                     )
                                                                     (branch "e5 = e2 FALSE"
                                                                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_right" (formula "9") (term "1,0,0,0") (ifseqformula "43"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "43"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "replace_known_right" (formula "8") (term "1,0,0,0") (ifseqformula "43"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                        (branch "e5 = e3 TRUE"
                                                                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "6"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "applyEq" (formula "6") (term "0,2,2,0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                           (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                                           (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                           (rule "mul_literals" (formula "28") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "39") (term "0,0"))
                                                                           (rule "leq_literals" (formula "39") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "39"))
                                                                           (rule "false_right" (formula "39"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                                           (rule "andLeft" (formula "27"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                           (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                           (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "27") (term "0"))
                                                                           (rule "leq_literals" (formula "27"))
                                                                           (rule "closeFalse" (formula "27"))
                                                                        )
                                                                        (branch "e5 = e3 FALSE"
                                                                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "5"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                           (rule "hideAuxiliaryEq" (formula "5"))
                                                                           (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "42"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "42"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "commute_or_2" (formula "19") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "19") (term "0"))
                                                                           (rule "commute_or_2" (formula "33") (term "0,0,1,0"))
                                                                           (rule "all_pull_out3" (formula "34") (term "0"))
                                                                           (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                                           (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                                                                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                                                                           (rule "commute_or_2" (formula "34") (term "0,0,0,0,0,0"))
                                                                           (rule "all_pull_out3" (formula "33") (term "0"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                           (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                                                                           (rule "commute_or_2" (formula "33") (term "0,0,0,0,0,0"))
                                                                           (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                           (branch "e5 = e1 TRUE"
                                                                              (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                              (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                              (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                              (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "6"))
                                                                              (rule "eqSymm" (formula "41"))
                                                                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "6"))
                                                                              (rule "eqSymm" (formula "40"))
                                                                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "6"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                              (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "6"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                              (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "6"))
                                                                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                              (rule "mul_literals" (formula "28") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                              (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "25"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                              (rule "leq_literals" (formula "40") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "40"))
                                                                              (rule "false_right" (formula "40"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                                              (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                              (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                              (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                              (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                              (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "27"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "40") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "40"))
                                                                              (rule "false_right" (formula "40"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                              (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                                              (rule "andLeft" (formula "26"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                              (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                              (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "0"))
                                                                              (rule "leq_literals" (formula "26"))
                                                                              (rule "closeFalse" (formula "26"))
                                                                           )
                                                                           (branch "e5 = e1 FALSE"
                                                                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                              (rule "hideAuxiliaryEq" (formula "6"))
                                                                              (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "41"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                              (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                              (rule "hideAuxiliaryEq" (formula "7"))
                                                                              (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "40"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                                              (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                              (rule "hideAuxiliaryEq" (formula "6"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                              (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                              (branch "e4 = e2 TRUE"
                                                                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                                 (rule "hideAuxiliaryEq" (formula "4"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                                 (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "37") (term "0,1,1,1,0") (ifseqformula "3"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                                                 (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                                 (rule "mul_literals" (formula "25") (term "0,1"))
                                                                                 (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                                                 (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                                 (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "39") (term "0,0"))
                                                                                 (rule "leq_literals" (formula "39") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "39"))
                                                                                 (rule "false_right" (formula "39"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                                 (rule "andLeft" (formula "24"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "24") (term "0"))
                                                                                 (rule "leq_literals" (formula "24"))
                                                                                 (rule "closeFalse" (formula "24"))
                                                                              )
                                                                              (branch "e4 = e2 FALSE"
                                                                                 (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                 (rule "cut_direct" (formula "1") (term "1"))
                                                                                 (branch "CUT: a.length <= e3 TRUE"
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                                    (rule "mul_literals" (formula "19") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                    (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "30"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                                                    (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "43") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "43") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "false_right" (formula "43"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "29"))
                                                                                    (rule "andLeft" (formula "28"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                                    (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0"))
                                                                                    (rule "leq_literals" (formula "28"))
                                                                                    (rule "closeFalse" (formula "28"))
                                                                                 )
                                                                                 (branch "CUT: a.length <= e3 FALSE"
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_leqRight" (formula "38"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                                                                    (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                                    (rule "add_literals" (formula "26") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "21"))
                                                                                    (rule "qeq_literals" (formula "25") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "closeFalse" (formula "25"))
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Null Reference (_a = null)"
                                                                  (rule "false_right" (formula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                                                  (rule "false_right" (formula "47"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                                  (rule "mul_literals" (formula "28") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "8") (term "0,0") (ifseqformula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_contradEq7" (formula "10") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "26"))
                                                                  (rule "leq_literals" (formula "24") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                  (rule "times_zero_1" (formula "26") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "1"))
                                                                  (rule "nnf_imp2or" (formula "36") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "21") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                                                  (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                                                                  (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "nnf_notAnd" (formula "35") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                  (rule "commute_or" (formula "1"))
                                                                  (rule "commute_or_2" (formula "21") (term "0"))
                                                                  (rule "commute_or_2" (formula "35") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "e5 = e2 TRUE"
                                                                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "9"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "9"))
                                                                     (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "replace_known_left" (formula "8") (term "1,0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                                     (rule "eqSymm" (formula "6") (term "0,0"))
                                                                     (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                     (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "3"))
                                                                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                     (rule "mul_literals" (formula "5") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "25"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                     (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                     (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "0"))
                                                                     (rule "leq_literals" (formula "24"))
                                                                     (rule "closeFalse" (formula "24"))
                                                                  )
                                                                  (branch "e5 = e2 FALSE"
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "8") (term "1,0,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_right" (formula "9") (term "1,0,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                     (branch "e5 = e3 TRUE"
                                                                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "6"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                        (rule "hideAuxiliaryEq" (formula "5"))
                                                                        (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "hideAuxiliaryEq" (formula "7"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "applyEq" (formula "6") (term "0,2,2,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                        (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                        (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                        (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "4"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                        (rule "mul_literals" (formula "28") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                        (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "39") (term "0,0"))
                                                                        (rule "leq_literals" (formula "39") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "false_right" (formula "39"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "28"))
                                                                        (rule "andLeft" (formula "27"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                        (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                        (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "27") (term "0"))
                                                                        (rule "leq_literals" (formula "27"))
                                                                        (rule "closeFalse" (formula "27"))
                                                                     )
                                                                     (branch "e5 = e3 FALSE"
                                                                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "5"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "5"))
                                                                        (rule "hideAuxiliaryEq" (formula "5"))
                                                                        (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "42"))
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "42"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "commute_or_2" (formula "19") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "19") (term "0"))
                                                                        (rule "commute_or_2" (formula "33") (term "0,0,1,0"))
                                                                        (rule "all_pull_out3" (formula "34") (term "0"))
                                                                        (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                                        (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "34") (term "0,0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "34") (term "0,0,0,0,0,0"))
                                                                        (rule "all_pull_out3" (formula "33") (term "0"))
                                                                        (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                                                        (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "33") (term "0,0,0,0,0,0"))
                                                                        (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                        (branch "e5 = e1 TRUE"
                                                                           (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "6"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "6"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "6"))
                                                                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                           (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "6"))
                                                                           (rule "eqSymm" (formula "40"))
                                                                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "6"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                                           (rule "mul_literals" (formula "28") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                                           (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "25"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                           (rule "leq_literals" (formula "40") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "false_right" (formula "40"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                           (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                           (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "27"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "40") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "40") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "40"))
                                                                           (rule "false_right" (formula "40"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                           (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                           (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "26") (term "0"))
                                                                           (rule "leq_literals" (formula "26"))
                                                                           (rule "closeFalse" (formula "26"))
                                                                        )
                                                                        (branch "e5 = e1 FALSE"
                                                                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "41"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "40"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "6"))
                                                                           (rule "hideAuxiliaryEq" (formula "6"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                           (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                           (branch "e4 = e2 TRUE"
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                              (rule "hideAuxiliaryEq" (formula "4"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "38") (term "0,1,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                                              (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "26"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "39") (term "0,0"))
                                                                              (rule "leq_literals" (formula "39") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "39"))
                                                                              (rule "false_right" (formula "39"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                              (rule "andLeft" (formula "24"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                              (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                              (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "24") (term "0"))
                                                                              (rule "leq_literals" (formula "24"))
                                                                              (rule "closeFalse" (formula "24"))
                                                                           )
                                                                           (branch "e4 = e2 FALSE"
                                                                              (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                                              (rule "hideAuxiliaryEq" (formula "3"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                              (rule "cut_direct" (formula "1") (term "1"))
                                                                              (branch "CUT: a.length <= e2 TRUE"
                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                 (rule "true_left" (formula "2"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                                                 (rule "mul_literals" (formula "19") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                                 (rule "mul_literals" (formula "19") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                                                                 (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                 (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "30"))
                                                                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                                 (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "44") (term "0,0"))
                                                                                 (rule "qeq_literals" (formula "44") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "false_right" (formula "44"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
                                                                                 (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                                 (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "29"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                                                 (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "42") (term "0,0"))
                                                                                 (rule "qeq_literals" (formula "42") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                 (rule "false_right" (formula "42"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                                                                 (rule "andLeft" (formula "28"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                                 (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "28") (term "0"))
                                                                                 (rule "leq_literals" (formula "28"))
                                                                                 (rule "closeFalse" (formula "28"))
                                                                              )
                                                                              (branch "CUT: a.length <= e2 FALSE"
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "inEqSimp_leqRight" (formula "38"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                                                 (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                 (rule "add_literals" (formula "25") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "25"))
                                                                                 (rule "qeq_literals" (formula "21") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                 (rule "closeFalse" (formula "21"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "if x_14 false"
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "tryEmpty" (formula "46") (term "1"))
                                                               (rule "blockEmptyLabel" (formula "46") (term "1"))
                                                               (rule "blockEmpty" (formula "46") (term "1"))
                                                               (rule "methodCallEmpty" (formula "46") (term "1"))
                                                               (rule "emptyModality" (formula "46") (term "1"))
                                                               (rule "andRight" (formula "46"))
                                                               (branch "Case 1"
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "closeTrue" (formula "46"))
                                                               )
                                                               (branch "Case 2"
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "allRight" (formula "46") (inst "sk=f_8"))
                                                                  (rule "allRight" (formula "46") (inst "sk=o_8"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "orRight" (formula "46"))
                                                                  (rule "eqSymm" (formula "52"))
                                                                  (rule "inEqSimp_ltRight" (formula "44"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                                  (rule "mul_literals" (formula "27") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "52") (term "3,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "inEqSimp_contradEq7" (formula "10") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                                  (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "pullOutSelect" (formula "49") (term "1") (inst "selectSK=f_8_0"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_8_1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet1100000000000000121212_16" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "closeTrue" (formula "51"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Null Reference (_a = null)"
                                                            (rule "false_right" (formula "43"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Index Out of Bounds (_a != null, but _e2 Out of Bounds!)"
                                                            (rule "false_right" (formula "43"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "27"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                            (rule "mul_literals" (formula "24") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "8") (term "1,0,0") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "21") (term "0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                            (rule "times_zero_1" (formula "23") (term "0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                            (rule "mul_literals" (formula "23") (term "1"))
                                                            (rule "nnf_imp2or" (formula "33") (term "0"))
                                                            (rule "nnf_imp2or" (formula "32") (term "0"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                            (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                                            (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                            (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                            (rule "commute_or" (formula "1"))
                                                            (rule "commute_or_2" (formula "18") (term "0"))
                                                            (rule "commute_or_2" (formula "32") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "e5 = e3 TRUE"
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,2,2,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "24"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0"))
                                                               (rule "add_zero_right" (formula "26") (term "0"))
                                                               (rule "leq_literals" (formula "26"))
                                                               (rule "closeFalse" (formula "26"))
                                                            )
                                                            (branch "e5 = e3 FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch "e5 = e1 | e5 = e2 TRUE"
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "commute_or_2" (formula "15") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "15") (term "0"))
                                                                  (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                                                  (rule "all_pull_out3" (formula "30") (term "0"))
                                                                  (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                                  (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                                  (rule "all_pull_out3" (formula "29") (term "0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                                  (rule "cut_direct" (formula "4") (term "0"))
                                                                  (branch "CUT: e5 = e1 TRUE"
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                                                     (rule "eqSymm" (formula "38"))
                                                                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                     (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "25"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "38") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "false_right" (formula "38"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                     (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "0"))
                                                                     (rule "leq_literals" (formula "24"))
                                                                     (rule "closeFalse" (formula "24"))
                                                                  )
                                                                  (branch "CUT: e5 = e1 FALSE"
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                                     (rule "eqSymm" (formula "39"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                     (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "4"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                     (rule "leq_literals" (formula "37") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "false_right" (formula "37"))
                                                                     (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "24"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                     (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                     (rule "leq_literals" (formula "37") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "false_right" (formula "37"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                     (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                                                     (rule "andLeft" (formula "25"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                     (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                     (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                     (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "25") (term "0"))
                                                                     (rule "leq_literals" (formula "25"))
                                                                     (rule "closeFalse" (formula "25"))
                                                                  )
                                                               )
                                                               (branch "e5 = e1 | e5 = e2 FALSE"
                                                                  (rule "orRight" (formula "40"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                                                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "commute_or_2" (formula "14") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "14") (term "0"))
                                                                  (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                                                  (rule "all_pull_out3" (formula "29") (term "0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                                  (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                                  (rule "all_pull_out3" (formula "28") (term "0"))
                                                                  (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                                  (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                                                  (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                                                  (rule "cut_direct" (formula "1") (term "1"))
                                                                  (branch "CUT: a.length <= e2 TRUE"
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                                     (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                     (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                                     (rule "mul_literals" (formula "18") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                     (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                     (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                     (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "41") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "41") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "false_right" (formula "41"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                     (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                     (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                     (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                     (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                                                                     (rule "andLeft" (formula "26"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0"))
                                                                     (rule "leq_literals" (formula "26"))
                                                                     (rule "closeFalse" (formula "26"))
                                                                  )
                                                                  (branch "CUT: a.length <= e2 FALSE"
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "inEqSimp_leqRight" (formula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                                     (rule "qeq_literals" (formula "20") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "closeFalse" (formula "20"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Null Reference (_a = null)"
                                                         (rule "false_right" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                                                         (rule "false_right" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                         (rule "inEqSimp_ltToLeq" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "24"))
                                                         (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                         (rule "mul_literals" (formula "24") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                         (rule "mul_literals" (formula "26") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "inEqSimp_contradEq7" (formula "7") (term "1,0,0") (ifseqformula "30"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                                         (rule "leq_literals" (formula "21") (term "0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                         (rule "times_zero_1" (formula "23") (term "0,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                         (rule "mul_literals" (formula "23") (term "1"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                         (rule "nnf_imp2or" (formula "18") (term "0"))
                                                         (rule "nnf_imp2or" (formula "33") (term "0"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                         (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                                                         (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                         (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,0"))
                                                         (rule "commute_or" (formula "1"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_or_2" (formula "32") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "e5 = e1 | e5 = e2 TRUE"
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "7"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "e5 = e3 TRUE"
                                                               (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "4") (term "1") (ifseqformula "24"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "4") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                               (rule "mul_literals" (formula "23") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0"))
                                                               (rule "leq_literals" (formula "24"))
                                                               (rule "closeFalse" (formula "24"))
                                                            )
                                                            (branch "e5 = e3 FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                                               (rule "all_pull_out3" (formula "30") (term "0"))
                                                               (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "all_pull_out3" (formula "29") (term "0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                               (rule "cut_direct" (formula "4") (term "1"))
                                                               (branch "CUT: e5 = e2 TRUE"
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                                  (rule "eqSymm" (formula "37"))
                                                                  (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "false_right" (formula "37"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                                  (rule "andLeft" (formula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "0"))
                                                                  (rule "leq_literals" (formula "24"))
                                                                  (rule "closeFalse" (formula "24"))
                                                               )
                                                               (branch "CUT: e5 = e2 FALSE"
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                                  (rule "eqSymm" (formula "37"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                                                  (rule "eqSymm" (formula "38"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "false_right" (formula "37"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "38") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                                  (rule "andLeft" (formula "23"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0"))
                                                                  (rule "leq_literals" (formula "23"))
                                                                  (rule "closeFalse" (formula "23"))
                                                               )
                                                            )
                                                         )
                                                         (branch "e5 = e1 | e5 = e2 FALSE"
                                                            (rule "orRight" (formula "41"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "41")))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "40")))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "e5 = e3 TRUE"
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "25") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "false_right" (formula "37"))
                                                               (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0"))
                                                               (rule "leq_literals" (formula "24"))
                                                               (rule "closeFalse" (formula "24"))
                                                            )
                                                            (branch "e5 = e3 FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "39"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "38"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "commute_or_2" (formula "14") (term "0,0"))
                                                               (rule "commute_or_2" (formula "14") (term "0"))
                                                               (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                                               (rule "all_pull_out3" (formula "29") (term "0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                               (rule "all_pull_out3" (formula "28") (term "0"))
                                                               (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                                               (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                                               (rule "cut_direct" (formula "1") (term "1"))
                                                               (branch "CUT: a.length <= e3 TRUE"
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "40") (ifseqformula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "40") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "false_right" (formula "40"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "28") (term "0"))
                                                                  (rule "leq_literals" (formula "28"))
                                                                  (rule "closeFalse" (formula "28"))
                                                               )
                                                               (branch "CUT: a.length <= e3 FALSE"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_leqRight" (formula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                                  (rule "qeq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "closeFalse" (formula "20"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (x_arr_1 = null)"
                                                      (rule "false_right" (formula "43"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (x_arr_1 != null, but x_12 Out of Bounds!)"
                                                      (rule "false_right" (formula "43"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                      (rule "inEqSimp_ltToLeq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "24"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                      (rule "mul_literals" (formula "24") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_contradEq7" (formula "7") (term "1,0,0") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                      (rule "times_zero_1" (formula "23") (term "0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "nnf_imp2or" (formula "18") (term "0"))
                                                      (rule "nnf_imp2or" (formula "33") (term "0"))
                                                      (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                      (rule "nnf_imp2or" (formula "32") (term "0"))
                                                      (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "1"))
                                                      (rule "commute_or_2" (formula "18") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "e5 = e3 TRUE"
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "4") (term "0,2,2,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "2"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                         (rule "mul_literals" (formula "26") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "24"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "25"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                      (branch "e5 = e3 FALSE"
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "ifthenelse_split" (formula "4") (term "0"))
                                                         (branch "e5 = e1 | e5 = e2 TRUE"
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "commute_or_2" (formula "15") (term "0,0"))
                                                            (rule "commute_or_2" (formula "15") (term "0"))
                                                            (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                                            (rule "all_pull_out3" (formula "30") (term "0"))
                                                            (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "all_pull_out3" (formula "29") (term "0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                            (rule "cut_direct" (formula "4") (term "1"))
                                                            (branch "CUT: e5 = e2 TRUE"
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "24"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "false_right" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0"))
                                                               (rule "leq_literals" (formula "25"))
                                                               (rule "closeFalse" (formula "25"))
                                                            )
                                                            (branch "CUT: e5 = e2 FALSE"
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "39"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "37"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "false_right" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                               (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "25"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "38") (term "0,0"))
                                                               (rule "qeq_literals" (formula "38") (term "0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "false_right" (formula "38"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0"))
                                                               (rule "leq_literals" (formula "23"))
                                                               (rule "closeFalse" (formula "23"))
                                                            )
                                                         )
                                                         (branch "e5 = e1 | e5 = e2 FALSE"
                                                            (rule "orRight" (formula "40"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")))
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                                            (rule "all_pull_out3" (formula "29") (term "0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                            (rule "all_pull_out3" (formula "28") (term "0"))
                                                            (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                            (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                                            (rule "cut_direct" (formula "1") (term "1"))
                                                            (branch "CUT: a.length <= e4 TRUE"
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "18") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                               (rule "mul_literals" (formula "18") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "28"))
                                                               (rule "andLeft" (formula "29"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0"))
                                                               (rule "add_literals" (formula "29") (term "0"))
                                                               (rule "leq_literals" (formula "29"))
                                                               (rule "closeFalse" (formula "29"))
                                                            )
                                                            (branch "CUT: a.length <= e4 FALSE"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_leqRight" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                               (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "add_literals" (formula "26") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "24"))
                                                               (rule "qeq_literals" (formula "20") (term "0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "closeFalse" (formula "20"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (_a = null)"
                                                   (rule "false_right" (formula "43"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                                                   (rule "false_right" (formula "43"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                   (rule "inEqSimp_ltToLeq" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "24"))
                                                   (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                   (rule "mul_literals" (formula "24") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                   (rule "mul_literals" (formula "26") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_contradEq7" (formula "7") (term "1,0,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                   (rule "times_zero_1" (formula "23") (term "0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                                   (rule "nnf_imp2or" (formula "18") (term "0"))
                                                   (rule "nnf_imp2or" (formula "33") (term "0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "1"))
                                                   (rule "commute_or_2" (formula "18") (term "0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "e5 = e3 TRUE"
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "4") (term "0,2,2,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0,2,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_contradEq7" (formula "4") (term "1,0,0") (ifseqformula "24"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "4") (term "0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                   (branch "e5 = e3 FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "e5 = e1 | e5 = e2 TRUE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "commute_or_2" (formula "15") (term "0"))
                                                         (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                                         (rule "all_pull_out3" (formula "30") (term "0"))
                                                         (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                         (rule "all_pull_out3" (formula "29") (term "0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                         (rule "cut_direct" (formula "4") (term "0"))
                                                         (branch "CUT: e5 = e1 TRUE"
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                            (rule "eqSymm" (formula "37"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "25"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0"))
                                                            (rule "qeq_literals" (formula "38") (term "0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "false_right" (formula "38"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "CUT: e5 = e1 FALSE"
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "24"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0"))
                                                            (rule "leq_literals" (formula "38") (term "0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "false_right" (formula "38"))
                                                            (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "37") (term "0,0"))
                                                            (rule "leq_literals" (formula "37") (term "0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "false_right" (formula "37"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                      )
                                                      (branch "e5 = e1 | e5 = e2 FALSE"
                                                         (rule "orRight" (formula "40"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "40")))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                                         (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0"))
                                                         (rule "commute_or_2" (formula "14") (term "0"))
                                                         (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                                         (rule "all_pull_out3" (formula "29") (term "0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                         (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                         (rule "all_pull_out3" (formula "28") (term "0"))
                                                         (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                                         (rule "cut_direct" (formula "1") (term "1"))
                                                         (branch "CUT: a.length <= e3 TRUE"
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "23"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                            (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                            (rule "inEqSimp_contradEq3" (formula "42") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                            (rule "add_literals" (formula "42") (term "0,0"))
                                                            (rule "qeq_literals" (formula "42") (term "0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0"))
                                                            (rule "leq_literals" (formula "28"))
                                                            (rule "closeFalse" (formula "28"))
                                                         )
                                                         (branch "CUT: a.length <= e3 FALSE"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_leqRight" (formula "37"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "add_literals" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "20"))
                                                            (rule "qeq_literals" (formula "24") (term "0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "if x_9 false"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "tryEmpty" (formula "42") (term "1"))
                                                (rule "blockEmptyLabel" (formula "42") (term "1"))
                                                (rule "blockEmpty" (formula "42") (term "1"))
                                                (rule "methodCallEmpty" (formula "42") (term "1"))
                                                (rule "emptyModality" (formula "42") (term "1"))
                                                (rule "andRight" (formula "42"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "closeTrue" (formula "42"))
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "allRight" (formula "42") (inst "sk=f_9"))
                                                   (rule "allRight" (formula "42") (inst "sk=o_9"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "orRight" (formula "42"))
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "inEqSimp_ltRight" (formula "40"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "mul_literals" (formula "23") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "29"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0") (ifseqformula "29"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_9_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "Null Reference (_a = null)"
                                             (rule "false_right" (formula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (_a != null, but _e3 Out of Bounds!)"
                                             (rule "false_right" (formula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                             (rule "commute_or" (formula "1"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or_2" (formula "30") (term "0,0"))
                                             (rule "commute_or_2" (formula "16") (term "0,0"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "e5 = e1 | e5 = e2 TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                                (rule "all_pull_out3" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "all_pull_out3" (formula "28") (term "0"))
                                                (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                                (rule "cut_direct" (formula "3") (term "0"))
                                                (branch "CUT: e5 = e1 TRUE"
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                                (branch "CUT: e5 = e1 FALSE"
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                             )
                                             (branch "e5 = e1 | e5 = e2 FALSE"
                                                (rule "orRight" (formula "39"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                                (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                                (rule "all_pull_out3" (formula "30") (term "0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                                (rule "all_pull_out3" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "e5 = e3 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0"))
                                                   (rule "leq_literals" (formula "37") (term "0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "false_right" (formula "37"))
                                                   (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "e5 = e3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "1") (term "1"))
                                                   (branch "CUT: a.length <= e3 TRUE"
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                      (rule "mul_literals" (formula "17") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "28"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0"))
                                                      (rule "qeq_literals" (formula "39") (term "0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "false_right" (formula "39"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "leq_literals" (formula "27"))
                                                      (rule "closeFalse" (formula "27"))
                                                   )
                                                   (branch "CUT: a.length <= e3 FALSE"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_leqRight" (formula "36"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null Reference (_a = null)"
                                          (rule "false_right" (formula "40"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (_a != null, but _e4 Out of Bounds!)"
                                          (rule "false_right" (formula "40"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                          (rule "times_zero_1" (formula "21") (term "0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                          (rule "commute_or" (formula "1"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "30") (term "0,0"))
                                          (rule "commute_or_2" (formula "16") (term "0,0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "e5 = e1 | e5 = e2 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                             (rule "all_pull_out3" (formula "29") (term "0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                             (rule "all_pull_out3" (formula "28") (term "0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "cut_direct" (formula "3") (term "0"))
                                             (branch "CUT: e5 = e1 TRUE"
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                             (branch "CUT: e5 = e1 FALSE"
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                          )
                                          (branch "e5 = e1 | e5 = e2 FALSE"
                                             (rule "orRight" (formula "39"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                             (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                             (rule "all_pull_out3" (formula "30") (term "0"))
                                             (rule "shift_paren_or" (formula "30") (term "0,0"))
                                             (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                             (rule "all_pull_out3" (formula "29") (term "0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "e5 = e3 TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0"))
                                                (rule "leq_literals" (formula "37") (term "0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "false_right" (formula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0"))
                                                (rule "leq_literals" (formula "25"))
                                                (rule "closeFalse" (formula "25"))
                                             )
                                             (branch "e5 = e3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cut_direct" (formula "1") (term "1"))
                                                (branch "CUT: a.length <= e4 TRUE"
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0"))
                                                   (rule "add_literals" (formula "28") (term "0"))
                                                   (rule "leq_literals" (formula "28"))
                                                   (rule "closeFalse" (formula "28"))
                                                )
                                                (branch "CUT: a.length <= e4 FALSE"
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                                   (rule "qeq_literals" (formula "19") (term "0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "closeFalse" (formula "19"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                       (rule "false_right" (formula "40"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but x_7 Out of Bounds!)"
                                       (rule "false_right" (formula "40"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "nnf_imp2or" (formula "30") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "30") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "e5 = e1 | e5 = e2 TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                          (rule "all_pull_out3" (formula "29") (term "0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "28") (term "0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "cut_direct" (formula "3") (term "1"))
                                          (branch "CUT: e5 = e2 TRUE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "CUT: e5 = e2 FALSE"
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "21"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0"))
                                             (rule "add_zero_right" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "closeFalse" (formula "28"))
                                          )
                                       )
                                       (branch "e5 = e1 | e5 = e2 FALSE"
                                          (rule "orRight" (formula "39"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                          (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                          (rule "all_pull_out3" (formula "30") (term "0"))
                                          (rule "shift_paren_or" (formula "30") (term "0,0"))
                                          (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                          (rule "all_pull_out3" (formula "29") (term "0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "e5 = e3 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0"))
                                             (rule "leq_literals" (formula "37") (term "0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "e5 = e3 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "1") (term "1"))
                                             (branch "CUT: a.length <= e5 TRUE"
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "22"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0"))
                                                (rule "add_literals" (formula "28") (term "0"))
                                                (rule "leq_literals" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                             (branch "CUT: a.length <= e5 FALSE"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "add_literals" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (_a = null)"
                                    (rule "false_right" (formula "40"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (_a != null, but _e4 Out of Bounds!)"
                                    (rule "false_right" (formula "40"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "commute_or" (formula "1"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0"))
                                    (rule "commute_or_2" (formula "16") (term "0,0"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "e5 = e1 | e5 = e2 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "29") (term "0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                       (rule "all_pull_out3" (formula "28") (term "0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: e5 = e1 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "CUT: e5 = e1 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0"))
                                          (rule "leq_literals" (formula "36") (term "0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch "e5 = e1 | e5 = e2 FALSE"
                                       (rule "orRight" (formula "39"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                       (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                       (rule "all_pull_out3" (formula "30") (term "0"))
                                       (rule "shift_paren_or" (formula "30") (term "0,0"))
                                       (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                       (rule "all_pull_out3" (formula "29") (term "0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "e5 = e3 TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "e5 = e3 FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "cut_direct" (formula "1") (term "1"))
                                          (branch "CUT: a.length <= e4 TRUE"
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0"))
                                             (rule "add_literals" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "closeFalse" (formula "28"))
                                          )
                                          (branch "CUT: a.length <= e4 FALSE"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_leqRight" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "add_literals" (formula "25") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (_a = null)"
                                 (rule "false_right" (formula "40"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_a != null, but _e5 Out of Bounds!)"
                                 (rule "false_right" (formula "40"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                 (rule "inEqSimp_ltToLeq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "5") (term "1,0,0") (ifseqformula "28"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                 (rule "times_zero_1" (formula "21") (term "0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                 (rule "mul_literals" (formula "21") (term "1"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                                 (rule "commute_or" (formula "1"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "e5 = e1 | e5 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,1,0"))
                                    (rule "all_pull_out3" (formula "29") (term "0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "28") (term "0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "cut_direct" (formula "3") (term "0"))
                                    (branch "CUT: e5 = e1 TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "28"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                    (branch "CUT: e5 = e1 FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0"))
                                       (rule "leq_literals" (formula "36") (term "0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0"))
                                       (rule "leq_literals" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                 )
                                 (branch "e5 = e1 | e5 = e2 FALSE"
                                    (rule "orRight" (formula "39"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                    (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                    (rule "all_pull_out3" (formula "30") (term "0"))
                                    (rule "shift_paren_or" (formula "30") (term "0,0"))
                                    (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "all_pull_out3" (formula "29") (term "0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "e5 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "23"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0"))
                                       (rule "leq_literals" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                    (branch "e5 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: a.length <= e5 TRUE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "22"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_literals" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: a.length <= e5 FALSE"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "if x_4 false"
                              (builtin "One Step Simplification" (formula "39"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "tryEmpty" (formula "39") (term "1"))
                              (rule "blockEmptyLabel" (formula "39") (term "1"))
                              (rule "blockEmpty" (formula "39") (term "1"))
                              (rule "methodCallEmpty" (formula "39") (term "1"))
                              (rule "emptyModality" (formula "39") (term "1"))
                              (rule "andRight" (formula "39"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "closeTrue" (formula "39"))
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "closeTrue" (formula "39"))
                              )
                           )
                        )
                        (branch "Null Reference (_a = null)"
                           (rule "false_right" (formula "37"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a != null, but _e4 Out of Bounds!)"
                           (rule "false_right" (formula "37"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1"))
                           (rule "polySimp_rightDist" (formula "20") (term "1"))
                           (rule "mul_literals" (formula "20") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradEq7" (formula "2") (term "1,0,0") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                           (rule "times_zero_1" (formula "18") (term "0,0"))
                           (rule "add_zero_left" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_32"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_33"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "1"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "e5 = e1 | e5 = e2 TRUE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "all_pull_out3" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "27") (term "0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "2") (term "0"))
                              (branch "CUT: e5 = e1 TRUE"
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "CUT: e5 = e1 FALSE"
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                           (branch "e5 = e1 | e5 = e2 FALSE"
                              (rule "orRight" (formula "38"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                              (rule "all_pull_out3" (formula "29") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "29") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "all_pull_out3" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0,0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "e5 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "false_right" (formula "36"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                              (branch "e5 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "cut_direct" (formula "1") (term "1"))
                                 (branch "CUT: a.length <= e4 TRUE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                                    (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0"))
                                    (rule "add_literals" (formula "26") (term "0"))
                                    (rule "leq_literals" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                                 (branch "CUT: a.length <= e4 FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_leqRight" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "add_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "Null Reference (_a = null)"
                        (rule "false_right" (formula "36"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_a != null, but _e5 Out of Bounds!)"
                        (rule "false_right" (formula "36"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                        (rule "inEqSimp_ltToLeq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                        (rule "leq_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                        (rule "times_zero_1" (formula "17") (term "0,0"))
                        (rule "add_zero_left" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                        (rule "nnf_imp2or" (formula "26") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                        (rule "commute_or" (formula "1"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0,0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                        (rule "all_pull_out3" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "all_pull_out3" (formula "26") (term "0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "1") (term "1"))
                        (branch "CUT: a.length <= e5 TRUE"
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                           (rule "mul_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "21"))
                           (rule "andLeft" (formula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0"))
                           (rule "add_zero_right" (formula "27") (term "0"))
                           (rule "leq_literals" (formula "27"))
                           (rule "closeFalse" (formula "27"))
                        )
                        (branch "CUT: a.length <= e5 FALSE"
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                           (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "22") (term "0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "34"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "wellFormedAnon" (formula "34"))
                        (rule "wellFormedAnon" (formula "34") (term "0"))
                        (rule "wellFormedAnon" (formula "34") (term "0,0"))
                        (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")) (ifInst ""  (formula "28")) (ifInst ""  (formula "30")))
                        (rule "closeTrue" (formula "34"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "34"))
                        (branch "Case 1"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "34"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "34"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "5")))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "6")))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "7")))
                                    (rule "closeTrue" (formula "34"))
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "8")))
                                 (rule "closeTrue" (formula "34"))
                              )
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "9")))
                              (rule "closeTrue" (formula "34"))
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "34"))
                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "2")))
                           (rule "closeTrue" (formula "35"))
                        )
                     )
                  )
                  (branch "Usage"
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_3"))
                     (rule "inequality_comparison_simple" (formula "36") (term "1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "ifSplit" (formula "36"))
                     (branch "if x_3 true"
                        (builtin "One Step Simplification" (formula "37"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_3 false"
                        (builtin "One Step Simplification" (formula "37"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "methodCallEmpty" (formula "36") (term "1"))
                        (rule "tryEmpty" (formula "36") (term "1"))
                        (rule "emptyModality" (formula "36") (term "1"))
                        (rule "andRight" (formula "36"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "allRight" (formula "36") (inst "sk=f_11"))
                           (rule "allRight" (formula "36") (inst "sk=o_11"))
                           (rule "orRight" (formula "36"))
                           (rule "orRight" (formula "36"))
                           (rule "eqSymm" (formula "38"))
                           (rule "eqSymm" (formula "36") (term "0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                           (rule "mul_literals" (formula "18") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_11_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "38"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                           (rule "times_zero_1" (formula "17") (term "0,0"))
                           (rule "add_zero_left" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_3"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                           (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0"))
                           (rule "commute_and" (formula "1") (term "1,0,0,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "1,0,0,0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                           (rule "commute_and" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "41") (term "0,0"))
                           (branch "CUT: o_11 = null TRUE"
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "false_right" (formula "42"))
                              (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "5") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqRigid" (formula "5") (term "0,1,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "5") (term "1,1,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "5") (term "1,1,0,0,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "41") (term "0"))
                              (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "false_right" (formula "41"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEq" (formula "4") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "4") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,0,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0,0,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_11 = null FALSE"
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "notRight" (formula "42"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "42")))
                              (rule "replace_known_left" (formula "5") (term "0,0,0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "42")))
                              (rule "replace_known_left" (formula "3") (term "0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                              (rule "cut_direct" (formula "41") (term "0"))
                              (branch "CUT: o_11 = a TRUE"
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "replace_known_left" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                 (rule "replace_known_left" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                 (rule "nnf_ex2all" (formula "41"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "commute_and" (formula "4") (term "0,0"))
                                 (rule "commute_and" (formula "6") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "5") (term "0,0"))
                                 (rule "all_pull_out3" (formula "32") (term "0"))
                                 (rule "shift_paren_or" (formula "32") (term "0,0"))
                                 (rule "shift_paren_or" (formula "32") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "32") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "32") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "32") (term "0,0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "31") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0,0"))
                                 (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "31") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " !f_11 = java.lang.Object::<created> & (f_11 = arr(e1) | f_11 = arr(e2)) TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "cut_direct" (formula "3") (term "1"))
                                    (branch "CUT: f_11 = arr(e2) TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "37") (ifseqformula "38"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "4") (ifseqformula "38"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: left >= 1 + e2 TRUE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: left >= 1 + e2 FALSE"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "21") (term "0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: f_11 = arr(e2) FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "applyEq" (formula "40") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "40") (term "1") (ifseqformula "4") (ifseqformula "39"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "37") (ifseqformula "39"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "23"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                       (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0"))
                                       (rule "leq_literals" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                 )
                                 (branch " !f_11 = java.lang.Object::<created> & (f_11 = arr(e1) | f_11 = arr(e2)) FALSE"
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " !f_11 = java.lang.Object::<created> & (f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3)) TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "orRight" (formula "39"))
                                       (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "37") (ifseqformula "41"))
                                       (rule "eqSymm" (formula "42"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "4") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "24"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0"))
                                       (rule "leq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: left >= 1 + e3 TRUE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0"))
                                          (rule "qeq_literals" (formula "39") (term "0"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "24"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch "CUT: left >= 1 + e3 FALSE"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "21") (term "0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "27"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                    )
                                    (branch " !f_11 = java.lang.Object::<created> & (f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3)) FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " !f_11 = java.lang.Object::<created> & ( f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3) | f_11 = arr(e4)) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "42"))
                                          (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "orRight" (formula "40"))
                                          (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "39")))
                                          (rule "applyEq" (formula "43") (term "2,1") (ifseqformula "3"))
                                          (rule "narrowSelectArrayType" (formula "43") (term "1") (ifseqformula "4") (ifseqformula "42"))
                                          (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "37") (ifseqformula "42"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "25"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                          (rule "cut_direct" (formula "1") (term "0"))
                                          (branch "CUT: left >= 1 + e4 TRUE"
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch "CUT: left >= 1 + e4 FALSE"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "38"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "28"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0"))
                                             (rule "add_literals" (formula "29") (term "0"))
                                             (rule "leq_literals" (formula "29"))
                                             (rule "closeFalse" (formula "29"))
                                          )
                                       )
                                       (branch " !f_11 = java.lang.Object::<created> & ( f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3) | f_11 = arr(e4)) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " !f_11 = java.lang.Object::<created> & ( f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3) | f_11 = arr(e4) | f_11 = arr(e5)) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                                             (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                             (rule "false_right" (formula "43"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "39")))
                                             (rule "applyEq" (formula "44") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "44") (term "0") (ifseqformula "37") (ifseqformula "43"))
                                             (rule "eqSymm" (formula "44"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "4") (ifseqformula "42"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0"))
                                             (rule "leq_literals" (formula "38") (term "0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "25"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0"))
                                             (rule "add_literals" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "closeFalse" (formula "24"))
                                          )
                                          (branch " !f_11 = java.lang.Object::<created> & ( f_11 = arr(e1) | f_11 = arr(e2) | f_11 = arr(e3) | f_11 = arr(e4) | f_11 = arr(e5)) FALSE"
                                             (rule "close" (formula "43") (ifseqformula "3"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: o_11 = a FALSE"
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "false_right" (formula "42"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,0,0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                 (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)

}
