<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_6786ff4e-b2b5-4ab5-bb00-7452a1167f49" name="BlockContractWithException[BlockContractWithException::main(int)].JML exceptional_behavior operation contract.0" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_6eb4ae51-8e10-4c55-b8da-36b9771ac62c" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
         <sedMethodCall xml:id="_103865ef-4ccf-43cd-b675-5a33c4c9108f" name="&lt;call BlockContractWithException.main(_x)&gt;" pathCondition="true" lineNumber="-1" charStart="206" charEnd="210" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" groupable="true">
            <sedStatement xml:id="_7d89564c-03ac-4d3d-be72-556f098393f9" name="return magic(_x);" pathCondition="true" lineNumber="-1" charStart="227" charEnd="243" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
               <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
               <sedMethodCall xml:id="_2ad14fed-061b-45da-abba-468ce2521027" name="&lt;call BlockContractWithException.magic(x_3)&gt;" pathCondition="true" lineNumber="-1" charStart="277" charEnd="282" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" groupable="true">
                  <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                  <blockContract xml:id="_f89ebbc4-1ae8-45ed-b338-263cda3f99fd" name="magic()) catch(exc_0)
pre x_3 = 2
post !exc_0 = null
&amp; (   !exc_0 = null
   -&gt;   java.lang.NullPointerException::instance(exc_0)
      = TRUE)
mod {}termination diamond" pathCondition="true" lineNumber="-1" charStart="501" charEnd="593" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" preconditionComplied="true">
                     <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                     <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                     <sedBranchCondition xml:id="_0394143c-39b6-49ac-83ef-f05646767fd0" name="Validity: true" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                        <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                        <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                        <sedBranchStatement xml:id="_de115439-a993-4bb5-a356-ba5d32446246" name="if (x_3==2)" pathCondition="true" lineNumber="-1" charStart="512" charEnd="524" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" groupable="true">
                           <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                           <sedBranchCondition xml:id="_f766a881-1976-4ce7-9cc1-c3ad20ce05b0" name="update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE))" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                              <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                              <sedStatement xml:id="_6ea29a5d-697a-45e6-ad30-83ed70b2bb36" name="throw new NullPointerException ();" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE))" lineNumber="-1" charStart="539" charEnd="572" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                 <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                                 <sedBranchCondition xml:id="_ab1585ce-7551-4714-9995-9096eaa00f2c" name="not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                    <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                                    <sedBranchCondition xml:id="_dfd2bbcf-1939-4f61-84f6-2e348ab62cf2" name="update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE))" pathCondition="and(and(update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                       <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                                       <sedBranchCondition xml:id="_0e24dcad-dd13-4272-b158-9ed3dc8530b5" name="update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),equals(if-then-else(equals(n,null),FALSE,java.lang.Throwable::instance(n)),TRUE))" pathCondition="and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),equals(if-then-else(equals(n,null),FALSE,java.lang.Throwable::instance(n)),TRUE)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                          <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                                          <sedBranchCondition xml:id="_a920516e-a635-484b-9736-2ec966e53495" name="update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),or(equals(n,null),equals(java.lang.Throwable::instance(n),TRUE)))" pathCondition="and(and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),equals(if-then-else(equals(n,null),FALSE,java.lang.Throwable::instance(n)),TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),or(equals(n,null),equals(java.lang.Throwable::instance(n),TRUE))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                             <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                                             <blockContractExceptionalTermination xml:id="_37273a6a-a65a-4e7f-ab1f-4c86698eeb3b" name="&lt;block contract uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),equals(if-then-else(equals(n,null),FALSE,java.lang.Throwable::instance(n)),TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),or(equals(n,null),equals(java.lang.Throwable::instance(n),TRUE))))" lineNumber="-1" charStart="-1" charEnd="-1" verified="true">
                                             </blockContractExceptionalTermination>
                                             <sedGroupEndConditionReference nodeIdRef="_dd1ddf78-1d76-49be-8dfd-e14e77889b2f"/>
                                          </sedBranchCondition>
                                       </sedBranchCondition>
                                    </sedBranchCondition>
                                 </sedBranchCondition>
                              </sedStatement>
                           </sedBranchCondition>
                           <sedGroupEndCondition xml:id="_dd1ddf78-1d76-49be-8dfd-e14e77889b2f" name="and(and(and(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),equals(if-then-else(equals(n,null),FALSE,java.lang.Throwable::instance(n)),TRUE)),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null),n_3,java.lang.Object::&lt;initialized&gt;,TRUE))),elem-update(n)(n_3)),elem-update(x_7)(FALSE)),equals(x_7,FALSE))),not(update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(n_1)(n_3)),elem-update(heap)(store(store(store(create(heap,n_3),n_3,java.lang.Object::&lt;initialized&gt;,FALSE),n_3,java.lang.Throwable::$cause,null),n_3,java.lang.Throwable::$message,null))),equals(n_1,null)))),update-application(parallel-upd(parallel-upd(elem-update(heap_Before_BLOCK)(heap),elem-update(exc_0)(null)),elem-update(x_6)(TRUE)),equals(x_6,TRUE)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                              <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                              <sedChildReference nodeIdRef="_a920516e-a635-484b-9736-2ec966e53495"/>
                           </sedGroupEndCondition>
                        </sedBranchStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_ba990df0-971a-4f6a-b7e6-c77797a7f949" name="Usage: update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null)))))))" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null)))))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                        <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                        <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                        <sedBranchCondition xml:id="_d72ace8d-2f66-42df-a274-419cd9a7b924" name="update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE))" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                           <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                           <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                           <sedExceptionalMethodReturn xml:id="_5538c80f-d320-440d-90f4-9a4c523836d0" name="&lt;throw java.lang.Throwable&gt;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)))" lineNumber="-1" charStart="277" charEnd="282" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" methodReturnConditionRef="_e158cb7d-72e9-4b07-958d-3713bc6ee51d">
                              <sedCallStackEntry nodeIdRef="_2ad14fed-061b-45da-abba-468ce2521027"/>
                              <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                              <sedExceptionalMethodReturn xml:id="_95aa631b-ec60-4a3f-98be-7e0c4783f554" name="&lt;throw java.lang.Throwable&gt;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)))" lineNumber="-1" charStart="206" charEnd="210" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java" methodReturnConditionRef="_c9435cf6-89c3-4d36-93df-8788e9bb6e56">
                                 <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                                 <sedBranchCondition xml:id="_fd29aa22-91c9-4570-aed0-888139e44505" name="update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_5)(FALSE)),equals(x_5,FALSE))" pathCondition="and(and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_5)(FALSE)),equals(x_5,FALSE)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                    <sedBranchCondition xml:id="_0ebf402b-16fb-4395-993c-b0c51b50fc21" name="update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),equals(if-then-else(equals(exc_0,null),FALSE,java.lang.Throwable::instance(exc_0)),TRUE))" pathCondition="and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_5)(FALSE)),equals(x_5,FALSE))),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),equals(if-then-else(equals(exc_0,null),FALSE,java.lang.Throwable::instance(exc_0)),TRUE)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                       <sedBranchCondition xml:id="_a75af132-b173-45d3-95e8-b8c940b5d683" name="update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),or(equals(exc_0,null),equals(java.lang.Throwable::instance(exc_0),TRUE)))" pathCondition="and(and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_5)(FALSE)),equals(x_5,FALSE))),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),equals(if-then-else(equals(exc_0,null),FALSE,java.lang.Throwable::instance(exc_0)),TRUE))),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),or(equals(exc_0,null),equals(java.lang.Throwable::instance(exc_0),TRUE))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                                          <sedExceptionalTermination xml:id="_cc20b83e-e424-464f-bf83-07f5944c3662" name="&lt;uncaught java.lang.Throwable&gt;" pathCondition="and(and(and(and(update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))),update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE))),update-application(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_5)(FALSE)),equals(x_5,FALSE))),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),equals(if-then-else(equals(exc_0,null),FALSE,java.lang.Throwable::instance(exc_0)),TRUE))),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),or(equals(exc_0,null),equals(java.lang.Throwable::instance(exc_0),TRUE))))" lineNumber="-1" charStart="-1" charEnd="-1" verified="true">
                                          </sedExceptionalTermination>
                                       </sedBranchCondition>
                                    </sedBranchCondition>
                                 </sedBranchCondition>
                                 <sedGroupEndConditionReference nodeIdRef="_c9435cf6-89c3-4d36-93df-8788e9bb6e56"/>
                              </sedExceptionalMethodReturn>
                              <sedGroupEndConditionReference nodeIdRef="_e158cb7d-72e9-4b07-958d-3713bc6ee51d"/>
                           </sedExceptionalMethodReturn>
                        </sedBranchCondition>
                     </sedBranchCondition>
                  </blockContract>
                  <sedMethodCallMethodReturnCondition xml:id="_e158cb7d-72e9-4b07-958d-3713bc6ee51d" name="and(update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                     <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                     <sedChildReference nodeIdRef="_5538c80f-d320-440d-90f4-9a4c523836d0"/>
                  </sedMethodCallMethodReturnCondition>
                  <sedGroupEndCondition xml:id="_e158cb7d-72e9-4b07-958d-3713bc6ee51d" name="and(update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
                     <sedCallStackEntry nodeIdRef="_103865ef-4ccf-43cd-b675-5a33c4c9108f"/>
                     <sedChildReference nodeIdRef="_5538c80f-d320-440d-90f4-9a4c523836d0"/>
                  </sedGroupEndCondition>
               </sedMethodCall>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_c9435cf6-89c3-4d36-93df-8788e9bb6e56" name="and(update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
               <sedChildReference nodeIdRef="_95aa631b-ec60-4a3f-98be-7e0c4783f554"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndCondition xml:id="_c9435cf6-89c3-4d36-93df-8788e9bb6e56" name="and(update-application(parallel-upd(parallel-upd(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;))),elem-update(x_4)(TRUE)),equals(x_4,TRUE)),update-application(parallel-upd(parallel-upd(elem-update(heapAtPre)(heap),elem-update(exc)(null)),elem-update(x_3)(Z(2(#)))),update-application(elem-update(heap_Before_BLOCK)(heap),update-application(elem-update(heap)(anon(heap,empty,anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(and(and(and(not(equals(exc_0,null)),imp(not(equals(exc_0,null)),equals(java.lang.NullPointerException::instance(exc_0),TRUE))),wellFormed(anon_heap&lt;&lt;anonHeapFunction&gt;&gt;)),and(inInt(result_0),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE)))),or(equals(exc_0,null),not(equals(exc_0,null))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetProofFileTest_testBlockContractWithException\src\BlockContractWithException.java">
               <sedChildReference nodeIdRef="_95aa631b-ec60-4a3f-98be-7e0c4783f554"/>
            </sedGroupEndCondition>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_37273a6a-a65a-4e7f-ab1f-4c86698eeb3b"/>
         <sedTerminationEntry nodeIdRef="_cc20b83e-e424-464f-bf83-07f5944c3662"/>
      </sedThread>
   </sedTarget>
</launch>
