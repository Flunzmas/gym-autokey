<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_1c197c98-5b5b-479d-a3f2-f57504c48647" name="sum(int[])" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_c734efa4-9569-4492-8e42-c8733f0dcec8" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
         <sedMethodCall xml:id="_2415f1bd-b84d-4427-ba19-41d15976b9d4" name="&lt;call ArraySumWhile.sum(array)&gt;" pathCondition="true" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" groupable="true">
            <sedStatement xml:id="_9683854f-7bf9-4957-8ab3-e43b8396e616" name="int result = 0;" pathCondition="true" lineNumber="-1" charStart="188" charEnd="203" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
               <sedStatement xml:id="_10389f7f-e338-425e-bc76-5ac0852625c2" name="int i = 0;" pathCondition="true" lineNumber="-1" charStart="207" charEnd="217" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                  <sedLoopInvariant xml:id="_84e4fbb4-e2aa-4dfb-84e4-017e4a572931" name="invariant: i &gt;= 0
&amp; i &lt;= array.length
&amp; result_1 = javaCastInt(bsum{int j;}(0, i, array[j]));
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" lineNumber="-1" charStart="407" charEnd="471" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" initiallyValid="true">
                     <sedBranchCondition xml:id="_5a7ec1a5-a3c2-4739-a04e-35a436f514d8" name="Body Preserves Invariant: update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))))" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                        <sedBranchCondition xml:id="_54ada9d5-aad0-461b-8b81-22e013c41a8f" name="not(update-application(elem-update(x_2)(i_0),equals(array,null)))" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),not(update-application(elem-update(x_2)(i_0),equals(array,null))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                           <sedLoopCondition xml:id="_a1f8d46f-0e41-476d-ad24-158b00243b60" name="i&lt;array.length" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),not(update-application(elem-update(x_2)(i_0),equals(array,null))))" lineNumber="-1" charStart="414" charEnd="430" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" groupable="false">
                              <sedStatement xml:id="_b9cd1f92-1fb9-4c63-9ac5-75c0beb94469" name="result_1+=array[i];" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),not(update-application(elem-update(x_2)(i_0),equals(array,null))))" lineNumber="-1" charStart="438" charEnd="457" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                                 <sedStatement xml:id="_4db62023-aca9-4dfa-8b50-fe7b8cac3210" name="i++;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),not(update-application(elem-update(x_2)(i_0),equals(array,null))))" lineNumber="-1" charStart="462" charEnd="466" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                                    <sedLoopBodyTermination xml:id="_b504ff5b-1a09-499a-a9c1-006204902778" name="&lt;loop body end&gt;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),not(update-application(elem-update(x_2)(i_0),equals(array,null))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" verified="true">
                                    </sedLoopBodyTermination>
                                 </sedStatement>
                              </sedStatement>
                           </sedLoopCondition>
                        </sedBranchCondition>
                        <sedBranchCondition xml:id="_c8886b9f-1d4a-49ce-83f6-d663e51a4ac7" name="update-application(elem-update(x_2)(i_0),equals(array,null))" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),update-application(elem-update(x_2)(i_0),equals(array,null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                           <sedLoopCondition xml:id="_d9c5024b-7a8e-466a-88b5-67cd23c7f3b7" name="i&lt;array.length" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),update-application(elem-update(x_2)(i_0),equals(array,null)))" lineNumber="-1" charStart="414" charEnd="430" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" groupable="false">
                              <sedExceptionalMethodReturn xml:id="_c9c7048d-8304-4539-8e87-fa6d66d166dc" name="&lt;throw java.lang.Throwable&gt;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),update-application(elem-update(x_2)(i_0),equals(array,null)))" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" methodReturnConditionRef="_b020f560-8763-41d1-a2fe-710c87c42fed">
                                 <sedExceptionalTermination xml:id="_be0d8d6d-1e3b-4d2c-835d-6a2eaa8cfde2" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))),update-application(elem-update(x_2)(i_0),equals(array,null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" verified="true">
                                 </sedExceptionalTermination>
                                 <sedGroupEndConditionReference nodeIdRef="_b020f560-8763-41d1-a2fe-710c87c42fed"/>
                              </sedExceptionalMethodReturn>
                           </sedLoopCondition>
                        </sedBranchCondition>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_87dce4bc-7e36-4f4b-9b96-f2d753780938" name="Use Case: update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                        <sedStatement xml:id="_75dbd72f-741a-4df1-aae2-c1e23197e6e2" name="return result_1;" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" lineNumber="-1" charStart="475" charEnd="489" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
                           <sedMethodReturn xml:id="_ae8b6720-abcc-420a-ba12-48e83fcc51ad" name="&lt;return of sum&gt;" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" methodReturnConditionRef="_a2834c9e-4de8-45ac-afcc-677660e354f9">
                              <sedTermination xml:id="_f9044cbf-61c8-4659-ae21-a0d8584b1d8c" name="&lt;end&gt;" pathCondition="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java" verified="true">
                              </sedTermination>
                              <sedGroupEndConditionReference nodeIdRef="_a2834c9e-4de8-45ac-afcc-677660e354f9"/>
                           </sedMethodReturn>
                        </sedStatement>
                     </sedBranchCondition>
                  </sedLoopInvariant>
               </sedStatement>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_b020f560-8763-41d1-a2fe-710c87c42fed" name="and(update-application(elem-update(x_2)(i_0),equals(array,null)),update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
               <sedChildReference nodeIdRef="_c9c7048d-8304-4539-8e87-fa6d66d166dc"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_a2834c9e-4de8-45ac-afcc-677660e354f9" name="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
               <sedChildReference nodeIdRef="_ae8b6720-abcc-420a-ba12-48e83fcc51ad"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndCondition xml:id="_b020f560-8763-41d1-a2fe-710c87c42fed" name="and(update-application(elem-update(x_2)(i_0),equals(array,null)),update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(parallel-upd(elem-update(heapBefore_LOOP)(heap),elem-update(iBefore_LOOP)(i)),elem-update(result_1Before_LOOP)(result_1)),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),update-application(elem-update(variant)(javaSubInt(length(array),i)),\[{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\] (and(equals(b,TRUE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1))))))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
               <sedChildReference nodeIdRef="_c9c7048d-8304-4539-8e87-fa6d66d166dc"/>
            </sedGroupEndCondition>
            <sedGroupEndCondition xml:id="_a2834c9e-4de8-45ac-afcc-677660e354f9" name="update-application(parallel-upd(parallel-upd(elem-update(exc)(null),elem-update(result_1)(Z(0(#)))),elem-update(i)(Z(0(#)))),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=sum(int[])@ArraySumWhile): {
    boolean b = i&lt;array.length;
  }
}\&gt; (and(equals(b,FALSE),and(and(and(geq(i,Z(0(#))),leq(i,length(array))),equals(result_1,javaCastInt(bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))),and(inInt(i),inInt(result_1)))))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotLaunchDefaultPreferencesTest_testDoNotHidingOfFullBranchConditions\src\ArraySumWhile.java">
               <sedChildReference nodeIdRef="_ae8b6720-abcc-420a-ba12-48e83fcc51ad"/>
            </sedGroupEndCondition>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_b504ff5b-1a09-499a-a9c1-006204902778"/>
         <sedTerminationEntry nodeIdRef="_be0d8d6d-1e3b-4d2c-835d-6a2eaa8cfde2"/>
         <sedTerminationEntry nodeIdRef="_f9044cbf-61c8-4659-ae21-a0d8584b1d8c"/>
      </sedThread>
   </sedTarget>
</launch>
