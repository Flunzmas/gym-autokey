\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed May 18 10:36:51 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Wed May 18 10:36:51 CEST 2016
name=BlockContractPreconditionNotVerified[BlockContractPreconditionNotVerified\\:\\:main(int)].JML normal_behavior operation contract.0
contract=BlockContractPreconditionNotVerified[BlockContractPreconditionNotVerified\\:\\:main(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "232")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "x,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
(rule "elementOfSetMinus" (formula "4") (term "0,0,0,0,1,0,1"))
(builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
(builtin "One Step Simplification" (formula "4"))
(rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
(rule "methodCallWithAssignmentWithinClass" (formula "4") (term "1") (inst "#v0=x_2"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic"))
(builtin "One Step Simplification" (formula "4"))
(builtin "Block Contract" (formula "4") (newnames "returned,result_0,exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (builtin "One Step Simplification" (formula "5"))
   (rule "translateJavaUnaryMinusInt" (formula "5") (term "1,1,1,0,0,1"))
   (rule "equal_literals" (formula "4"))
   (rule "closeFalse" (formula "4"))
)
(branch "Precondition"
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (rule "equal_literals" (formula "4"))
   (rule "false_right" (formula "4"))
   (opengoal " ")
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "1,1,1,0,0"))
   (rule "neg_literal" (formula "4") (term "1,1,1,0,0"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "replace_known_left" (formula "7") (term "0,1,1") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
   (rule "true_left" (formula "7"))
   (rule "ifSplit" (formula "7"))
   (branch "if returned true"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
      (rule "true_left" (formula "1"))
      (rule "blockReturn" (formula "7") (term "1"))
      (rule "methodCallReturn" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "6"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallReturn" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "tryEmpty" (formula "7") (term "1"))
      (rule "emptyModality" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "closeTrue" (formula "7"))
   )
   (branch "if returned false"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
