\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 18 10:13:08 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Jul 18 10:13:08 CEST 2016
name=ObservableArray(java.lang.Object[])
addSymbolicExecutionLabel=true
addUninterpretedPredicate=true
class=de.uka.ilkd.key.symbolic_execution.po.ProgramMethodPO
method=ObservableArray\\#ObservableArray(java.lang.Object[])
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "490635660")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,SETAccumulate"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_ObservableArray,savedHeapBefore_ObservableArray"))
(builtin "One Step Simplification" (formula "3"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "equality_comparison_simple" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "throwUnfold" (formula "3") (term "1") (inst "#v0=i"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "i"))
   (rule "instanceCreationAssignmentUnfoldArguments" (formula "3") (term "1"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "var"))
   (rule "stringAssignment" (formula "3") (term "1"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate2" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "sequentialToParallel2" (formula "5"))
   (rule "simplifyUpdate3" (formula "5") (term "1,0"))
   (rule "instanceCreationAssignment" (formula "5") (term "1") (inst "#v0=i_1"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "i_1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "5") (term "1") (inst "#v0=i_2"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "i_2"))
   (rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
   (rule "simplifyUpdate2" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "5") (term "1") (inst "#v0=i_3"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "i_3"))
   (rule "allocateInstance" (formula "5"))
   (rule "false_to_not_true" (formula "1") (term "1,1,0,1"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5"))
   (rule "concrete_impl_1" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "blockEmpty" (formula "8") (term "1"))
   (rule "assignment" (formula "8") (term "1"))
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "assignment_write_attribute_this" (formula "8") (term "1"))
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "applyOnElementary" (formula "8") (term "1,0"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "8") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "8") (term "3,0,1,0"))
   (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "8") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "8") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "8") (term "1,0,1,0"))
   (rule "methodCallWithinClass" (formula "8") (term "1"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
   (rule "simplifyUpdate2" (formula "8") (term "1"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "blockEmpty" (formula "8") (term "1"))
   (rule "assignment_write_attribute_this" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "assignment_write_attribute_this" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "blockEmpty" (formula "8") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "8") (term "1"))
   (rule "methodCallReturn" (formula "8") (term "1"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (rule "blockEmpty" (formula "8") (term "1"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "var_1"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "arg0"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "arg0_1"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallSuper" (formula "8") (term "1"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "arg0_2"))
   (rule "assignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCall" (formula "8") (term "1") (newnames "target"))
   (branch "Normal Execution (this != null )"
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
      (rule "false_right" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "arg0_3"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "arg1"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "target"))
      (rule "delete_unnecessary_cast" (formula "8") (term "1"))
      (branch "Normal Execution (i_1 instanceof java.lang.Throwable)"
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "methodCallSuper" (formula "8") (term "1"))
         (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "assignment_write_attribute_this" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "assignment_write_attribute_this" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "assignment_write_attribute_this" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "emptyStatement" (formula "8") (term "1"))
         (rule "assignment_write_attribute_this" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "emptyStatement" (formula "8") (term "1"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "assignment_write_attribute" (formula "8") (term "1"))
         (branch "Normal Execution (i_1 != null)"
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
            (rule "false_right" (formula "8"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "assignment" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "blockEmpty" (formula "8") (term "1"))
            (rule "blockThrow" (formula "8") (term "1"))
            (rule "methodCallThrow" (formula "8") (term "1"))
            (rule "tryCatchThrow" (formula "8") (term "1"))
            (rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
            (rule "equality_comparison_simple" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "replace_known_right" (formula "8") (term "0,0,1,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "ifElseSplit" (formula "8"))
            (branch "if x_1 true"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_1 false"
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "ifElseSplit" (formula "8"))
               (branch "if i instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "8") (term "1") (newnames "e"))
                  (rule "delete_unnecessary_cast" (formula "8") (term "1"))
                  (branch "Normal Execution (i instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "assignment" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "emptyModality" (formula "8") (term "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEq" (formula "8") (term "2") (ifseqformula "3"))
                     (opengoal " ")
                  )
                  (branch "ClassCastException (!(i instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "closeTrue" (formula "8"))
                  )
               )
               (branch "if i instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (i_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "ClassCastException (!(i_1 instanceof java.lang.Throwable))"
         (builtin "One Step Simplification" (formula "8"))
         (rule "closeTrue" (formula "8"))
      )
   )
   (branch "Null Reference (this = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "assignment_write_attribute_this" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "assignment_write_attribute_this" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (opengoal " ")
)
)

}
