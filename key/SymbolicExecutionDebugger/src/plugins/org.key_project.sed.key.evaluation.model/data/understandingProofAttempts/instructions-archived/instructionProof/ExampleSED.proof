\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 14 13:44:05 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=9000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Jul 14 13:44:05 CEST 2015
name=Example[Example\\:\\:magic(int,Example,Example)].JML normal_behavior operation contract.0
addSymbolicExecutionLabel=true
contract=Example[Example\\:\\:magic(int,Example,Example)].JML normal_behavior operation contract.0
addUninterpretedPredicate=true
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "928855168")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "x,f,s,exc,heapAtPre,SETAccumulate,o,f_0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,0,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "3"))
(rule "elementOfSingleton" (formula "7") (term "0,0,0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic,_fBefore_magic,_sBefore_magic,_xBefore_magic"))
(builtin "One Step Simplification" (formula "7"))
(rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x_1"))
(rule "less_than_comparison_simple" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "ifSplit" (formula "7"))
(branch "if x_1 true"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "inEqSimp_ltToLeq" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "throwUnfold" (formula "8") (term "1") (inst "#v0=e"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "e"))
   (rule "instanceCreationAssignmentUnfoldArguments" (formula "8") (term "1"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "var"))
   (rule "stringAssignment" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "8"))
   (rule "instanceCreationAssignment" (formula "9") (term "1") (inst "#v0=e_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "e_1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=e_2"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "e_2"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=e_3"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "e_3"))
   (rule "allocateInstance" (formula "9"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "1,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "eqSymm" (formula "1") (term "1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
   (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "assignment_write_attribute_this" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallWithinClass" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment_write_attribute_this" (formula "12") (term "1"))
   (rule "castDel" (formula "12") (term "1,0,0,1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "assignment_write_attribute_this" (formula "12") (term "1"))
   (rule "castDel" (formula "12") (term "1,0,0,1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "12") (term "1"))
   (rule "methodCallReturn" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallEmpty" (formula "12") (term "1"))
   (rule "blockEmpty" (formula "12") (term "1"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallSuper" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "arg0"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCall" (formula "12") (term "1"))
   (branch "Normal Execution (this != null )"
      (builtin "One Step Simplification" (formula "12"))
      (rule "castDel" (formula "12") (term "0"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "arg0_1"))
      (rule "assignment" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "arg1"))
      (rule "assignment" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallSuper" (formula "12") (term "1"))
      (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "assignment_write_attribute_this" (formula "12") (term "1"))
      (rule "castDel" (formula "12") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "assignment_write_attribute_this" (formula "12") (term "1"))
      (rule "castDel" (formula "12") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "assignment_write_attribute_this" (formula "12") (term "1"))
      (rule "castDel" (formula "12") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "emptyStatement" (formula "12") (term "1"))
      (rule "assignment_write_attribute_this" (formula "12") (term "1"))
      (rule "castDel" (formula "12") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "emptyStatement" (formula "12") (term "1"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "assignment_write_attribute" (formula "12") (term "1"))
      (branch "Normal Execution (e_1 != null)"
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")))
         (rule "false_right" (formula "12"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "assignment" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "blockEmpty" (formula "12") (term "1"))
         (rule "blockThrow" (formula "12") (term "1") (newnames "heapBefore_decrease_0"))
         (rule "methodCallThrow" (formula "12") (term "1"))
         (rule "tryCatchThrow" (formula "12") (term "1"))
         (rule "ifElseUnfold" (formula "12") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
         (rule "equality_comparison_simple" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "ifElseSplit" (formula "12"))
         (branch "if x_3 true"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_3 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "ifElseSplit" (formula "12"))
            (branch "if e instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "e_4"))
               (rule "reference_type_cast" (formula "12") (term "1"))
               (branch "Normal Execution (e instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "emptyModality" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")))
                  (rule "false_right" (formula "12"))
                  (opengoal " ")
               )
               (branch "ClassCastException (!(e instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "closeTrue" (formula "12"))
               )
            )
            (branch "if e instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (e_1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (this = null)"
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "0"))
      (rule "close" (formula "9") (ifseqformula "1"))
   )
)
(branch "if x_1 false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_ltRight" (formula "5"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (builtin "Loop Invariant" (formula "8") (newnames "variant,b,heapBefore_LOOP,_xBefore_LOOP,_x_0,heap_After_LOOP,anon_heap_LOOP,o,f_0"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "8"))
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "impRight" (formula "10"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "b_2"))
      (rule "greater_than_comparison_simple" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_gtToGeq" (formula "8") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,1,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,1,0"))
      (rule "methodCallEmpty" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "emptyModality" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "notRight" (formula "8"))
      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
      (rule "leq_literals" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "thrownExc"))
      (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "ifSplit" (formula "10"))
      (branch "if x_2 true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_gtToGeq" (formula "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_decrease,result,exc_0,heapAfter_decrease,anon_heap_decrease") (contract "Example[Example::decrease(int)].JML normal_behavior operation contract.0"))
         (branch "Post (decrease)"
            (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "eqSymm" (formula "11"))
            (rule "polySimp_elimSub" (formula "11") (term "0"))
            (rule "mul_literals" (formula "11") (term "1,0"))
            (rule "eqSymm" (formula "11"))
            (rule "polySimp_addComm0" (formula "11") (term "1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "11"))
            (rule "tryEmpty" (formula "14") (term "1"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "emptyModality" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "1,0,0,1,0,0"))
            (rule "precOfInt" (formula "14") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,1,1,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,1,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,1,1,0"))
            (rule "leq_literals" (formula "14") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0"))
            (rule "mul_literals" (formula "14") (term "1,1,0"))
            (rule "cut_direct" (formula "14") (term "0,0,0"))
            (branch "CUT: (_x_0 >= 2)<<F(\"11.0\")>> TRUE"
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
               (rule "leq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "cut_direct" (formula "14") (term "1"))
               (branch "CUT: SETAccumulate(heapAfter_decrease, null, s, f, -2 + _x_0) TRUE"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "allRight" (formula "15") (inst "sk=f_0_2"))
                  (rule "allRight" (formula "15") (inst "sk=o_2"))
                  (rule "orRight" (formula "15"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_2_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "17"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "14"))
                     (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "19"))
                     (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                     (rule "closeTrue" (formula "18"))
                  )
                  (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
               )
               (branch "CUT: SETAccumulate(heapAfter_decrease, null, s, f, -2 + _x_0) FALSE"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "false_right" (formula "15"))
                  (opengoal " ")
               )
            )
            (branch "CUT: (_x_0 >= 2)<<F(\"11.0\")>> FALSE"
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
               (rule "false_right" (formula "15"))
               (rule "inEqSimp_geqRight" (formula "14"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "1"))
               (rule "add_literals" (formula "11") (term "1"))
               (opengoal " ")
            )
         )
         (branch "Exceptional Post (decrease)"
            (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (decrease)"
            (builtin "One Step Simplification" (formula "10"))
            (rule "wellFormedAnon" (formula "10"))
            (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "if x_2 false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_gtRight" (formula "8"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "b_1"))
      (rule "greater_than_comparison_simple" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "impRight" (formula "10"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "applyEqRigid" (formula "10") (term "0,0,1,0") (ifseqformula "7"))
      (rule "assignment_write_attribute" (formula "10") (term "1"))
      (branch "Normal Execution (_f != null)"
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
         (rule "false_right" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "methodCallEmpty" (formula "10") (term "1"))
         (rule "tryEmpty" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "1,0,0,1"))
         (rule "eqSymm" (formula "10") (term "1,0,0"))
         (rule "pullOutSelect" (formula "10") (term "0,0,0,0") (inst "selectSK=Example_value_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "11") (term "0,0,0,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "10") (term "0,0,0") (inst "selectSK=Example_value_1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "11") (term "0,0"))
         (rule "eqSymm" (formula "1") (term "0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=Example_value_2"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "6")))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "commute_and" (formula "11") (term "0"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "s = f TRUE"
            (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "9") (term "2,0,0") (ifseqformula "1"))
            (rule "cut_direct" (formula "9") (term "1,0"))
            (branch "CUT: (f.value = 0)<<F(\"1.5\", \"6.0;1.2\")>> TRUE"
               (builtin "One Step Simplification" (formula "10"))
               (rule "cut_direct" (formula "10") (term "0"))
               (branch "CUT: SETAccumulate(heap[anon({}, anon_heap_LOOP<<anonHeapFunction>>)] [f.value := 0], null, f, f, 0)<<F(\"5.1\", \"6.0\")>> TRUE"
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "allRight" (formula "11") (inst "sk=f_0_1"))
                  (rule "allRight" (formula "11") (inst "sk=o_1"))
                  (rule "orRight" (formula "11"))
                  (rule "orRight" (formula "11"))
                  (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_0_1_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "CUT: SETAccumulate(heap[anon({}, anon_heap_LOOP<<anonHeapFunction>>)] [f.value := 0], null, f, f, 0)<<F(\"5.1\", \"6.0\")>> FALSE"
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (opengoal " ")
               )
            )
            (branch "CUT: (f.value = 0)<<F(\"1.5\", \"6.0;1.2\")>> FALSE"
               (builtin "One Step Simplification" (formula "10"))
               (rule "false_right" (formula "10"))
               (opengoal " ")
            )
         )
         (branch "s = f FALSE"
            (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "cut_direct" (formula "11") (term "0"))
            (branch "CUT: SETAccumulate(heap[anon({}, anon_heap_LOOP<<anonHeapFunction>>)] [f.value := 0], null, s, f, 0)<<F(\"5.1\", \"6.0\")>> TRUE"
               (builtin "One Step Simplification" (formula "12"))
               (rule "allRight" (formula "12") (inst "sk=f_0_0"))
               (rule "allRight" (formula "12") (inst "sk=o_0"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_0_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: SETAccumulate(heap[anon({}, anon_heap_LOOP<<anonHeapFunction>>)] [f.value := 0], null, s, f, 0)<<F(\"5.1\", \"6.0\")>> FALSE"
               (builtin "One Step Simplification" (formula "12"))
               (rule "false_right" (formula "12"))
               (opengoal " ")
            )
         )
      )
      (branch "Null Reference (_f = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
