\profile "Java with Permissions Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Nov 17 16:15:26 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Nov 17 16:15:26 CET 2015
name=MyClass[MyClass\\:\\:method3()].JML normal_behavior operation contract.0
contract=MyClass[MyClass\\:\\:method3()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "611770474")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,permissionsAtPre,o,f,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "13") (term "1,0,0,0,1,0,1"))
(rule "eqSymm" (formula "13") (term "0,0,1,1,0,1"))
(rule "createdOnHeapImpliesCreatedOnPermissions" (formula "4") (term "0") (ifseqformula "1") (ifseqformula "2") (ifseqformula "7") (ifseqformula "3"))
(builtin "One Step Simplification" (formula "4"))
(rule "true_left" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "writePermission" (formula "9") (term "1,0"))
(rule "readPermission" (formula "8"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "12") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_MyClass" (formula "7") (ifseqformula "4"))
(rule "notLeft" (formula "7"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_method3,savedHeapBefore_method3,permissionsBefore_method3"))
(builtin "One Step Simplification" (formula "12"))
(rule "for_to_while" (formula "12") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "i"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
(rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "true_left" (formula "9"))
(rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1,1,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "13"))
(builtin "One Step Simplification" (formula "9"))
(rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "1"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "1"))
(opengoal " ")
)

}
