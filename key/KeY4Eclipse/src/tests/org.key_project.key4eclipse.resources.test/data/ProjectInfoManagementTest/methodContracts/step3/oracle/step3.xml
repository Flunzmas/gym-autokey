<?xml version="1.0" encoding="windows-1252"?>
<project name="ProjectInfoManagementTest_testMethodContracts">
   <package name="(default package)" path="/ProjectInfoManagementTest_testMethodContracts/src">
      <type name="ClassWithoutPackage" path="/ProjectInfoManagementTest_testMethodContracts/src/ClassWithoutPackage.java">
         <method displayName="ClassWithoutPackage()" name="ClassWithoutPackage" declaringType="ClassWithoutPackage" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/ClassWithoutPackage.java" parameterTypes="">
         </method>
         <method displayName="m()" name="m" declaringType="ClassWithoutPackage" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/ClassWithoutPackage.java" parameterTypes="">
            <contract name="ClassWithoutPackage[ClassWithoutPackage::m()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__m()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__m()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="ClassWithoutPackage[ClassWithoutPackage::m()].JML operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__m()]_JML_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__m()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="n()" name="n" declaringType="ClassWithoutPackage" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/ClassWithoutPackage.java" parameterTypes="">
            <contract name="ClassWithoutPackage[ClassWithoutPackage::n()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__n()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__n()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="ClassWithoutPackage[ClassWithoutPackage::n()].JML exceptional_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__n()]_JML_exceptional_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__n()]_JML_exceptional_behavior_operation_contract_0.proofmeta"/>
         </method>
      </type>
   </package>
   <package name="hello" path="/ProjectInfoManagementTest_testMethodContracts/src/hello">
      <type name="ClassInHello" path="/ProjectInfoManagementTest_testMethodContracts/src/hello/ClassInHello.java">
         <method displayName="ClassInHello()" name="ClassInHello" declaringType="hello.ClassInHello" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/ClassInHello.java" parameterTypes="">
         </method>
         <method displayName="m()" name="m" declaringType="hello.ClassInHello" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/ClassInHello.java" parameterTypes="">
            <contract name="hello.ClassInHello[hello.ClassInHello::m()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__m()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__m()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="hello.ClassInHello[hello.ClassInHello::m()].JML operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__m()]_JML_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__m()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="n()" name="n" declaringType="hello.ClassInHello" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/ClassInHello.java" parameterTypes="">
            <contract name="hello.ClassInHello[hello.ClassInHello::n()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__n()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__n()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="hello.ClassInHello[hello.ClassInHello::n()].JML exceptional_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__n()]_JML_exceptional_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__n()]_JML_exceptional_behavior_operation_contract_0.proofmeta"/>
         </method>
      </type>
   </package>
   <package name="hello.world" path="/ProjectInfoManagementTest_testMethodContracts/src/hello/world">
      <type name="ClassInHelloWorld" path="/ProjectInfoManagementTest_testMethodContracts/src/hello/world/ClassInHelloWorld.java">
         <method displayName="ClassInHelloWorld()" name="ClassInHelloWorld" declaringType="hello.world.ClassInHelloWorld" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/world/ClassInHelloWorld.java" parameterTypes="">
         </method>
         <method displayName="m()" name="m" declaringType="hello.world.ClassInHelloWorld" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/world/ClassInHelloWorld.java" parameterTypes="">
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::m()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__m()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__m()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::m()].JML operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__m()]_JML_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__m()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="n()" name="n" declaringType="hello.world.ClassInHelloWorld" declaringFilePath="/ProjectInfoManagementTest_testMethodContracts/src/hello/world/ClassInHelloWorld.java" parameterTypes="">
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::n()].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__n()]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__n()]_JML_normal_behavior_operation_contract_0.proofmeta"/>
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::n()].JML exceptional_behavior operation contract.0" modality="DIAMOND" proofFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__n()]_JML_exceptional_behavior_operation_contract_0.proof" metaFilePath="/ProjectInfoManagementTest_testMethodContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__n()]_JML_exceptional_behavior_operation_contract_0.proofmeta"/>
         </method>
      </type>
   </package>
</project>
