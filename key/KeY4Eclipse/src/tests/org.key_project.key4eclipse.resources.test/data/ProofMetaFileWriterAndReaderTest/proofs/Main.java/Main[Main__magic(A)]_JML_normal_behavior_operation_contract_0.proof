\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Aug 27 10:11:21 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:off , assertions-assertions\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , modelFields-modelFields\\:showSatisfiability , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:allow , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\classpath "../../libSpec";

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Wed Aug 27 10:11:21 CEST 2014
name=Main[Main\\:\\:magic(A)].JML normal_behavior operation contract.0
contract=Main[Main\\:\\:magic(A)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "94")

(branch "dummy ID"
(rule "translateJavaAddInt" (formula "1") (term "1,0,0,0,1,1") (newnames "heapAtPre"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,0,0,1,1"))
(rule "polySimp_addLiterals" (formula "1") (term "1,0,0,0,1,1"))
(rule "add_literals" (formula "1") (term "1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "6") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "first_1"))
(rule "methodCallWithAssignment" (formula "6") (term "1") (inst "#v0=x"))
(branch "Normal Execution (_a != null)"
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
   (rule "false_right" (formula "6"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
   (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_magic_0,savedHeapBefore_magic_0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "methodCallReturn" (formula "6") (term "1"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "methodCallEmpty" (formula "6") (term "1"))
   (rule "blockEmpty" (formula "6") (term "1"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "second_1"))
   (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_contractMagic,result_0,exc_0") (contract "A[A::contractMagic()].JML normal_behavior operation contract.0"))
   (branch "Post (contractMagic)"
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "third"))
      (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "6"))
      (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_identityHashCode,result_1,exc_1") (contract "System[System::identityHashCode(java.lang.Object)].JML normal_behavior operation contract.0"))
      (branch "Post (identityHashCode)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "8"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "8"))
         (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
         (rule "compound_addition_1" (formula "10") (term "1") (inst "#v=x_2"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
         (rule "assignmentAdditionInt" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
         (rule "add_literals" (formula "10") (term "0,1,0"))
         (rule "assignmentAdditionInt" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
         (rule "add_literals" (formula "10") (term "0,1,0"))
         (rule "methodCallReturn" (formula "10") (term "1"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "methodCallEmpty" (formula "10") (term "1"))
         (rule "tryEmpty" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
      (branch "Exceptional Post (identityHashCode)"
         (builtin "One Step Simplification" (formula "7"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "close" (formula "10") (ifseqformula "9"))
      )
      (branch "Pre (identityHashCode)"
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "2")))
         (rule "closeTrue" (formula "8"))
      )
   )
   (branch "Exceptional Post (contractMagic)"
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "5"))
      (rule "notLeft" (formula "5"))
      (rule "close" (formula "8") (ifseqformula "7"))
   )
   (branch "Pre (contractMagic)"
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
      (rule "closeTrue" (formula "6"))
   )
   (branch "Null reference (_a = null)"
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "Null Reference (_a = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "closeFalse" (formula "1"))
)
)

}
