{
  "UpdateApplication": [
    "update-application"
  ],
  "UpdateJunctor": [
    "parallel-upd"
  ],
  "ElementaryUpdate": [
    "elem-update(x_12)",
    "elem-update(exc#64_1)",
    "elem-update(lless)",
    "elem-update(_k)",
    "elem-update(exc#46_1)",
    "elem-update(splitPoint)",
    "elem-update(heapBefore_Object)",
    "elem-update(_v)",
    "elem-update(k_1)",
    "elem-update(heapBefore_ArrayList)",
    "elem-update(o_arr_2)",
    "elem-update(heapBefore_enlarge)",
    "elem-update(heap_Before_BLOCK_1)",
    "elem-update(_c1)",
    "elem-update(x_arr_5)",
    "elem-update(e_1)",
    "elem-update(t)",
    "elem-update(var_15)",
    "elem-update(o_arr)",
    "elem-update(_rightBefore_sort)",
    "elem-update(o2)",
    "elem-update(_b)",
    "elem-update(x_15)",
    "elem-update(result)",
    "elem-update(heapBefore_setX)",
    "elem-update(heapBefore_size_0)",
    "elem-update(heapBefore_head)",
    "elem-update(heapBefore_getBalance)",
    "elem-update(heapBefore_generateByteArray)",
    "elem-update(x)",
    "elem-update(heapBefore_insertionSort)",
    "elem-update(_value)",
    "elem-update(heapBefore_move_great_left_in_loop)",
    "elem-update(x_10)",
    "elem-update(l_3)",
    "elem-update(res)",
    "elem-update(break_0)",
    "elem-update(c)",
    "elem-update(exc)",
    "elem-update(_leftBefore_sort)",
    "elem-update(_length_0)",
    "elem-update(heapBefore_sort_1)",
    "elem-update(heapBefore_move_great_left)",
    "elem-update(j_Before_BLOCK#38)",
    "elem-update(heapBefore_move_great_left_0)",
    "elem-update(exc#87_1)",
    "elem-update(m)",
    "elem-update(a_Before_BLOCK#17)",
    "elem-update(x_1)",
    "elem-update(_g)",
    "elem-update(heapBefore_calcE)",
    "elem-update(tmp)",
    "elem-update(heapBefore_alloc_unsigned_0)",
    "elem-update(i_1)",
    "elem-update(heapBefore_value)",
    "elem-update(heapBefore_MyClass)",
    "elem-update(exc#7_1)",
    "elem-update(self_1)",
    "elem-update(heapBefore_alloc_unsigned)",
    "elem-update(x_arr_3)",
    "elem-update(_e1)",
    "elem-update(_pivot2)",
    "elem-update(o_1)",
    "elem-update(z)",
    "elem-update(var_12)",
    "elem-update(heapBefore_t_0_helper)",
    "elem-update(r)",
    "elem-update(e)",
    "elem-update(c_1)",
    "elem-update(var_10)",
    "elem-update(o3)",
    "elem-update(var_1)",
    "elem-update(heapAtPreBefore)",
    "elem-update(exc#22_1)",
    "elem-update(m_3)",
    "elem-update(a)",
    "elem-update(heapBefore_getBalance_0)",
    "elem-update(M)",
    "elem-update(b_1)",
    "elem-update(_right)",
    "elem-update(x_6)",
    "elem-update(newArray)",
    "elem-update(_x)",
    "elem-update(_d)",
    "elem-update(heapBefore_swap_0)",
    "elem-update(n_2)",
    "elem-update(max_1)",
    "elem-update(result_1)",
    "elem-update(x_29)",
    "elem-update(heapBefore_SparseArray_0)",
    "elem-update(_aBefore_move_great_left)",
    "elem-update(var_16)",
    "elem-update(big)",
    "elem-update(s)",
    "elem-update(heapBefore_a_0)",
    "elem-update(kBefore_LOOP)",
    "elem-update(_aBefore_move_less_right)",
    "elem-update(c1)",
    "elem-update(_aBefore_split)",
    "elem-update(exc#1_1)",
    "elem-update(o_arr_1)",
    "elem-update(x_8)",
    "elem-update(x_7)",
    "elem-update(x_arr)",
    "elem-update(node)",
    "elem-update(k)",
    "elem-update(heapBefore_a_1)",
    "elem-update(_pos)",
    "elem-update(heapBefore_getNext_0)",
    "elem-update(heapBefore_add27)",
    "elem-update(_from)",
    "elem-update(array)",
    "elem-update(_o)",
    "elem-update(len)",
    "elem-update(var_2)",
    "elem-update(l_1)",
    "elem-update(_left)",
    "elem-update(n)",
    "elem-update(_index_0)",
    "elem-update(var_14)",
    "elem-update(exc#16_1)",
    "elem-update(_n)",
    "elem-update(a_3)",
    "elem-update(heapBefore_size)",
    "elem-update(heapBefore_search)",
    "elem-update(heapBefore_sort_2)",
    "elem-update(length_1)",
    "elem-update(x_26)",
    "elem-update(var_3)",
    "elem-update(l)",
    "elem-update(var_13)",
    "elem-update(heapBefore_remFirst)",
    "elem-update(heapBefore_set)",
    "elem-update(x_22)",
    "elem-update(_aBefore_swapValues)",
    "elem-update(heapBefore_set_0)",
    "elem-update(var_17)",
    "elem-update(_a)",
    "elem-update(brk)",
    "elem-update(exc#52_1)",
    "elem-update(small)",
    "elem-update(x_arr_4)",
    "elem-update(variant)",
    "elem-update(q)",
    "elem-update(s_1)",
    "elem-update(heapBefore_remove)",
    "elem-update(lgreat)",
    "elem-update(newArr)",
    "elem-update(r_1)",
    "elem-update(_c2)",
    "elem-update(_leftBefore_LOOP)",
    "elem-update(var_7)",
    "elem-update(x_30)",
    "elem-update(heap_Before_BLOCK_2)",
    "elem-update(heapBefore_NullPointerException)",
    "elem-update(_c)",
    "elem-update(heapBefore_reverse)",
    "elem-update(_list)",
    "elem-update(x_18)",
    "elem-update(_len)",
    "elem-update(heapBefore_undo)",
    "elem-update(heapBefore_LinkedList)",
    "elem-update(heapAtPre)",
    "elem-update(_i)",
    "elem-update(heapBefore_lem_gNNNexpand2)",
    "elem-update(m_2)",
    "elem-update(_e4)",
    "elem-update(_r)",
    "elem-update(a_1)",
    "elem-update(x_13)",
    "elem-update(_y)",
    "elem-update(x_4)",
    "elem-update(_z)",
    "elem-update(newObject)",
    "elem-update(c2)",
    "elem-update(ak_1)",
    "elem-update(_aBefore_case_right)",
    "elem-update(y)",
    "elem-update(_l)",
    "elem-update(iBefore_LOOP)",
    "elem-update(heapBefore_s_0_helper)",
    "elem-update(ak)",
    "elem-update(heapBefore_swap)",
    "elem-update(idx)",
    "elem-update(e5)",
    "elem-update(_other)",
    "elem-update(lr)",
    "elem-update(currentSmall)",
    "elem-update(x_19)",
    "elem-update(heapBefore_eInsertionSort)",
    "elem-update(currentBig)",
    "elem-update(heapBefore_callAdd)",
    "elem-update(f)",
    "elem-update(x_23)",
    "elem-update(i_Before_BLOCK#34)",
    "elem-update(x_5)",
    "elem-update(exc_2)",
    "elem-update(n_1)",
    "elem-update(s_3)",
    "elem-update(n_4)",
    "elem-update(temp)",
    "elem-update(heap)",
    "elem-update(heapBefore_Cell_0)",
    "elem-update(heapBefore_newArray)",
    "elem-update(heapBefore_get)",
    "elem-update(heapBefore_LinkedList_0)",
    "elem-update(heapBefore_split)",
    "elem-update(heapBefore_getNextContractNN)",
    "elem-update(_array)",
    "elem-update(x_arr_2)",
    "elem-update(x_14)",
    "elem-update(heapBefore_reverse_0)",
    "elem-update(_e5)",
    "elem-update(heapBefore_add)",
    "elem-update(_elem)",
    "elem-update(n_5)",
    "elem-update(e1)",
    "elem-update(i)",
    "elem-update(_iBefore_method)",
    "elem-update(exc#82_1)",
    "elem-update(exc_1)",
    "elem-update(_size)",
    "elem-update(heapBefore_ArrayListIterator)",
    "elem-update(_pivot1)",
    "elem-update(_e2)",
    "elem-update(exc#80_1)",
    "elem-update(x_2)",
    "elem-update(self)",
    "elem-update(heapBefore_callSet)",
    "elem-update(exc#37_1)",
    "elem-update(x_arr_9)",
    "elem-update(pivot)",
    "elem-update(o_arr_3)",
    "elem-update(node2)",
    "elem-update(board)",
    "elem-update(x_25)",
    "elem-update(x_34)",
    "elem-update(heapBefore_alloc)",
    "elem-update(_pivot)",
    "elem-update(heapBefore_concat)",
    "elem-update(heapBefore_getNext)",
    "elem-update(mid)",
    "elem-update(var_6)",
    "elem-update(heapBefore_loop2)",
    "elem-update(heap_Before_BLOCK_0)",
    "elem-update(e3)",
    "elem-update(m_1)",
    "elem-update(exc#15_1)",
    "elem-update(x_arr_7)",
    "elem-update(heapBefore_mul_0)",
    "elem-update(heapBefore_SparseArray)",
    "elem-update(var_4)",
    "elem-update(heapBefore_Cell)",
    "elem-update(_to)",
    "elem-update(heapBefore_concat_0)",
    "elem-update(heapBefore_move_less_right)",
    "elem-update(heapBefore_sort_0)",
    "elem-update(x_11)",
    "elem-update(seventh)",
    "elem-update(_j)",
    "elem-update(exc#33_1)",
    "elem-update(b_Before_BLOCK#16)",
    "elem-update(_tail)",
    "elem-update(exc#9_1)",
    "elem-update(heapBefore)",
    "elem-update(x_arr_8)",
    "elem-update(heapBefore_commonEntry)",
    "elem-update(heapBefore_cons)",
    "elem-update(_board)",
    "elem-update(heap_Before_BLOCK)",
    "elem-update(x_27)",
    "elem-update(l_4)",
    "elem-update(heapBefore_callAdd_0)",
    "elem-update(heapBefore_swapValues)",
    "elem-update(p)",
    "elem-update(x_33)",
    "elem-update(heapBefore_setX_0)",
    "elem-update(e4)",
    "elem-update(l_2)",
    "elem-update(x_24)",
    "elem-update(x_arr_6)",
    "elem-update(x_arr_1)",
    "elem-update(oldo)",
    "elem-update(_val)",
    "elem-update(heapBefore_getLength)",
    "elem-update(x_16)",
    "elem-update(x_17)",
    "elem-update(x_3)",
    "elem-update(_end)",
    "elem-update(x_9)",
    "elem-update(s_2)",
    "elem-update(arr_1)",
    "elem-update(a_2)",
    "elem-update(_e3)",
    "elem-update(x_21)",
    "elem-update(jj)",
    "elem-update(var_5)",
    "elem-update(j)",
    "elem-update(i_2)",
    "elem-update(heapBefore_length)",
    "elem-update(var)",
    "elem-update(var_11)",
    "elem-update(x_28)",
    "elem-update(p_1)",
    "elem-update(_arrayBefore_split)",
    "elem-update(heapBefore_case_right)",
    "elem-update(e2)",
    "elem-update(heapBefore_LOOP)",
    "elem-update(heapBefore_<init>)"
  ],
  "Function": [
    "hasNext_sk_0",
    "anonHeap",
    "9",
    "heapAfter_search",
    "TRUE",
    "SparseArray::$footprint",
    "anon_heap_alloc_unsigned",
    "f_7",
    "null",
    "heapAfter_eInsertionSort",
    "MyClass::$attr",
    "heapAfter_alloc_unsigned_0",
    "Node::$data",
    "anon_heap_sort",
    "Node::$head",
    "int_MAX",
    "s_0",
    "anon_heap_callAdd_0",
    "heapAfter_newArray",
    "anon_heap_cons",
    "LinkedList_repr_4",
    "create",
    "AmortizedQueue::$front",
    "SinglePivotPartition_less_2",
    "anon_heap_get",
    "unsatcore_after.competition.postcond5.scope333.SuffixArray::$a",
    "lt",
    "heapAfter_prepare_indices",
    "#",
    "heapAfter_move_less_right",
    "DualPivotQuicksort::$great",
    "For::$it",
    "Harness_b_0",
    "Node::$seq",
    "SparseArray::$n",
    "LinkedList_repr_5",
    "heapAfter_reverse",
    "LinkedList_repr_1",
    "Perm::$a",
    "javaDivInt",
    "anon_heap_insertionSort",
    "anon_heap_newArray",
    "LinkedList_seq_0",
    "heapAfter_callAdd_0",
    "LinkedList_seq_3",
    "anon_heap_sort_1",
    "anon_heap_move_great_left_0",
    "ParseLmtd::$c",
    "anon_heap_set_0",
    "LinkedList::$first",
    "LinkedList_repr_7",
    "seqEmpty",
    "anon_heap_mul",
    "heapAfter_ArrayListIterator",
    "javaSubInt",
    "Z",
    "heapAfter_move_great_left_in_loop",
    "anonOut_big",
    "SparseArray::$idx",
    "LinkedList::$seq",
    "add",
    "SinglePivotPartition::$great",
    "anonOut_heap",
    "ThreeWayQs::$pivot",
    "measuredBy",
    "currentSmall_0",
    "seqSub",
    "ThreeWayQs::$great",
    "ListNN::$next",
    "anon_heap_Cell",
    "heapAfter_concat",
    "anon_heap_add27",
    "DualPivotQuicksort::$e4",
    "anonOut_len",
    "f1",
    "javaCastInt",
    "heapAfter_a_0",
    "anonIn_e4",
    "SwapValues::$pivot1",
    "LinkedList_seq_9",
    "heapAfter_get",
    "m_2",
    "heapAfter_callAdd",
    "jdiv",
    "ArrayList_a_0",
    "Perm::$c",
    "SwapValues::$pivot2",
    "c",
    "heapAfter_a",
    "Node::$next",
    "union",
    "allObjects",
    "LinkedList::$length",
    "leq",
    "anon_heap_set",
    "short_MIN",
    "f",
    "anonIn_e1",
    "anon_heap_callAdd",
    "java_lang_Object_created__0",
    "allLocs",
    "heapAfter_swap",
    "j_0",
    "paycard.LogRecord::$empty",
    "DualPivotQuicksort::$less",
    "anon_heap_value",
    "seqPerm",
    "MyClient::$mc",
    "anonOut__b",
    "anon_heap_LOOP",
    "arr_12",
    "ArrayList::$size",
    "LinkedList_repr_3",
    "SimplifiedLinkedList::$size",
    "heapAfter_set_0",
    "ArrayList.ArrayListIterator::$arrayPos",
    "attr",
    "anon_heap_MyClass",
    "s7",
    "heapAfter_MyClass",
    "subset",
    "k_0",
    "SumAndMax::$sum",
    "anon_heap_move_great_left_in_loop",
    "m",
    "anon_heap_case_right",
    "seqLen",
    "dataGroup",
    "SimplifiedLinkedList::$first",
    "heapAfter_callSet",
    "ParseLmtd::$next",
    "seqNPerm",
    "SparseArray_footprint_3",
    "Node_repr_0",
    "arr_9",
    "heapAfter_undo",
    "MyClass::$attr2",
    "heapAtPre",
    "m_0",
    "javaUnaryMinusInt",
    "anon_heap_setX_0",
    "heapAfter_add27",
    "size_sk_0",
    "anonIn_e2",
    "y_1",
    "Cell::$val",
    "heapAfter_setX",
    "Recell::$oval",
    "heapAfter_head",
    "anon_heap_eInsertionSort",
    "m_1",
    "jmod",
    "heapAfter_swap_0",
    "0",
    "LinkedList_seq_5",
    "SITA3::$a1",
    "SparseArray_size_4",
    "2",
    "heapAfter_insertionSort",
    "SparseArray_footprint_4",
    "seqSingleton",
    "arr_1",
    "inShort",
    "empty",
    "anon_heap_alloc_unsigned_0",
    "gt",
    "DualPivotQuicksort::$e5",
    "SparseArray_size_3",
    "ThreeWayQs::$less",
    "s1",
    "measuredByCheck",
    "anon_heap_NullPointerException",
    "neglit",
    "heapAfter_case_right",
    "anonOut_z",
    "heapAfter_Cell_0",
    "anon_heap_ArrayList",
    "java.lang.Object::<created>",
    "SwapValues_less_4",
    "anon_heap_swap_0",
    "arrayRange",
    "unsatcore_after.competition.postcond5.scope333.LRS::$s",
    "ArrayList::$items",
    "arr",
    "unsatcore_after.competition.postcond5.scope333.LRS::$l",
    "MySet::$list",
    "java.lang.Object::<transient>",
    "paycard.LogFile::$logArray",
    "unsatcore_after.competition.postcond5.scope333.LRS::$sa",
    "anonOut_heap_0",
    "s3",
    "arr_3",
    "array2seq",
    "Person::$age",
    "heapAfter_getLength",
    "n",
    "elementOf",
    "heapAfter_sort_0",
    "LinkedList_seq_8",
    "heapAfter_SparseArray_0",
    "Node::$repr",
    "heapAfter_sort",
    "anonOut__j",
    "anon_heap_ArrayListIterator",
    "arr_10",
    "s5",
    "anonOut_currentBig",
    "SinglePivotPartition::$less",
    "For::$f",
    "disjoint",
    "reach",
    "anon_heap_SparseArray_0",
    "ListNN::$value",
    "neg",
    "anon",
    "arr_6",
    "anon_heap_move_less_right",
    "SparseArray::$val",
    "anonOut__a",
    "AmortizedQueue::$seq",
    "seqDef",
    "anon_heap_Cell_0",
    "LinkedList_repr_0",
    "DualPivotQuicksort::$e2",
    "Perm::$b",
    "measuredByEmpty",
    "paycard.LogFile::$currentRecord",
    "Iterator::$index",
    "heapAfter_mul",
    "anon_heap_search",
    "anonOut_array",
    "q",
    "ArrayList::$count",
    "javaAddIntOverFlow",
    "anon_heap_LinkedList",
    "heapAfter_value",
    "modAtPre",
    "Perm::$perm",
    "arrayStoreValid",
    "seqGetOutside",
    "arr_14",
    "heapAfter_add",
    "anon_heap_head",
    "allFields",
    "unsatcore_after.competition.postcond5.scope333.SuffixArray::$suffixes",
    "LinkedList_seq_4",
    "LinkedList_seq_2",
    "heapAfter_NullPointerException",
    "arr_11",
    "5",
    "anon_heap_sort_0",
    "infiniteUnion",
    "SparseArray_footprint_5",
    "l_0",
    "heapAfter_alloc",
    "arr_8",
    "SimplifiedLinkedList::$nodeseq",
    "LinkedList::$size",
    "s6",
    "heapAfter_cons",
    "1",
    "heapAfter_ArrayList",
    "anonIn_e5",
    "AmortizedQueue_front_0",
    "java.lang.Throwable::$message",
    "s8",
    "freshLocs",
    "anon_heap_commonEntry",
    "AmortizedQueue::$repr",
    "Perm::$pIdx",
    "anon_heap_a",
    "size_sk_1",
    "LinkedList_repr_2",
    "SparseArray::$size",
    "heapAfter_calcE",
    "paycard.LogRecord::$balance",
    "anon_heap_LinkedList_0",
    "For::$a",
    "o_7",
    "7",
    "heapAfter_size",
    "LinkedList_repr_8",
    "ParseLmtd::$f",
    "p",
    "anon_heap_concat",
    "List::$seq",
    "heapAfter_length",
    "anon_heap_size",
    "LinkedList_seq_1",
    "Cell::$x",
    "6",
    "8",
    "i_0",
    "anon_heap_undo",
    "SwapValues::$less",
    "3",
    "heapAfter_move_great_left_0",
    "r_0",
    "inInt",
    "Client::$x",
    "store",
    "java.lang.Throwable::$cause",
    "anonIn_e3",
    "Harness::$a",
    "anon_heap_swap",
    "length",
    "anon_heap_alloc",
    "geq",
    "heapAfter_LinkedList",
    "i_1",
    "anonOut__i",
    "s4",
    "ArrayList::$a",
    "SparseArray::$back",
    "DualPivotQuicksort::$e1",
    "currentBig_0",
    "anonOut_heap_2",
    "ReverseArray::$a",
    "heapAfter_commonEntry",
    "anonOut_small",
    "anon_heap_prepare_indices",
    "Subject::$observers",
    "anon_heap_calcE",
    "arr_5",
    "arr_13",
    "setMinus",
    "MyClient::$i",
    "SparseArray_size_6",
    "AmortizedQueue::$rear",
    "anon_heap_enlarge",
    "SITA3::$a2",
    "anon_heap_getLength",
    "LinkedList::$last",
    "next",
    "anon_heap",
    "anon_heap_callSet",
    "paycard.LogRecord::$transactionCounter",
    "arr_0",
    "heapAfter_LinkedList_0",
    "javaMod",
    "heapAfter_Cell",
    "ArrayList.ArrayListIterator::$arrayList",
    "ExampleObserver::$cache",
    "ExampleObserver::$subj",
    "javaAddInt",
    "LinkedList::$head",
    "DualPivotQuicksort::$e3",
    "anon_heap_setX",
    "heapAfter_setX_0",
    "pair",
    "heapAfter_set",
    "o",
    "anon_heap_a_0",
    "_left_0",
    "anon_heap_add",
    "seqReverse",
    "javaSubIntOverFlow",
    "anonIn_heap",
    "sub",
    "heapAfter_enlarge",
    "memset",
    "p_1",
    "seqConcat",
    "anon_heap_length",
    "y_0",
    "SparseArray_size_5",
    "anon_heap_SparseArray",
    "heapAfter_sort_1",
    "unsatcore_after.competition.postcond5.scope333.LRS::$t",
    "anonOut__z",
    "arr_2",
    "ArrayList::$array",
    "FALSE",
    "arr_4",
    "Iterator::$list",
    "bsum",
    "SumAndMax::$max",
    "LinkedList::$repr",
    "anonOut_heap_1",
    "heapAfter_split",
    "List::$footprint",
    "SwapValues::$great",
    "anon_heap_reverse",
    "heapAfter_alloc_unsigned",
    "idx_0",
    "bprod",
    "anon_heap_split",
    "SinglePivotPartition::$pivot",
    "ExampleSubject::$value",
    "intersect",
    "g",
    "j_1",
    "max_1_0",
    "s2",
    "heapAfter_Object",
    "prec",
    "x_0",
    "int_MIN",
    "anonIn_a",
    "wellFormed",
    "java.lang.Object::<initialized>",
    "modelField",
    "p_0",
    "singleton",
    "x_9",
    "heapAfter_move_great_left",
    "heapAfter_SparseArray",
    "arr_7",
    "java.lang.Object::<transactionConditionallyUpdated>",
    "anon_heap_move_great_left",
    "Stack::$contents",
    "LinkedList::$tail",
    "a",
    "Harness::$b",
    "4",
    "mul",
    "Node_seq_0",
    "empty_sk_0",
    "anon_heap_Object",
    "paycard.LogRecord::$transactionId"
  ],
  "LocationVariable": [
    "elem",
    "exc_0",
    "t",
    "r_3",
    "x_arr_6",
    "exc#46",
    "var_3",
    "list",
    "a_5",
    "exc#15",
    "n_4",
    "_e3",
    "x_26",
    "x_33",
    "x_24",
    "exc_6",
    "heapBefore_move_great_left",
    "a_4",
    "exc#33_1",
    "_from",
    "exc#52_1",
    "exc#64_1",
    "from",
    "m",
    "v",
    "val",
    "_z",
    "pivot1",
    "e4",
    "s",
    "s_1",
    "heapAtPreBefore",
    "heapBefore_<init>",
    "heapAtPre",
    "x_2",
    "self_0",
    "exc#3",
    "size",
    "x_19",
    "exc#64",
    "_e2",
    "exc",
    "e_1",
    "_a",
    "_rightBefore_sort",
    "exc_1",
    "x_25",
    "pos",
    "_k",
    "o1",
    "o_arr_3",
    "r",
    "var_11",
    "o",
    "o2",
    "o_arr_2",
    "p1",
    "_c",
    "x_10",
    "m_1",
    "_e5",
    "o_arr_1",
    "s_2",
    "h",
    "max_1",
    "exc#16_1",
    "x_arr_1",
    "big",
    "_to",
    "_leftBefore_LOOP",
    "_v",
    "_len",
    "x_arr",
    "len",
    "self_1",
    "var",
    "x_6",
    "length_0",
    "x_5",
    "_o",
    "left",
    "exc#52",
    "e",
    "var_7",
    "k",
    "_j",
    "lgreat",
    "to",
    "i_2",
    "exc#1_1",
    "var_4",
    "exc#1",
    "exc_5",
    "heapBefore_swapValues",
    "x_23",
    "heapBefore_case_right",
    "lless",
    "_aBefore_case_right",
    "n_1",
    "_end",
    "x_17",
    "_b",
    "var_1",
    "exc#7",
    "rtrn#1",
    "p_1",
    "heapBefore_move_less_right",
    "y",
    "result#86",
    "l_2",
    "x_29",
    "x_arr_4",
    "p",
    "r_1",
    "heapBefore_loop2",
    "heap_Before_BLOCK_1",
    "_array",
    "_aBefore_move_great_left",
    "node2",
    "leftmost",
    "exc#37_1",
    "var_16",
    "var_5",
    "exc#46_1",
    "sz",
    "x_arr_8",
    "heap_Before_BLOCK_0",
    "lr",
    "end",
    "heapBefore_generateByteArray",
    "p2",
    "_length_0",
    "pivot",
    "a_1",
    "exc#29",
    "j_Before_BLOCK#38",
    "var_2",
    "exc#16",
    "x_11",
    "l_arr_3",
    "x_21",
    "currentBig",
    "_pivot",
    "self",
    "i_Before_BLOCK#34",
    "j",
    "x_arr_2",
    "_right",
    "exc#11",
    "o_1",
    "var_10",
    "_d",
    "exc#82_1",
    "tail",
    "c1",
    "z",
    "heap_Before_BLOCK",
    "x_34",
    "mid",
    "l_4",
    "length_1",
    "exc#6",
    "i_1",
    "right",
    "exc#87_1",
    "exc#7_1",
    "n",
    "index_0",
    "x_arr_7",
    "_r",
    "c_1",
    "i_4",
    "l_5",
    "a_Before_BLOCK#17",
    "variant",
    "exc#82",
    "_x",
    "result#81",
    "x_4",
    "x",
    "i_3",
    "m_2",
    "_pivot1",
    "_arrayBefore_split",
    "_l",
    "_y",
    "g",
    "x_16",
    "k_1",
    "x_1",
    "heap",
    "b_Before_BLOCK#16",
    "self_2",
    "_i",
    "x_3",
    "exc#87",
    "var_15",
    "exc#37",
    "array",
    "heap_Before_BLOCK_2",
    "c",
    "c2",
    "currentSmall",
    "a2",
    "_index_0",
    "a_2",
    "b_1",
    "x_arr_9",
    "small",
    "result_1",
    "x_27",
    "_other",
    "e3",
    "exc#9",
    "exc#15_1",
    "heapBefore_reverse",
    "heapBefore",
    "_aBefore_move_less_right",
    "e1",
    "_c2",
    "l_1",
    "x_13",
    "x_7",
    "x_8",
    "i",
    "x_arr_3",
    "x_9",
    "exc#80",
    "_leftBefore_sort",
    "idx",
    "_pivot2",
    "board",
    "heapBefore_split",
    "a_3",
    "b",
    "_tail",
    "_g",
    "d",
    "l_3",
    "x_15",
    "n_3",
    "_e1",
    "e5",
    "result",
    "exc#22",
    "exc#9_1",
    "x_18",
    "s_3",
    "n_5",
    "a1",
    "_list",
    "x_28",
    "exc#22_1",
    "exc_4",
    "a",
    "x_arr_5",
    "o3",
    "heapBefore_LOOP",
    "_c1",
    "other",
    "var_14",
    "var_12",
    "_left",
    "_e4",
    "value",
    "a3",
    "exc#33",
    "l",
    "exc_3",
    "e2",
    "_aBefore_split",
    "_aBefore_swapValues",
    "exc_2",
    "pivot2",
    "result_0",
    "brk#6",
    "o_arr",
    "n_2",
    "var_6",
    "newObject",
    "exc#80_1"
  ],
  "Equality": [
    "equiv",
    "equals"
  ],
  "Junctor": [
    "or",
    "false",
    "imp",
    "and",
    "true",
    "not"
  ],
  "SortDependingFunction": [
    "java.lang.String::select",
    "Indirect::exactInstance",
    "For.Trivial::select",
    "ArrayList.ArrayListIterator::exactInstance",
    "MyClass::select",
    "unsatcore_after.competition.postcond5.scope333.SuffixArray::select",
    "Seq::select",
    "CellTest::exactInstance",
    "Observer[]::exactInstance",
    "paycard.LogRecord[]::exactInstance",
    "Coll1::exactInstance",
    "ListNN::select",
    "ListOperationsNonNull::exactInstance",
    "ParseLmtd::select",
    "SimplifiedLinkedList::exactInstance",
    "Ackermann::exactInstance",
    "java.lang.RuntimeException::exactInstance",
    "SparseArray::exactInstance",
    "java.lang.Error::instance",
    "ArrayList::instance",
    "Node::exactInstance",
    "Node::select",
    "ExampleSubject::exactInstance",
    "ParseLmtd::exactInstance",
    "For::select",
    "Client::exactInstance",
    "CC::exactInstance",
    "SITA3::exactInstance",
    "List::exactInstance",
    "java.lang.IndexOutOfBoundsException::instance",
    "paycard.LogRecord::exactInstance",
    "ExampleObserver::exactInstance",
    "java.lang.NegativeArraySizeException::exactInstance",
    "boolean::select",
    "Coll2::exactInstance",
    "ExampleSubject::select",
    "MyClient::exactInstance",
    "Node::seqGet",
    "OldForParameters::exactInstance",
    "java.lang.Object[]::select",
    "Coll::exactInstance",
    "paycard.LogRecord::select",
    "ReverseArray::exactInstance",
    "any::select",
    "int::select",
    "AddAndMultiply::exactInstance",
    "Observer[]::select",
    "ArrayList::cast",
    "Quicksort::exactInstance",
    "Perm::exactInstance",
    "int[]::exactInstance",
    "MyClass::exactInstance",
    "int[]::select",
    "java.lang.RuntimeException::instance",
    "java.lang.Throwable::select",
    "ExampleSubject::cast",
    "Observer::select",
    "CellClient::exactInstance",
    "AmortizedQueue::exactInstance",
    "int::seqGet",
    "java.lang.ArrayIndexOutOfBoundsException::exactInstance",
    "unsatcore_after.competition.postcond5.scope333.LRS::exactInstance",
    "java.lang.Exception::exactInstance",
    "GSum::exactInstance",
    "java.lang.Object::exactInstance",
    "MySet::exactInstance",
    "Simple::exactInstance",
    "LinkedList::exactInstance",
    "ArrayList::select",
    "java.lang.Object[]::exactInstance",
    "java.lang.NullPointerException::exactInstance",
    "Iterator::exactInstance",
    "LinkedList::select",
    "Cell::exactInstance",
    "Saddleback::exactInstance",
    "byte[]::exactInstance",
    "SparseArray::select",
    "java.lang.Object::select",
    "Stack::exactInstance",
    "SumAndMax::exactInstance",
    "For::exactInstance",
    "paycard.LogRecord[]::select",
    "ListIterator::exactInstance",
    "Observer::exactInstance",
    "java.lang.IndexOutOfBoundsException::exactInstance",
    "ArrayList::exactInstance",
    "any::seqGet",
    "java.lang.Object::instance",
    "Recell::exactInstance",
    "LocSet::select",
    "paycard.LogFile::exactInstance"
  ],
  "Modality": [
    "diamond",
    "box"
  ],
  "Quantifier": [
    "all",
    "exists"
  ],
  "LogicVariable": [
    "t",
    "j",
    "f",
    "k",
    "i",
    "o_0",
    "m",
    "s",
    "i_1",
    "n",
    "y",
    "u",
    "p",
    "iv",
    "x",
    "g",
    "x_1",
    "l",
    "o",
    "o2",
    "i_0",
    "x_0",
    "h"
  ],
  "ObserverFunction": [
    "MySet::$footprint",
    "Iterator::$footprint",
    "MyClass::$footprint",
    "Stack::$footprint",
    "List::$footprint",
    "java.lang.Object::<inv>$lmtd",
    "Subject::$footprint",
    "Observer::$subject",
    "ListIterator::$pos",
    "ParseLmtd::$mf",
    "Observer::$upToDate",
    "List::$theList",
    "Cell::$footprint",
    "ListIterator::$list",
    "java.lang.Object::<inv>",
    "ArrayList::$footprint"
  ],
  "ProgramMethod": [
    "List::size",
    "Cell::post_set",
    "Cell::footprint",
    "Cell::getX",
    "List::get",
    "ArrayList::get",
    "Coll::add_pre",
    "Stack::size",
    "Cell::get",
    "List::contains",
    "ListOperationsNonNull::aCyclic",
    "Iterator::hasNext",
    "MySet::contains",
    "ExampleSubject::value",
    "ListIterator::hasNext",
    "ListOperationsNonNull::getNextContractNN",
    "Iterator::list",
    "ArrayList::size",
    "SparseArray::get"
  ],
  "IfThenElse": [
    "if-then-else"
  ],
  "ProgramConstant": [
    "java.lang.Integer::MAX_VALUE"
  ]
}
